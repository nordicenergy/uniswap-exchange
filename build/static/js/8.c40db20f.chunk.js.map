{"version":3,"sources":["components/OversizedPanel/index.js","assets/images/dropdown-blue.svg","pages/Pool/ModeSelector.js","pages/Pool/index.js"],"names":["Panel","styled","div","theme","concreteGray","PanelTop","PanelBottom","OversizedPanel","hideTop","hideBottom","children","module","exports","poolTabOrder","path","textKey","regex","LiquidityContainer","flexRowNoWrap","royalBlue","LiquidityLabel","span","StyledNavLink","NavLink","attrs","activeClassName","doveGray","white","mercuryGray","PoolModal","withRouter","pathname","location","history","t","useTranslation","useState","modalIsOpen","setModalIsOpen","activeTabKey","findIndex","match","navigate","useCallback","direction","tabIndex","push","length","navigateRight","navigateLeft","useBodyKeyDown","onClick","src","Dropdown","alt","Modal","isOpen","onDismiss","minHeight","map","key","to","isActive","_","AddLiquidity","lazy","RemoveLiquidity","CreateExchange","Pool","useEffect","ReactGA","pageview","window","search","fallback","exact","strict","component","render","state","tokenAddress","params"],"mappings":"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","file":"static/js/8.c40db20f.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.concreteGray};\n  width: calc(100% - 1rem);\n  margin: 0 auto;\n  border-radius: 0.625rem;\n`\n\nconst PanelTop = styled.div`\n  content: '';\n  position: absolute;\n  top: -0.5rem;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst PanelBottom = styled.div`\n  position: absolute;\n  top: 80%;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\n  return (\n    <Panel>\n      {hideTop || <PanelTop />}\n      {children}\n      {hideBottom || <PanelBottom />}\n    </Panel>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/dropdown-blue.b20914ec.svg\";","import React, { useState, useCallback } from 'react'\nimport { withRouter, NavLink } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\n\nimport OversizedPanel from '../../components/OversizedPanel'\nimport Dropdown from '../../assets/images/dropdown-blue.svg'\nimport Modal from '../../components/Modal'\nimport { useBodyKeyDown } from '../../hooks'\n\nconst poolTabOrder = [\n  {\n    path: '/add-liquidity',\n    textKey: 'addLiquidity',\n    regex: /\\/add-liquidity/\n  },\n  {\n    path: '/remove-liquidity',\n    textKey: 'removeLiquidity',\n    regex: /\\/remove-liquidity/\n  },\n  {\n    path: '/create-exchange',\n    textKey: 'createExchange',\n    regex: /\\/create-exchange.*/\n  }\n]\n\nconst LiquidityContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  font-size: 0.75rem;\n  padding: 0.625rem 1rem;\n  font-size: 0.75rem;\n  color: ${({ theme }) => theme.royalBlue};\n  font-weight: 500;\n  cursor: pointer;\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst LiquidityLabel = styled.span`\n  flex: 1 0 auto;\n`\n\nconst activeClassName = 'MODE'\n\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  padding: 1rem;\n  margin-left: 1rem;\n  margin-right: 1rem;\n  font-size: 1rem;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 1rem;\n\n  &.${activeClassName} {\n    background-color: ${({ theme }) => theme.white};\n    border-radius: 3rem;\n    box-shadow: 0 0 0.5px 0.5px ${({ theme }) => theme.mercuryGray};\n    font-weight: 500;\n    color: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst PoolModal = styled.div`\n  background-color: ${({ theme }) => theme.white};\n  width: 100%;\n  height: 100%;\n  padding: 2rem 0 2rem 0;\n`\n\nfunction ModeSelector({ location: { pathname }, history }) {\n  const { t } = useTranslation()\n\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const activeTabKey = poolTabOrder[poolTabOrder.findIndex(({ regex }) => pathname.match(regex))].textKey\n\n  const navigate = useCallback(\n    direction => {\n      const tabIndex = poolTabOrder.findIndex(({ regex }) => pathname.match(regex))\n      history.push(poolTabOrder[(tabIndex + poolTabOrder.length + direction) % poolTabOrder.length].path)\n    },\n    [pathname, history]\n  )\n  const navigateRight = useCallback(() => {\n    navigate(1)\n  }, [navigate])\n  const navigateLeft = useCallback(() => {\n    navigate(-1)\n  }, [navigate])\n\n  useBodyKeyDown('ArrowDown', navigateRight, modalIsOpen)\n  useBodyKeyDown('ArrowUp', navigateLeft, modalIsOpen)\n\n  return (\n    <OversizedPanel hideTop>\n      <LiquidityContainer\n        onClick={() => {\n          setModalIsOpen(true)\n        }}\n      >\n        <LiquidityLabel>{t(activeTabKey)}</LiquidityLabel>\n        <img src={Dropdown} alt=\"dropdown\" />\n      </LiquidityContainer>\n      <Modal\n        isOpen={modalIsOpen}\n        onDismiss={() => {\n          setModalIsOpen(false)\n        }}\n        minHeight={null}\n      >\n        <PoolModal>\n          {poolTabOrder.map(({ path, textKey, regex }) => (\n            <StyledNavLink\n              key={path}\n              to={path}\n              isActive={(_, { pathname }) => pathname.match(regex)}\n              onClick={() => {\n                setModalIsOpen(false)\n              }}\n            >\n              {t(textKey)}\n            </StyledNavLink>\n          ))}\n        </PoolModal>\n      </Modal>\n    </OversizedPanel>\n  )\n}\n\nexport default withRouter(ModeSelector)\n","import React, { Suspense, lazy, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport ModeSelector from './ModeSelector'\n\nconst AddLiquidity = lazy(() => import('./AddLiquidity'))\nconst RemoveLiquidity = lazy(() => import('./RemoveLiquidity'))\nconst CreateExchange = lazy(() => import('./CreateExchange'))\n\nexport default function Pool() {\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  return (\n    <>\n      <ModeSelector />\n      {/* this Suspense is for route code-splitting */}\n      <Suspense fallback={null}>\n        <Switch>\n          <Route exact strict path=\"/add-liquidity\" component={AddLiquidity} />\n          <Route exact strict path=\"/remove-liquidity\" component={RemoveLiquidity} />\n          <Route exact strict path=\"/create-exchange\" component={CreateExchange} />\n          <Route\n            path=\"/create-exchange/:tokenAddress\"\n            render={({ match }) => {\n              return (\n                <Redirect to={{ pathname: '/create-exchange', state: { tokenAddress: match.params.tokenAddress } }} />\n              )\n            }}\n          />\n          <Redirect to=\"/add-liquidity\" />\n        </Switch>\n      </Suspense>\n    </>\n  )\n}\n"],"sourceRoot":""}