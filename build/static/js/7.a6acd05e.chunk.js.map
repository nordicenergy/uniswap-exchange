{"version":3,"sources":["components/OversizedPanel/index.js","assets/images/arrow-down-blue.svg","assets/images/arrow-down-grey.svg","webpack:///./src/assets/images/dropup-blue.svg?fe79","webpack:///./src/assets/images/dropdown-blue.svg?8fdf","components/ContextualInfoNew/index.js","pages/Swap/index.js"],"names":["Panel","styled","div","theme","concreteGray","PanelTop","PanelBottom","OversizedPanel","hideTop","hideBottom","children","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","stroke","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","SummaryWrapper","error","salmonRed","doveGray","SummaryWrapperContainer","flexRowNoWrap","royalBlue","Details","ErrorSpan","span","isError","slippageWarning","highSlippageWarning","css","transparentize","warningYellow","ColoredDropup","rest","ColoredDropdown","ContextualInfo","openDetailsText","closeDetailsText","contextualInfo","allowExpand","renderTransactionDetails","useState","showDetails","setShowDetails","onClick","s","role","aria-label","ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","TOKEN_ALLOWED_SLIPPAGE","GAS_MARGIN","BlueSpan","LastSummaryText","DownArrowBackground","DownArrow","img","clickable","ExchangeRateWrapper","ExchangeRate","chaliceGray","Flex","calculateEtherTokenOutputFromInput","inputAmount","inputReserve","outputReserve","inputAmountWithFee","mul","numerator","denominator","add","calculateEtherTokenInputFromOutput","outputAmount","sub","constants","One","initialSwapState","independentValue","dependentValue","independentField","inputCurrency","outputCurrency","swapStateReducer","state","action","type","payload","field","currency","newInputCurrency","newOutputCurrency","value","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","Swap","t","useTranslation","account","useWeb3Context","addTransaction","useTransactionAdder","useEffect","ReactGA","pageview","window","location","pathname","search","useReducer","swapState","dispatchSwapState","swapType","getSwapType","useTokenDetails","inputSymbol","symbol","decimals","inputExchangeAddress","exchangeAddress","outputSymbol","outputExchangeAddress","inputExchangeContract","useExchangeContract","outputExchangeContract","contract","inputAllowance","useAddressAllowance","useExchangeReserves","inputReserveETH","reserveETH","inputReserveToken","reserveToken","outputReserveETH","outputReserveToken","inputBalance","useAddressBalance","outputBalance","inputBalanceFormatted","Number","isInteger","amountFormatter","Math","min","outputBalanceFormatted","independentDecimals","dependentDecimals","independentValueParsed","setIndependentValueParsed","dependentValueFormatted","inputValueParsed","inputValueFormatted","outputValueParsed","outputValueFormatted","independentError","setIndependentError","parsedValue","parseUnits","lte","Zero","gte","MaxUint256","Error","token","offset","minimum","maximum","lt","gt","calculateSlippageBounds","dependentValueMinumum","dependentValueMaximum","inputError","setInputError","showUnlock","setShowUnlock","inputValueCalculation","amount","calculatedDependentValue","reserveETHFirst","reserveTokenFirst","reserveETHSecond","reserveTokenSecond","intermediateValue","inverted","setInverted","exchangeRate","exchangeRateInverted","marketRate","firstRate","secondRate","undefined","getMarketRate","percentSlippage","abs","percentSlippageFormatted","parseEther","isValid","estimatedText","formatBalance","event","category","b","text","a","deadline","ceil","Date","now","estimate","ethToTokenSwapInput","method","args","tokenToEthSwapInput","tokenToTokenSwapInput","ethToTokenSwapOutput","tokenToEthSwapOutput","tokenToTokenSwapOutput","estimatedGasLimit","gasLimit","calculateGasMargin","then","response","description","extraText","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","selectedTokens","selectedTokenAddress","errorMessage","alt","src","ArrowDownBlue","ArrowDownGrey","disableUnlock","slippageWarningText","renderSummary","disabled","warning"],"mappings":"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","file":"static/js/7.a6acd05e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.concreteGray};\n  width: calc(100% - 1rem);\n  margin: 0 auto;\n  border-radius: 0.625rem;\n`\n\nconst PanelTop = styled.div`\n  content: '';\n  position: absolute;\n  top: -0.5rem;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst PanelBottom = styled.div`\n  position: absolute;\n  top: 80%;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\n  return (\n    <Panel>\n      {hideTop || <PanelTop />}\n      {children}\n      {hideBottom || <PanelBottom />}\n    </Panel>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down-blue.cd061363.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down-grey.c0dedd2f.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M11.4673 6L6.23364 1L0.999995 6\",\n  stroke: \"#388DFF\"\n});\n\nvar SvgDropupBlue = function SvgDropupBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDropupBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropup-blue.b96d70e1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#2F80ED\"\n});\n\nvar SvgDropdownBlue = function SvgDropdownBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDropdownBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown-blue.b20914ec.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { transparentize } from 'polished'\n\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`\n\nconst ErrorSpan = styled.span`\n  margin-right: 12px;\n  font-size: 0.75rem;\n  line-height: 0.75rem;\n\n  color: ${({ isError, theme }) => isError && theme.salmonRed};\n  ${({ slippageWarning, highSlippageWarning, theme }) =>\n    highSlippageWarning\n      ? css`\n          color: ${theme.salmonRed};\n          font-weight: 600;\n        `\n      : slippageWarning &&\n        css`\n          background-color: ${transparentize(0.6, theme.warningYellow)};\n          font-weight: 600;\n          padding: 0.25rem;\n        `}\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ isError, theme }) => isError && theme.salmonRed};\n\n    ${({ highSlippageWarning, theme }) =>\n      highSlippageWarning &&\n      css`\n        stroke: ${theme.salmonRed};\n      `}\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ isError, theme }) => isError && theme.salmonRed};\n\n    ${({ highSlippageWarning, theme }) =>\n      highSlippageWarning &&\n      css`\n        stroke: ${theme.salmonRed};\n      `}\n  }\n`\n\nexport default function ContextualInfo({\n  openDetailsText = 'Transaction Details',\n  closeDetailsText = 'Hide Details',\n  contextualInfo = '',\n  allowExpand = false,\n  renderTransactionDetails = () => {},\n  isError = false,\n  slippageWarning,\n  highSlippageWarning\n}) {\n  const [showDetails, setShowDetails] = useState(false)\n\n  return !allowExpand ? (\n    <SummaryWrapper>{contextualInfo}</SummaryWrapper>\n  ) : (\n    <>\n      <SummaryWrapperContainer onClick={() => setShowDetails(s => !s)}>\n        <>\n          <ErrorSpan isError={isError} slippageWarning={slippageWarning} highSlippageWarning={highSlippageWarning}>\n            {(slippageWarning || highSlippageWarning) && (\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n            )}\n            {contextualInfo ? contextualInfo : showDetails ? closeDetailsText : openDetailsText}\n          </ErrorSpan>\n          {showDetails ? (\n            <ColoredDropup isError={isError} highSlippageWarning={highSlippageWarning} />\n          ) : (\n            <ColoredDropdown isError={isError} highSlippageWarning={highSlippageWarning} />\n          )}\n        </>\n      </SummaryWrapperContainer>\n      {showDetails && <Details>{renderTransactionDetails()}</Details>}\n    </>\n  )\n}\n","import React, { useState, useReducer, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3Context } from 'web3-react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport NewContextualInfo from '../../components/ContextualInfoNew'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport ArrowDownBlue from '../../assets/images/arrow-down-blue.svg'\nimport ArrowDownGrey from '../../assets/images/arrow-down-grey.svg'\nimport { amountFormatter, calculateGasMargin } from '../../utils'\nimport { useExchangeContract } from '../../hooks'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\nimport { useAddressAllowance } from '../../contexts/Allowances'\n\nconst INPUT = 0\nconst OUTPUT = 1\n\nconst ETH_TO_TOKEN = 0\nconst TOKEN_TO_ETH = 1\nconst TOKEN_TO_TOKEN = 2\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\nconst TOKEN_ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(400)\n\n// denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst BlueSpan = styled.span`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst LastSummaryText = styled.div`\n  margin-top: 1rem;\n`\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst DownArrow = styled.img`\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.5rem 1rem;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction calculateSlippageBounds(value, token = false) {\n  if (value) {\n    const offset = value.mul(token ? TOKEN_ALLOWED_SLIPPAGE : ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nfunction getSwapType(inputCurrency, outputCurrency) {\n  if (!inputCurrency || !outputCurrency) {\n    return null\n  } else if (inputCurrency === 'ETH') {\n    return ETH_TO_TOKEN\n  } else if (outputCurrency === 'ETH') {\n    return TOKEN_TO_ETH\n  } else {\n    return TOKEN_TO_TOKEN\n  }\n}\n\n// this mocks the getInputPrice function, and calculates the required output\nfunction calculateEtherTokenOutputFromInput(inputAmount, inputReserve, outputReserve) {\n  const inputAmountWithFee = inputAmount.mul(ethers.utils.bigNumberify(997))\n  const numerator = inputAmountWithFee.mul(outputReserve)\n  const denominator = inputReserve.mul(ethers.utils.bigNumberify(1000)).add(inputAmountWithFee)\n  return numerator.div(denominator)\n}\n\n// this mocks the getOutputPrice function, and calculates the required input\nfunction calculateEtherTokenInputFromOutput(outputAmount, inputReserve, outputReserve) {\n  const numerator = inputReserve.mul(outputAmount).mul(ethers.utils.bigNumberify(1000))\n  const denominator = outputReserve.sub(outputAmount).mul(ethers.utils.bigNumberify(997))\n  return numerator.div(denominator).add(ethers.constants.One)\n}\n\nconst initialSwapState = {\n  independentValue: '', // this is a user input\n  dependentValue: '', // this is a calculated number\n  independentField: INPUT,\n  inputCurrency: 'ETH',\n  outputCurrency: ''\n}\n\nfunction swapStateReducer(state, action) {\n  switch (action.type) {\n    case 'FLIP_INDEPENDENT': {\n      const { independentField, inputCurrency, outputCurrency } = state\n      return {\n        ...state,\n        dependentValue: '',\n        independentField: independentField === INPUT ? OUTPUT : INPUT,\n        inputCurrency: outputCurrency,\n        outputCurrency: inputCurrency\n      }\n    }\n    case 'SELECT_CURRENCY': {\n      const { inputCurrency, outputCurrency } = state\n      const { field, currency } = action.payload\n\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\n\n      if (newInputCurrency === newOutputCurrency) {\n        return {\n          ...state,\n          inputCurrency: field === INPUT ? currency : '',\n          outputCurrency: field === OUTPUT ? currency : ''\n        }\n      } else {\n        return {\n          ...state,\n          inputCurrency: newInputCurrency,\n          outputCurrency: newOutputCurrency\n        }\n      }\n    }\n    case 'UPDATE_INDEPENDENT': {\n      const { field, value } = action.payload\n      const { dependentValue, independentValue } = state\n      return {\n        ...state,\n        independentValue: value,\n        dependentValue: value === independentValue ? dependentValue : '',\n        independentField: field\n      }\n    }\n    case 'UPDATE_DEPENDENT': {\n      return {\n        ...state,\n        dependentValue: action.payload\n      }\n    }\n    default: {\n      return initialSwapState\n    }\n  }\n}\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(\n  swapType,\n  inputReserveETH,\n  inputReserveToken,\n  inputDecimals,\n  outputReserveETH,\n  outputReserveToken,\n  outputDecimals,\n  invert = false\n) {\n  if (swapType === ETH_TO_TOKEN) {\n    return getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals, invert)\n  } else if (swapType === TOKEN_TO_ETH) {\n    return getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18, invert)\n  } else if (swapType === TOKEN_TO_TOKEN) {\n    const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n    const firstRate = getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18)\n    const secondRate = getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals)\n    try {\n      return !!(firstRate && secondRate) ? firstRate.mul(secondRate).div(factor) : undefined\n    } catch {}\n  }\n}\n\nexport default function Swap() {\n  const { t } = useTranslation()\n  const { account } = useWeb3Context()\n\n  const addTransaction = useTransactionAdder()\n\n  // analytics\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  // core swap state\n  const [swapState, dispatchSwapState] = useReducer(swapStateReducer, initialSwapState)\n  const { independentValue, dependentValue, independentField, inputCurrency, outputCurrency } = swapState\n\n  // get swap type from the currency types\n  const swapType = getSwapType(inputCurrency, outputCurrency)\n\n  // get decimals and exchange addressfor each of the currency types\n  const { symbol: inputSymbol, decimals: inputDecimals, exchangeAddress: inputExchangeAddress } = useTokenDetails(\n    inputCurrency\n  )\n  const { symbol: outputSymbol, decimals: outputDecimals, exchangeAddress: outputExchangeAddress } = useTokenDetails(\n    outputCurrency\n  )\n\n  const inputExchangeContract = useExchangeContract(inputExchangeAddress)\n  const outputExchangeContract = useExchangeContract(outputExchangeAddress)\n  const contract = swapType === ETH_TO_TOKEN ? outputExchangeContract : inputExchangeContract\n\n  // get input allowance\n  const inputAllowance = useAddressAllowance(account, inputCurrency, inputExchangeAddress)\n\n  // fetch reserves for each of the currency types\n  const { reserveETH: inputReserveETH, reserveToken: inputReserveToken } = useExchangeReserves(inputCurrency)\n  const { reserveETH: outputReserveETH, reserveToken: outputReserveToken } = useExchangeReserves(outputCurrency)\n\n  // get balances for each of the currency types\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\n    : ''\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\n    : ''\n\n  // compute useful transforms of the data above\n  const independentDecimals = independentField === INPUT ? inputDecimals : outputDecimals\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\n\n  // declare/get parsed and formatted versions of input/output values\n  const [independentValueParsed, setIndependentValueParsed] = useState()\n  const dependentValueFormatted = !!(dependentValue && (dependentDecimals || dependentDecimals === 0))\n    ? amountFormatter(dependentValue, dependentDecimals, Math.min(4, dependentDecimals), false)\n    : ''\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : dependentValue\n  const inputValueFormatted = independentField === INPUT ? independentValue : dependentValueFormatted\n  const outputValueParsed = independentField === OUTPUT ? independentValueParsed : dependentValue\n  const outputValueFormatted = independentField === OUTPUT ? independentValue : dependentValueFormatted\n\n  // validate + parse independent value\n  const [independentError, setIndependentError] = useState()\n  useEffect(() => {\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        } else {\n          setIndependentValueParsed(parsedValue)\n          setIndependentError(null)\n        }\n      } catch {\n        setIndependentError(t('inputNotValid'))\n      }\n\n      return () => {\n        setIndependentValueParsed()\n        setIndependentError()\n      }\n    }\n  }, [independentValue, independentDecimals, t])\n\n  // calculate slippage from target rate\n  const { minimum: dependentValueMinumum, maximum: dependentValueMaximum } = calculateSlippageBounds(\n    dependentValue,\n    swapType === TOKEN_TO_TOKEN\n  )\n\n  // validate input allowance + balance\n  const [inputError, setInputError] = useState()\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    const inputValueCalculation = independentField === INPUT ? independentValueParsed : dependentValueMaximum\n    if (inputBalance && (inputAllowance || inputCurrency === 'ETH') && inputValueCalculation) {\n      if (inputBalance.lt(inputValueCalculation)) {\n        setInputError(t('insufficientBalance'))\n      } else if (inputCurrency !== 'ETH' && inputAllowance.lt(inputValueCalculation)) {\n        setInputError(t('unlockTokenCont'))\n        setShowUnlock(true)\n      } else {\n        setInputError(null)\n        setShowUnlock(false)\n      }\n\n      return () => {\n        setInputError()\n        setShowUnlock(false)\n      }\n    }\n  }, [independentField, independentValueParsed, dependentValueMaximum, inputBalance, inputCurrency, inputAllowance, t])\n\n  // calculate dependent value\n  useEffect(() => {\n    const amount = independentValueParsed\n\n    if (swapType === ETH_TO_TOKEN) {\n      const reserveETH = outputReserveETH\n      const reserveToken = outputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveETH, reserveToken)\n              : calculateEtherTokenInputFromOutput(amount, reserveETH, reserveToken)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_ETH) {\n      const reserveETH = inputReserveETH\n      const reserveToken = inputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveToken, reserveETH)\n              : calculateEtherTokenInputFromOutput(amount, reserveToken, reserveETH)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_TOKEN) {\n      const reserveETHFirst = inputReserveETH\n      const reserveTokenFirst = inputReserveToken\n\n      const reserveETHSecond = outputReserveETH\n      const reserveTokenSecond = outputReserveToken\n\n      if (amount && reserveETHFirst && reserveTokenFirst && reserveETHSecond && reserveTokenSecond) {\n        try {\n          if (independentField === INPUT) {\n            const intermediateValue = calculateEtherTokenOutputFromInput(amount, reserveTokenFirst, reserveETHFirst)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenOutputFromInput(\n              intermediateValue,\n              reserveETHSecond,\n              reserveTokenSecond\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n          } else {\n            const intermediateValue = calculateEtherTokenInputFromOutput(amount, reserveETHSecond, reserveTokenSecond)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenInputFromOutput(\n              intermediateValue,\n              reserveTokenFirst,\n              reserveETHFirst\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n          }\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    }\n  }, [\n    independentValueParsed,\n    swapType,\n    outputReserveETH,\n    outputReserveToken,\n    inputReserveETH,\n    inputReserveToken,\n    independentField,\n    t\n  ])\n\n  const [inverted, setInverted] = useState(false)\n  const exchangeRate = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals)\n  const exchangeRateInverted = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals, true)\n\n  const marketRate = getMarketRate(\n    swapType,\n    inputReserveETH,\n    inputReserveToken,\n    inputDecimals,\n    outputReserveETH,\n    outputReserveToken,\n    outputDecimals\n  )\n\n  const percentSlippage =\n    exchangeRate && marketRate\n      ? exchangeRate\n          .sub(marketRate)\n          .abs()\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(marketRate)\n          .sub(ethers.utils.bigNumberify(3).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(15))))\n      : undefined\n  const percentSlippageFormatted = percentSlippage && amountFormatter(percentSlippage, 16, 2)\n  const slippageWarning =\n    percentSlippage &&\n    percentSlippage.gte(ethers.utils.parseEther('.05')) &&\n    percentSlippage.lt(ethers.utils.parseEther('.2')) // [5% - 20%)\n  const highSlippageWarning = percentSlippage && percentSlippage.gte(ethers.utils.parseEther('.2')) // [20+%\n\n  const isValid = exchangeRate && inputError === null && independentError === null\n\n  const estimatedText = `(${t('estimated')})`\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  function renderTransactionDetails() {\n    ReactGA.event({\n      category: 'TransactionDetail',\n      action: 'Open'\n    })\n\n    const b = text => <BlueSpan>{text}</BlueSpan>\n\n    if (independentField === INPUT) {\n      return (\n        <div>\n          <div>\n            {t('youAreSelling')}{' '}\n            {b(\n              `${amountFormatter(\n                independentValueParsed,\n                independentDecimals,\n                Math.min(4, independentDecimals)\n              )} ${inputSymbol}`\n            )}\n            .\n          </div>\n          <LastSummaryText>\n            {t('youWillReceive')}{' '}\n            {b(\n              `${amountFormatter(\n                dependentValueMinumum,\n                dependentDecimals,\n                Math.min(4, dependentDecimals)\n              )} ${outputSymbol}`\n            )}{' '}\n            {t('orTransFail')}\n          </LastSummaryText>\n          <LastSummaryText>\n            {(slippageWarning || highSlippageWarning) && (\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n            )}\n            {t('priceChange')} {b(`${percentSlippageFormatted}%`)}.\n          </LastSummaryText>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div>\n            {t('youAreBuying')}{' '}\n            {b(\n              `${amountFormatter(\n                independentValueParsed,\n                independentDecimals,\n                Math.min(4, independentDecimals)\n              )} ${outputSymbol}`\n            )}\n            .\n          </div>\n          <LastSummaryText>\n            {t('itWillCost')}{' '}\n            {b(\n              `${amountFormatter(\n                dependentValueMaximum,\n                dependentDecimals,\n                Math.min(4, dependentDecimals)\n              )} ${inputSymbol}`\n            )}{' '}\n            {t('orTransFail')}\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('priceChange')} {b(`${percentSlippageFormatted}%`)}.\n          </LastSummaryText>\n        </div>\n      )\n    }\n  }\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n\n    if (inputError || independentError) {\n      contextualInfo = inputError || independentError\n      isError = true\n    } else if (!inputCurrency || !outputCurrency) {\n      contextualInfo = t('selectTokenCont')\n    } else if (!independentValue) {\n      contextualInfo = t('enterValueCont')\n    } else if (!account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    const slippageWarningText = highSlippageWarning\n      ? t('highSlippageWarning')\n      : slippageWarning\n      ? t('slippageWarning')\n      : ''\n\n    return (\n      <NewContextualInfo\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo ? contextualInfo : slippageWarningText}\n        allowExpand={!!(inputCurrency && outputCurrency && inputValueParsed && outputValueParsed)}\n        isError={isError}\n        slippageWarning={slippageWarning && !contextualInfo}\n        highSlippageWarning={highSlippageWarning && !contextualInfo}\n        renderTransactionDetails={renderTransactionDetails}\n      />\n    )\n  }\n\n  async function onSwap() {\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    let estimate, method, args, value\n    if (independentField === INPUT) {\n      ReactGA.event({\n        category: `${swapType}`,\n        action: 'SwapInput'\n      })\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = contract.estimate.ethToTokenSwapInput\n        method = contract.ethToTokenSwapInput\n        args = [dependentValueMinumum, deadline]\n        value = independentValueParsed\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = contract.estimate.tokenToEthSwapInput\n        method = contract.tokenToEthSwapInput\n        args = [independentValueParsed, dependentValueMinumum, deadline]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = contract.estimate.tokenToTokenSwapInput\n        method = contract.tokenToTokenSwapInput\n        args = [independentValueParsed, dependentValueMinumum, ethers.constants.One, deadline, outputCurrency]\n        value = ethers.constants.Zero\n      }\n    } else if (independentField === OUTPUT) {\n      ReactGA.event({\n        category: `${swapType}`,\n        action: 'SwapOutput'\n      })\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = contract.estimate.ethToTokenSwapOutput\n        method = contract.ethToTokenSwapOutput\n        args = [independentValueParsed, deadline]\n        value = dependentValueMaximum\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = contract.estimate.tokenToEthSwapOutput\n        method = contract.tokenToEthSwapOutput\n        args = [independentValueParsed, dependentValueMaximum, deadline]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = contract.estimate.tokenToTokenSwapOutput\n        method = contract.tokenToTokenSwapOutput\n        args = [independentValueParsed, dependentValueMaximum, ethers.constants.MaxUint256, deadline, outputCurrency]\n        value = ethers.constants.Zero\n      }\n    }\n\n    const estimatedGasLimit = await estimate(...args, { value })\n    method(...args, { value, gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN) }).then(response => {\n      addTransaction(response)\n    })\n  }\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('input')}\n        description={inputValueFormatted && independentField === OUTPUT ? estimatedText : ''}\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\n        extraTextClickHander={() => {\n          if (inputBalance && inputDecimals) {\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              dispatchSwapState({\n                type: 'UPDATE_INDEPENDENT',\n                payload: { value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false), field: INPUT }\n              })\n            }\n          }\n        }}\n        onCurrencySelected={inputCurrency => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: inputCurrency, field: INPUT } })\n        }}\n        onValueChange={inputValue => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValue, field: INPUT } })\n        }}\n        showUnlock={showUnlock}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={inputCurrency}\n        value={inputValueFormatted}\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\n            }}\n            clickable\n            alt=\"swap\"\n            src={isValid ? ArrowDownBlue : ArrowDownGrey}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        description={outputValueFormatted && independentField === INPUT ? estimatedText : ''}\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\n        onCurrencySelected={outputCurrency => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: outputCurrency, field: OUTPUT } })\n        }}\n        onValueChange={outputValue => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: outputValue, field: OUTPUT } })\n        }}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={outputCurrency}\n        value={outputValueFormatted}\n        errorMessage={independentField === OUTPUT ? independentError : ''}\n        disableUnlock\n      />\n      <OversizedPanel hideBottom>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted(inverted => !inverted)\n          }}\n        >\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n          {inverted ? (\n            <span>\n              {exchangeRate\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {exchangeRate\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n      </OversizedPanel>\n      {renderSummary()}\n      <Flex>\n        <Button disabled={!isValid} onClick={onSwap} warning={highSlippageWarning}>\n          {highSlippageWarning ? t('swapAnyway') : t('swap')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n"],"sourceRoot":""}