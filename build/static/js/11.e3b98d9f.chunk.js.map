{"version":3,"sources":["components/AddressInputPanel/index.js","pages/Pool/CreateExchange.js"],"names":["InputPanel","styled","div","theme","flexColumnNoWrap","transparentize","shadowColor","inputBackground","ContainerRow","error","salmonRed","mercuryGray","InputContainer","LabelRow","flexRowNoWrap","doveGray","LabelContainer","InputRow","Input","input","royalBlue","placeholderGray","AddressInputPanel","title","initialInput","onChange","onError","t","useTranslation","library","useWeb3React","useState","address","setInput","debouncedInput","useDebounce","undefined","name","data","setData","setError","useEffect","stale","isAddress","lookupAddress","then","catch","resolveName","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","event","target","value","checksummedInput","SummaryPanel","ExchangeRateWrapper","ExchangeRate","span","CreateExchangeWrapper","SummaryText","Flex","withRouter","location","params","account","factory","useFactoryContract","tokenAddress","setTokenAddress","tokenAddressError","setTokenAddressError","useTokenDetails","symbol","decimals","exchangeAddress","addTransaction","useTransactionAdder","createBrowserHistory","push","window","pathname","errorMessage","setErrorMessage","a","estimate","createExchange","estimatedGasLimit","gasLimit","response","ReactGA","category","action","ethers","constants","AddressZero","isValid","state","hideBottom","disabled","onClick"],"mappings":"mgDAQA,IAAMA,EAAaC,IAAOC,IAAV,KACZ,qBAAGC,MAAkBC,oBACG,gBAAGD,EAAH,EAAGA,MAAH,OAAeE,YAAe,IAAMF,EAAMG,gBAGhD,qBAAGH,MAAkBI,mBAIrCC,EAAeP,IAAOC,IAAV,KAKI,gBAAGO,EAAH,EAAGA,MAAON,EAAV,EAAUA,MAAV,OAAuBM,EAAQN,EAAMO,UAAYP,EAAMQ,eAEvD,qBAAGR,MAAkBI,mBAGrCK,EAAiBX,IAAOC,IAAV,KAIdW,EAAWZ,IAAOC,IAAV,KACV,qBAAGC,MAAkBW,iBAEd,qBAAGX,MAAkBY,YAM1BC,EAAiBf,IAAOC,IAAV,KAQde,EAAWhB,IAAOC,IAAV,KACV,qBAAGC,MAAkBW,iBAKnBI,EAAQjB,IAAOkB,MAAV,KAMW,qBAAGhB,MAAkBI,mBAEhC,gBAAGE,EAAH,EAAGA,MAAON,EAAV,EAAUA,MAAV,OAAuBM,EAAQN,EAAMO,UAAYP,EAAMiB,aAKrD,qBAAGjB,MAAkBkB,mBAInB,SAASC,EAAT,GAAmG,IAAtEC,EAAqE,EAArEA,MAAqE,IAA9DC,oBAA8D,MAA/C,GAA+C,MAA3CC,gBAA2C,MAAhC,aAAgC,MAAtBC,eAAsB,MAAZ,aAAY,EACvGC,EAAMC,cAAND,EAEAE,EAAYC,cAAZD,QAHuG,EAKrFE,mBAASP,EAAaQ,QAAUR,EAAaQ,QAAU,IAL8B,mBAKxGb,EALwG,KAKjGc,EALiG,KAOzGC,EAAiBC,YAAYhB,EAAO,KAPqE,EASvFY,mBAAS,CAAEC,aAASI,EAAWC,UAAMD,IATkD,mBASxGE,EATwG,KASlGC,EATkG,OAUrFR,oBAAS,GAV4E,mBAUxGtB,EAVwG,KAUjG+B,EAViG,KA6F/G,OAhFAC,qBAAU,WACRhB,EAAS,CAAEO,QAASM,EAAKN,QAASK,KAAMC,EAAKD,SAC5C,CAACZ,EAAUa,EAAKN,QAASM,EAAKD,OACjCI,qBAAU,WACRf,EAAQjB,KACP,CAACiB,EAASjB,IAGbgC,qBAAU,WACR,IAAIC,GAAQ,EAEZ,GAAIC,YAAUT,GACZ,IACEL,EACGe,cAAcV,GACdW,MAAK,SAAAR,GACCK,IAECL,EACFJ,EAASI,IAETE,EAAQ,CAAEP,QAASE,EAAgBG,KAAM,KACzCG,EAAS,WAIdM,OAAM,WACAJ,IACHH,EAAQ,CAAEP,QAASE,EAAgBG,KAAM,KACzCG,EAAS,UAGf,SACAD,EAAQ,CAAEP,QAASE,EAAgBG,KAAM,KACzCG,EAAS,WAGX,GAAuB,KAAnBN,EACF,IACEL,EACGkB,YAAYb,GACZW,MAAK,SAAAb,GACCU,IAECV,GACFO,EAAQ,CAAEP,QAASA,EAASK,KAAMH,IAClCM,EAAS,OAETA,GAAS,OAIdM,OAAM,WACAJ,GACHF,GAAS,MAGf,SACAA,GAAS,GAKf,OAAO,WACLE,GAAQ,KAET,CAACR,EAAgBL,EAASJ,EAAUC,IAerC,kBAAC1B,EAAD,KACE,kBAACQ,EAAD,CAAcC,MAAiB,KAAVU,GAAgBV,GACnC,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAACG,EAAD,KACE,8BAAOO,GAASI,EAAE,uBAGtB,kBAACV,EAAD,KACE,kBAACC,EAAD,CACE8B,KAAK,OACLC,aAAa,MACbC,YAAY,MACZC,eAAe,MACfC,WAAW,QACXC,YAAY,YACZ5C,MAAiB,KAAVU,GAAgBV,EACvBgB,SA9BZ,SAAiB6B,QACMlB,IAAjBE,EAAKN,cAAuCI,IAAdE,EAAKD,MACrCE,EAAQ,CAAEP,aAASI,EAAWC,UAAMD,SAExBA,IAAV3B,GACF+B,IAEF,IAAMrB,EAAQmC,EAAMC,OAAOC,MACrBC,EAAmBd,YAAUxB,GACnCc,EAASwB,GAAoBtC,IAsBnBqC,MAAOrC,U,4/BCxKrB,IAAMuC,EAAezD,IAAOC,IAAV,KACd,qBAAGC,MAAkBC,oBAInBuD,EAAsB1D,IAAOC,IAAV,KACrB,qBAAGC,MAAkBW,iBAEd,qBAAGX,MAAkBY,YAK1B6C,EAAe3D,IAAO4D,KAAV,KAGP,qBAAG1D,MAAkBY,YAG1B+C,EAAwB7D,IAAOC,IAAV,KAChB,qBAAGC,MAAkBY,YAM1BgD,EAAc9D,IAAOC,IAAV,KAEN,gBAAGO,EAAH,EAAGA,MAAON,EAAV,EAAUA,MAAV,OAAsBM,GAASN,EAAMO,aAG1CsD,EAAO/D,IAAOC,IAAV,KA8GK+D,uBApGf,YAA+C,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAC1BxC,EAAMC,cAAND,EACAyC,EAAYtC,cAAZsC,QAEFC,EAAUC,cAJ4B,EAMJvC,mBAAS,CAC/CC,QAASmC,EAAOI,aAAeJ,EAAOI,aAAe,GACrDlC,KAAM,KARoC,mBAMrCkC,EANqC,KAMvBC,EANuB,OAUMzC,qBAVN,mBAUrC0C,EAVqC,KAUlBC,EAVkB,OAYQC,YAAgBJ,EAAavC,SAAzEK,EAZoC,EAYpCA,KAAMuC,EAZ8B,EAY9BA,OAAQC,EAZsB,EAYtBA,SAAUC,EAZY,EAYZA,gBAC1BC,EAAiBC,cAGvBvC,qBAAU,WACQwC,cACRC,KAAKC,OAAOjB,SAASkB,SAAW,MACvC,IAnByC,MAsBJrD,oBAAUqC,GAAWzC,EAAE,aAtBnB,mBAsBrC0D,EAtBqC,KAsBvBC,EAtBuB,iDA6C5C,4BAAAC,EAAA,sEACkClB,EAAQmB,SAASC,eAAelB,EAAavC,SAD/E,OACQ0D,EADR,OAGErB,EAAQoB,eAAelB,EAAavC,QAAS,CAAE2D,SAAUD,IAAqB7C,MAAK,SAAA+C,GACjFC,IAAQvC,MAAM,CACZwC,SAAU,cACVC,OAAQ,oBAGVhB,EAAea,MATnB,4CA7C4C,sBAuB5CnD,qBAAU,WAiBR,OAhBIgC,EACFa,EAAgB3D,EAAE,6BACES,IAAXwC,QAAqCxC,IAAbyC,QAA8CzC,IAApB0C,EAC3DQ,IACoB,OAAXV,EACTU,EAAgB3D,EAAE,kBACI,OAAbkD,EACTS,EAAgB3D,EAAE,oBACTmD,IAAoBkB,SAAOC,UAAUC,YAC9CZ,EAAgB3D,EAAE,mBAIlB2D,EAHUlB,EAGM,KAFAzC,EAAE,aAKb,WACL2D,OAED,CAACf,EAAavC,QAAS4C,EAAQC,EAAUC,EAAiBV,EAASzC,EAAG8C,IAezE,IAAM0B,EAA2B,OAAjBd,EAEhB,OACE,oCACE,kBAAC,IAAD,CACE9D,MAAOI,EAAE,gBACTH,aACE2C,EAAOI,aACH,CAAEvC,QAASmC,EAAOI,cAClB,CAAEvC,QAAUkC,EAASkC,OAASlC,EAASkC,MAAM7B,cAAiB,IAEpE9C,SAAU+C,EACV9C,QAASgD,IAEX,kBAAC,IAAD,CAAgB2B,YAAU,GACxB,kBAAC3C,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAejC,EAAE,SACjB,8BAAOU,GAAc,QAEvB,kBAACsB,EAAD,KACE,kBAACC,EAAD,KAAejC,EAAE,WACjB,8BAAOiD,GAAkB,QAE3B,kBAACjB,EAAD,KACE,kBAACC,EAAD,KAAejC,EAAE,aACjB,8BAAOkD,GAAyB,IAAbA,EAAiBA,EAAW,UAIrD,kBAACf,EAAD,KACE,kBAACC,EAAD,KAAcsB,GAA8B1D,EAAE,oBAEhD,kBAACqC,EAAD,KACE,kBAAC,IAAD,CAAQsC,UAAWH,EAASI,QA5FU,4CA6FnC5E,EAAE","file":"static/js/11.e3b98d9f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { transparentize } from 'polished'\n\nimport { isAddress } from '../../utils'\nimport { useWeb3React, useDebounce } from '../../hooks'\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.inputBackground};\n\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.placeholderGray};\n  }\n`\n\nexport default function AddressInputPanel({ title, initialInput = '', onChange = () => {}, onError = () => {} }) {\n  const { t } = useTranslation()\n\n  const { library } = useWeb3React()\n\n  const [input, setInput] = useState(initialInput.address ? initialInput.address : '')\n\n  const debouncedInput = useDebounce(input, 150)\n\n  const [data, setData] = useState({ address: undefined, name: undefined })\n  const [error, setError] = useState(false)\n\n  // keep data and errors in sync\n  useEffect(() => {\n    onChange({ address: data.address, name: data.name })\n  }, [onChange, data.address, data.name])\n  useEffect(() => {\n    onError(error)\n  }, [onError, error])\n\n  // run parser on debounced input\n  useEffect(() => {\n    let stale = false\n\n    if (isAddress(debouncedInput)) {\n      try {\n        library\n          .lookupAddress(debouncedInput)\n          .then(name => {\n            if (!stale) {\n              // if an ENS name exists, set it as the destination\n              if (name) {\n                setInput(name)\n              } else {\n                setData({ address: debouncedInput, name: '' })\n                setError(null)\n              }\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setData({ address: debouncedInput, name: '' })\n              setError(null)\n            }\n          })\n      } catch {\n        setData({ address: debouncedInput, name: '' })\n        setError(null)\n      }\n    } else {\n      if (debouncedInput !== '') {\n        try {\n          library\n            .resolveName(debouncedInput)\n            .then(address => {\n              if (!stale) {\n                // if the debounced input name resolves to an address\n                if (address) {\n                  setData({ address: address, name: debouncedInput })\n                  setError(null)\n                } else {\n                  setError(true)\n                }\n              }\n            })\n            .catch(() => {\n              if (!stale) {\n                setError(true)\n              }\n            })\n        } catch {\n          setError(true)\n        }\n      }\n    }\n\n    return () => {\n      stale = true\n    }\n  }, [debouncedInput, library, onChange, onError])\n\n  function onInput(event) {\n    if (data.address !== undefined || data.name !== undefined) {\n      setData({ address: undefined, name: undefined })\n    }\n    if (error !== undefined) {\n      setError()\n    }\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setInput(checksummedInput || input)\n  }\n\n  return (\n    <InputPanel>\n      <ContainerRow error={input !== '' && error}>\n        <InputContainer>\n          <LabelRow>\n            <LabelContainer>\n              <span>{title || t('recipientAddress')}</span>\n            </LabelContainer>\n          </LabelRow>\n          <InputRow>\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder=\"0x1234...\"\n              error={input !== '' && error}\n              onChange={onInput}\n              value={input}\n            />\n          </InputRow>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router'\nimport { createBrowserHistory } from 'history'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\n\nimport { useWeb3React, useFactoryContract } from '../../hooks'\nimport { Button } from '../../theme'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\n\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  padding: 1rem 0;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst CreateExchangeWrapper = styled.div`\n  color: ${({ theme }) => theme.doveGray};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst SummaryText = styled.div`\n  font-size: 0.75rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction CreateExchange({ location, params }) {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const factory = useFactoryContract()\n\n  const [tokenAddress, setTokenAddress] = useState({\n    address: params.tokenAddress ? params.tokenAddress : '',\n    name: ''\n  })\n  const [tokenAddressError, setTokenAddressError] = useState()\n\n  const { name, symbol, decimals, exchangeAddress } = useTokenDetails(tokenAddress.address)\n  const addTransaction = useTransactionAdder()\n\n  // clear url of query\n  useEffect(() => {\n    const history = createBrowserHistory()\n    history.push(window.location.pathname + '')\n  }, [])\n\n  // validate everything\n  const [errorMessage, setErrorMessage] = useState(!account && t('noWallet'))\n  useEffect(() => {\n    if (tokenAddressError) {\n      setErrorMessage(t('invalidTokenAddress'))\n    } else if (symbol === undefined || decimals === undefined || exchangeAddress === undefined) {\n      setErrorMessage()\n    } else if (symbol === null) {\n      setErrorMessage(t('invalidSymbol'))\n    } else if (decimals === null) {\n      setErrorMessage(t('invalidDecimals'))\n    } else if (exchangeAddress !== ethers.constants.AddressZero) {\n      setErrorMessage(t('exchangeExists'))\n    } else if (!account) {\n      setErrorMessage(t('noWallet'))\n    } else {\n      setErrorMessage(null)\n    }\n\n    return () => {\n      setErrorMessage()\n    }\n  }, [tokenAddress.address, symbol, decimals, exchangeAddress, account, t, tokenAddressError])\n\n  async function createExchange() {\n    const estimatedGasLimit = await factory.estimate.createExchange(tokenAddress.address)\n\n    factory.createExchange(tokenAddress.address, { gasLimit: estimatedGasLimit }).then(response => {\n      ReactGA.event({\n        category: 'Transaction',\n        action: 'Create Exchange'\n      })\n\n      addTransaction(response)\n    })\n  }\n\n  const isValid = errorMessage === null\n\n  return (\n    <>\n      <AddressInputPanel\n        title={t('tokenAddress')}\n        initialInput={\n          params.tokenAddress\n            ? { address: params.tokenAddress }\n            : { address: (location.state && location.state.tokenAddress) || '' }\n        }\n        onChange={setTokenAddress}\n        onError={setTokenAddressError}\n      />\n      <OversizedPanel hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('name')}</ExchangeRate>\n            <span>{name ? name : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('symbol')}</ExchangeRate>\n            <span>{symbol ? symbol : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('decimals')}</ExchangeRate>\n            <span>{decimals || decimals === 0 ? decimals : ' - '}</span>\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      <CreateExchangeWrapper>\n        <SummaryText>{errorMessage ? errorMessage : t('enterTokenCont')}</SummaryText>\n      </CreateExchangeWrapper>\n      <Flex>\n        <Button disabled={!isValid} onClick={createExchange}>\n          {t('createExchange')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default withRouter(CreateExchange)\n"],"sourceRoot":""}