{"version":3,"sources":["assets/images/arrow-down-blue.svg","assets/images/arrow-down-grey.svg","components/ContextualInfo/index.js","assets/images/dropup-blue.svg","pages/Pool/RemoveLiquidity.js"],"names":["module","exports","SummaryWrapper","styled","div","error","theme","salmonRed","doveGray","Details","concreteGray","SummaryWrapperContainer","flexRowNoWrap","royalBlue","ContextualInfo","state","showDetails","this","props","renderTransactionDetails","openDetailsText","closeDetailsText","contextualInfo","isError","onClick","setState","prevState","src","DropupBlue","alt","DropdownBlue","renderDetails","Component","defaultProps","ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","GAS_MARGIN","BlueSpan","span","DownArrowBackground","DownArrow","img","RemoveLiquidityOutput","RemoveLiquidityOutputText","RemoveLiquidityOutputPlus","SummaryPanel","flexColumnNoWrap","LastSummaryText","ExchangeRateWrapper","ExchangeRate","chaliceGray","Flex","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","mul","calculateSlippageBounds","value","offset","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","RemoveLiquidity","useWeb3Context","library","account","active","t","useTranslation","addTransaction","useTransactionAdder","useState","outputCurrency","setOutputCurrency","setValue","inputError","setInputError","valueParsed","setValueParsed","useEffect","parsedValue","parseUnits","useTokenDetails","symbol","decimals","exchangeAddress","totalPoolTokens","setTotalPoolTokens","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","exchange","useExchangeContract","ownershipPercentage","isZero","undefined","ownershipPercentageFormatted","amountFormatter","ETHOwnShare","TokenOwnShare","ETHPer","tokenPer","ethWithdrawn","tokenWithdrawn","ethWithdrawnMin","tokenWithdrawnMin","fetchPoolTokens","useCallback","totalSupply","then","a","ReactGA","event","category","action","deadline","Math","ceil","Date","now","estimate","removeLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","response","on","removeListener","b","text","min","isActive","isValid","marketRate","reserveETH","reserveToken","getMarketRate","title","extraText","formatBalance","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","errorMessage","selectedTokenAddress","ArrowDownBlue","ArrowDownGrey","description","key","renderInput","disableTokenSelect","disableUnlock","hideBottom","renderSummary","disabled"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,21BCO3C,IAAMC,EAAiBC,IAAOC,IAAV,KACT,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAAuBD,EAAQC,EAAMC,UAAYD,EAAME,YAO5DC,EAAUN,IAAOC,IAAV,KACS,qBAAGE,MAAkBI,gBAOrCC,EAA0BR,IAAOC,IAAV,KACzB,qBAAGE,MAAkBM,iBACd,qBAAGN,MAAkBO,aAmB1BC,E,2MAgBJC,MAAQ,CACNC,aAAa,G,+EAIb,OAAKC,KAAKF,MAAMC,YAIT,kBAACP,EAAD,KAAUQ,KAAKC,MAAMC,4BAHnB,O,+BAMD,IAAD,SACgEF,KAAKC,MAApEE,EADD,EACCA,gBAAiBC,EADlB,EACkBA,iBAAkBC,EADpC,EACoCA,eAAgBC,EADpD,EACoDA,QAE3D,OAAID,EACK,kBAACpB,EAAD,CAAgBG,MAAOkB,GAAUD,GAIxC,oCACE,kBAACX,EAAD,CACEa,QAAS,kBACP,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEV,aAAcU,EAAUV,kBAInCC,KAAKF,MAAMC,YAMX,oCACE,8BAAOK,GACP,yBAAKM,IAAKC,IAAYC,IAAI,YAP5B,oCACE,8BAAOT,GACP,yBAAKO,IAAKG,IAAcD,IAAI,eASjCZ,KAAKc,qB,GAxDeC,aAAvBlB,EAQGmB,aAAe,CACpBb,gBAAiB,sBACjBC,iBAAkB,eAClBF,yBAHoB,aAIpBG,eAAgB,GAChBC,SAAS,GAiDET,O,oBC1Gfd,EAAOC,QAAU,IAA0B,yC,uqDCoB3C,IAAMiC,EAAmBC,SAAOC,MAAMC,aAAa,KAM7CC,EAAaH,SAAOC,MAAMC,aAAa,KAEvCE,EAAWpC,IAAOqC,KAAV,KACH,qBAAGlC,MAAkBO,aAG1B4B,EAAsBtC,IAAOC,IAAV,KACrB,qBAAGE,MAAkBM,iBAKnB8B,EAAYvC,IAAOwC,IAAV,KAOTC,EAAwBzC,IAAOC,IAAV,KACvB,qBAAGE,MAAkBM,iBAInBiC,EAA4B1C,IAAOC,IAAV,KAMzB0C,EAA4B3C,IAAOC,IAAV,KAMzB2C,EAAe5C,IAAOC,IAAV,KACd,qBAAGE,MAAkB0C,oBAInBC,EAAkB9C,IAAOC,IAAV,KAIf8C,EAAsB/C,IAAOC,IAAV,KACrB,qBAAGE,MAAkBM,iBAEd,qBAAGN,MAAkBE,YAK1B2C,EAAehD,IAAOqC,KAAV,KAGP,qBAAGlC,MAAkB8C,eAG1BC,EAAOlD,IAAOC,IAAV,KAUV,SAASkD,EAAgBC,EAAYC,EAAeC,EAAaC,GAAiC,IAAjBC,EAAgB,wDAC/F,IACE,GACEJ,IACCC,GAAmC,IAAlBA,IAClBC,IACCC,GAAqC,IAAnBA,GACnB,CACA,IAAME,EAASzB,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAa,KAE3E,OAAIsB,EACKJ,EACJO,IAAIF,GACJxD,IAAIqD,GACJK,IAAI3B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAaqB,KAChEtD,IAAI+B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAamB,KAE5DC,EACJK,IAAIF,GACJxD,IAAImD,GACJO,IAAI3B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAamB,KAChEpD,IAAI+B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAaqB,MAGvE,WAOJ,SAASK,EAAwBC,GAC/B,GAAIA,EAAO,CACT,IAAMC,EAASD,EAAMF,IAAI5B,GAAkB9B,IAAI+B,SAAOC,MAAMC,aAAa,MACnE6B,EAAUF,EAAMG,IAAIF,GACpBG,EAAUJ,EAAMK,IAAIJ,GAC1B,MAAO,CACLC,QAASA,EAAQI,GAAGnC,SAAOoC,UAAUC,MAAQrC,SAAOoC,UAAUC,KAAON,EACrEE,QAASA,EAAQK,GAAGtC,SAAOoC,UAAUG,YAAcvC,SAAOoC,UAAUG,WAAaN,GAGnF,MAAO,GAII,SAASO,KAAmB,IAAD,EACHC,2BAA7BC,EADgC,EAChCA,QAASC,EADuB,EACvBA,QAASC,EADc,EACdA,OAClBC,EAAMC,cAAND,EAEFE,EAAiBC,cAJiB,EAMIC,mBAAS,IANb,mBAMjCC,EANiC,KAMjBC,EANiB,OAOdF,mBAAS,IAPK,mBAOjCpB,EAPiC,KAO1BuB,EAP0B,OAQJH,qBARI,mBAQjCI,EARiC,KAQrBC,EARqB,OASFL,qBATE,mBASjCM,GATiC,KASpBC,GAToB,KAWxCC,qBAAU,WACR,IACE,IAAMC,EAAc1D,SAAOC,MAAM0D,WAAW9B,EAAO,IACnD2B,GAAeE,GACf,SACc,KAAV7B,GACFyB,EAAcT,EAAE,kBAIpB,OAAO,WACLS,IACAE,QAED,CAACX,EAAGhB,IAzBiC,OA2BM+B,YAAgBV,GAAtDW,GA3BgC,GA2BhCA,OAAQC,GA3BwB,GA2BxBA,SAAUC,GA3Bc,GA2BdA,gBA3Bc,GA6BMd,qBA7BN,qBA6BjCe,GA7BiC,MA6BhBC,GA7BgB,MA8BlCC,GAAmBC,YAAkBxB,EAASoB,IAC9CK,GAAqBD,YAAkBJ,GAAiB,OACxDM,GAAuBF,YAAkBJ,GAAiBb,GAGhEO,qBAAU,WACJF,IAAeW,KACbX,GAAYjB,GAAG4B,IACjBZ,EAAcT,EAAE,wBAEhBS,EAAc,SAGjB,CAACY,GAAkBrB,EAAGU,KAEzB,IAAMe,GAAWC,YAAoBR,IAE/BS,GACJN,IAAoBF,KAAoBA,GAAgBS,SACpDP,GAAiBvC,IAAI3B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAa,MAAMjC,IAAI+F,SAC3FU,EACAC,GAA+BH,IAAuBI,YAAgBJ,GAAqB,GAAI,GAE/FK,GACJT,IACAI,IACAJ,GAAmBzC,IAAI6C,IAAqBvG,IAAI+B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAa,MACxG4E,GACJT,IACAG,IACAH,GAAqB1C,IAAI6C,IAAqBvG,IAAI+B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAa,MAE1G6E,GACJX,IAAsBJ,KAAoBA,GAAgBS,SACtDL,GAAmBzC,IAAI3B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAa,MAAMjC,IAAI+F,SAC7FU,EACAM,GACJX,IAAwBL,KAAoBA,GAAgBS,SACxDJ,GAAqB1C,IAAI3B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAa,MAAMjC,IAAI+F,SAC/FU,EAEAO,GACJF,IAAUxB,GACNwB,GAAOpD,IAAI4B,IAAatF,IAAI+B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAa,WACxFwE,EACAQ,GACJF,IAAYzB,GACRyB,GAASrD,IAAI4B,IAAatF,IAAI+B,SAAOC,MAAMC,aAAa,IAAIwB,IAAI1B,SAAOC,MAAMC,aAAa,WAC1FwE,EAEAS,GAAkBF,GAAerD,EAAwBqD,IAAclD,aAAU2C,EACjFU,GAAoBF,GAAiBtD,EAAwBsD,IAAgBnD,aAAU2C,EAEvFW,GAAkBC,uBAAY,WAC9BhB,IACFA,GAASiB,cAAcC,MAAK,SAAAD,GAC1BtB,GAAmBsB,QAGtB,CAACjB,KAzFoC,8CAmGxC,8BAAAmB,EAAA,6DACEC,IAAQC,MAAM,CACZC,SAAU,OACVC,OAAQ,oBAGJC,EAAWC,KAAKC,KAAKC,KAAKC,MAAQ,KA9NlB,IAwNxB,SAQkC5B,GAAS6B,SAASC,gBAChD7C,GACA4B,GACAC,GACAU,GAZJ,OAQQO,EARR,OAeE/B,GACG8B,gBAAgB7C,GAAa4B,GAAiBC,GAAmBU,EAAU,CAC1EQ,SAAUC,YAAmBF,EAAmBlG,KAEjDqF,MAAK,SAAAgB,GACJzD,EAAeyD,MApBrB,4CAnGwC,sBA0FxC/C,qBAAU,WAIR,OAHA4B,KACA3C,EAAQ+D,GAAG,QAASpB,IAEb,WACL3C,EAAQgE,eAAe,QAASrB,OAEjC,CAACA,GAAiB3C,IA0BrB,IAAMiE,GAAI,SAAAC,GAAI,OAAI,kBAACxG,EAAD,KAAWwG,IAE7B,SAAS5H,KAMP,OALA0G,IAAQC,MAAM,CACZC,SAAU,oBACVC,OAAQ,SAIR,6BACE,6BACGhD,EAAE,kBADL,IACyB8D,GAAE,GAAD,OAAI/B,YAAgBK,GAAc,GAAI,GAAtC,SAD1B,IAC4EpC,EAAE,OAAQ,IACnF8D,GAAE,GAAD,OAAI/B,YAAgBM,GAAgBpB,GAAUiC,KAAKc,IAAI/C,GAAU,IAAjE,YAAwED,KAF5E,IAEwFhB,EAAE,YAE1F,kBAAC/B,EAAD,KACG+B,EAAE,iBADL,IACwB8D,GAAE/B,YAAgBrB,GAAa,GAAI,IAD3D,IACiEV,EAAE,oBAEnE,kBAAC/B,EAAD,KACG+B,EAAE,iBADL,IACwB8D,GAAE/B,YAAgBZ,GAAiB,GAAI,KAE/D,kBAAClD,EAAD,KACG+B,EAAE,cADL,IACqB8D,GAAE/B,YAAgBG,GAAQ,GAAI,IADnD,QAC6DlC,EAAE,OAAQ,IACpE8D,GAAE/B,YAAgBI,GAAUlB,GAAUiC,KAAKc,IAAI,EAAG/C,MAFrD,IAEmED,KAsCzE,IAAMiD,GAAWlE,GAAUD,EACrBoE,GAAyB,OAAf1D,EAEV2D,GA5MR,SAAuBC,EAAYC,EAAcpD,GAA2B,IAAjBtC,EAAgB,wDACzE,OAAOL,EAAgB8F,EAAY,GAAIC,EAAcpD,EAAUtC,GA2M5C2F,CAAc/C,GAAoBC,GAAsBP,IAE3E,OACE,oCACE,kBAAC,IAAD,CACEsD,MAAOvE,EAAE,cACTwE,UAAWnD,IAbjB,SAAuBrC,GACrB,MAAM,YAAN,OAAmBA,GAYgByF,CAAc1C,YAAgBV,GAAkB,GAAI,IACnFqD,qBAAsB,WACpB,GAAIrD,GAAkB,CACpB,IAAMsD,EAAatD,GACfsD,EAAWlF,GAAGtC,SAAOoC,UAAUC,OACjCe,EAASwB,YAAgB4C,EAAY,GAAI,IAAI,MAInDC,mBAAoBtE,EACpBuE,cAAetE,EACfvB,MAAOA,EACP8F,aAActE,EACduE,qBAAsB1E,IAExB,kBAAC,IAAD,KACE,kBAAC5C,EAAD,KACE,kBAACC,EAAD,CAAWf,IAAKsH,GAAWe,IAAgBC,IAAepI,IAAI,YAGlE,kBAAC,IAAD,CACE0H,MAAOvE,EAAE,UACTkF,YAAgB9C,IAAgBC,GAAnB,WAAyCrC,EAAE,aAA3C,KAA6D,GAC1EmF,IAAI,yBACJC,YAAa,kBACRhD,IAAgBC,GACjB,kBAACzE,EAAD,KACE,kBAACC,EAAD,eACMkE,YAAgBK,GAAc,GAAI,GAAG,GAD3C,SAGA,kBAACtE,EAAD,YACA,kBAACD,EAAD,eACMkE,YAAgBM,GAAgBpB,GAAUiC,KAAKc,IAAI,EAAG/C,KAD5D,YAC0ED,MAI5E,kBAACpD,EAAD,OAGJyH,oBAAkB,EAClBC,eAAa,IAEf,kBAAC,IAAD,CAAgBH,IAAI,+BAA+BI,YAAU,GAC3D,kBAACxH,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KAAe6B,EAAE,iBAChBmE,GAAa,gDAAkBpC,YAAgBoC,GAAY,GAAI,GAAlD,YAAwDnD,KAAmB,OAE3F,kBAAC9C,EAAD,KACE,kBAACC,EAAD,KAAe6B,EAAE,oBAChBuB,IAAsBC,IAAwBP,GAC7C,wCAAUc,YAAgBR,GAAoB,GAAI,GAAlD,kBAA8DQ,YAC5DP,GACAP,GACAiC,KAAKc,IAAI/C,GAAU,IAHrB,YAIKD,KAEL,OAGJ,kBAAC9C,EAAD,KACE,kBAACC,EAAD,KACG6B,EAAE,iBADL,KACyB8B,IAAgCA,GADzD,MAGCE,IAAeC,GACd,wCACMF,YAAgBC,GAAa,GAAI,GADvC,kBACmDD,YAC/CE,GACAhB,GACAiC,KAAKc,IAAI/C,GAAU,IAJvB,YAKOD,KAGP,SAlHZ,WACE,IAAI1E,EAAiB,GACjBC,GAAU,EAcd,OAZIiE,GACFlE,EAAiBkE,EACjBjE,GAAU,GACA8D,GAAqC,QAAnBA,EAElBK,GAEAZ,IACVxD,EAAiB0D,EAAE,YACnBzD,GAAU,GAHVD,EAAiB0D,EAAE,kBAFnB1D,EAAiB0D,EAAE,mBASnB,kBAAC,IAAD,CACEmF,IAAI,eACJ/I,gBAAiB4D,EAAE,sBACnB3D,iBAAkB2D,EAAE,eACpB1D,eAAgBA,EAChBC,QAASA,EACTJ,yBAA0BA,KAgG3BqJ,GACD,kBAACnH,EAAD,KACE,kBAAC,IAAD,CAAQoH,UAAWvB,GAAS1H,QAhRM,6CAiR/BwD,EAAE","file":"static/js/6.00e1a79e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-down-blue.cd061363.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down-grey.c0dedd2f.svg\";","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport DropdownBlue from '../../assets/images/dropdown-blue.svg'\nimport DropupBlue from '../../assets/images/dropup-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  span {\n    margin-right: 12px;\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nclass ContextualInfo extends Component {\n  static propTypes = {\n    openDetailsText: PropTypes.string,\n    renderTransactionDetails: PropTypes.func,\n    contextualInfo: PropTypes.string,\n    isError: PropTypes.bool\n  }\n\n  static defaultProps = {\n    openDetailsText: 'Transaction Details',\n    closeDetailsText: 'Hide Details',\n    renderTransactionDetails() {},\n    contextualInfo: '',\n    isError: false\n  }\n\n  state = {\n    showDetails: false\n  }\n\n  renderDetails() {\n    if (!this.state.showDetails) {\n      return null\n    }\n\n    return <Details>{this.props.renderTransactionDetails()}</Details>\n  }\n\n  render() {\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\n\n    if (contextualInfo) {\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\n    }\n\n    return (\n      <>\n        <SummaryWrapperContainer\n          onClick={() =>\n            this.setState(prevState => {\n              return { showDetails: !prevState.showDetails }\n            })\n          }\n        >\n          {!this.state.showDetails ? (\n            <>\n              <span>{openDetailsText}</span>\n              <img src={DropdownBlue} alt=\"dropdown\" />\n            </>\n          ) : (\n            <>\n              <span>{closeDetailsText}</span>\n              <img src={DropupBlue} alt=\"dropup\" />\n            </>\n          )}\n        </SummaryWrapperContainer>\n        {this.renderDetails()}\n      </>\n    )\n  }\n}\n\nexport default ContextualInfo\n","module.exports = __webpack_public_path__ + \"static/media/dropup-blue.b96d70e1.svg\";","import React, { useState, useEffect, useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\nimport { useWeb3Context } from 'web3-react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport ContextualInfo from '../../components/ContextualInfo'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport ArrowDownBlue from '../../assets/images/arrow-down-blue.svg'\nimport ArrowDownGrey from '../../assets/images/arrow-down-grey.svg'\nimport { useExchangeContract } from '../../hooks'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useAddressBalance } from '../../contexts/Balances'\nimport { calculateGasMargin, amountFormatter } from '../../utils'\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\n\n// denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst BlueSpan = styled.span`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst DownArrow = styled.img`\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n`\n\nconst RemoveLiquidityOutput = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  min-height: 3.5rem;\n`\n\nconst RemoveLiquidityOutputText = styled.div`\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  padding: 1rem 0.75rem;\n`\n\nconst RemoveLiquidityOutputPlus = styled.div`\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  padding: 1rem 0;\n`\n\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 1rem 0;\n`\n\nconst LastSummaryText = styled.div`\n  margin-top: 1rem;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\n}\n\nfunction calculateSlippageBounds(value) {\n  if (value) {\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nexport default function RemoveLiquidity() {\n  const { library, account, active } = useWeb3Context()\n  const { t } = useTranslation()\n\n  const addTransaction = useTransactionAdder()\n\n  const [outputCurrency, setOutputCurrency] = useState('')\n  const [value, setValue] = useState('')\n  const [inputError, setInputError] = useState()\n  const [valueParsed, setValueParsed] = useState()\n  // parse value\n  useEffect(() => {\n    try {\n      const parsedValue = ethers.utils.parseUnits(value, 18)\n      setValueParsed(parsedValue)\n    } catch {\n      if (value !== '') {\n        setInputError(t('inputNotValid'))\n      }\n    }\n\n    return () => {\n      setInputError()\n      setValueParsed()\n    }\n  }, [t, value])\n\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\n\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'ETH')\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\n\n  // input validation\n  useEffect(() => {\n    if (valueParsed && poolTokenBalance) {\n      if (valueParsed.gt(poolTokenBalance)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n      }\n    }\n  }, [poolTokenBalance, t, valueParsed])\n\n  const exchange = useExchangeContract(exchangeAddress)\n\n  const ownershipPercentage =\n    poolTokenBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const ownershipPercentageFormatted = ownershipPercentage && amountFormatter(ownershipPercentage, 16, 4)\n\n  const ETHOwnShare =\n    exchangeETHBalance &&\n    ownershipPercentage &&\n    exchangeETHBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n  const TokenOwnShare =\n    exchangeTokenBalance &&\n    ownershipPercentage &&\n    exchangeTokenBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n\n  const ETHPer =\n    exchangeETHBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const tokenPer =\n    exchangeTokenBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n\n  const ethWithdrawn =\n    ETHPer && valueParsed\n      ? ETHPer.mul(valueParsed).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n  const tokenWithdrawn =\n    tokenPer && valueParsed\n      ? tokenPer.mul(valueParsed).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n      : undefined\n\n  const ethWithdrawnMin = ethWithdrawn ? calculateSlippageBounds(ethWithdrawn).minimum : undefined\n  const tokenWithdrawnMin = tokenWithdrawn ? calculateSlippageBounds(tokenWithdrawn).minimum : undefined\n\n  const fetchPoolTokens = useCallback(() => {\n    if (exchange) {\n      exchange.totalSupply().then(totalSupply => {\n        setTotalPoolTokens(totalSupply)\n      })\n    }\n  }, [exchange])\n  useEffect(() => {\n    fetchPoolTokens()\n    library.on('block', fetchPoolTokens)\n\n    return () => {\n      library.removeListener('block', fetchPoolTokens)\n    }\n  }, [fetchPoolTokens, library])\n\n  async function onRemoveLiquidity() {\n    ReactGA.event({\n      category: 'Pool',\n      action: 'RemoveLiquidity'\n    })\n\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    const estimatedGasLimit = await exchange.estimate.removeLiquidity(\n      valueParsed,\n      ethWithdrawnMin,\n      tokenWithdrawnMin,\n      deadline\n    )\n\n    exchange\n      .removeLiquidity(valueParsed, ethWithdrawnMin, tokenWithdrawnMin, deadline, {\n        gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\n      })\n      .then(response => {\n        addTransaction(response)\n      })\n  }\n\n  const b = text => <BlueSpan>{text}</BlueSpan>\n\n  function renderTransactionDetails() {\n    ReactGA.event({\n      category: 'TransactionDetail',\n      action: 'Open'\n    })\n\n    return (\n      <div>\n        <div>\n          {t('youAreRemoving')} {b(`${amountFormatter(ethWithdrawn, 18, 4)} ETH`)} {t('and')}{' '}\n          {b(`${amountFormatter(tokenWithdrawn, decimals, Math.min(decimals, 4))} ${symbol}`)} {t('outPool')}\n        </div>\n        <LastSummaryText>\n          {t('youWillRemove')} {b(amountFormatter(valueParsed, 18, 4))} {t('liquidityTokens')}\n        </LastSummaryText>\n        <LastSummaryText>\n          {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\n        </LastSummaryText>\n        <LastSummaryText>\n          {t('tokenWorth')} {b(amountFormatter(ETHPer, 18, 4))} ETH {t('and')}{' '}\n          {b(amountFormatter(tokenPer, decimals, Math.min(4, decimals)))} {symbol}\n        </LastSummaryText>\n      </div>\n    )\n  }\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n\n    if (inputError) {\n      contextualInfo = inputError\n      isError = true\n    } else if (!outputCurrency || outputCurrency === 'ETH') {\n      contextualInfo = t('selectTokenCont')\n    } else if (!valueParsed) {\n      contextualInfo = t('enterValueCont')\n    } else if (!account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    return (\n      <ContextualInfo\n        key=\"context-info\"\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo}\n        isError={isError}\n        renderTransactionDetails={renderTransactionDetails}\n      />\n    )\n  }\n\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  const isActive = active && account\n  const isValid = inputError === null\n\n  const marketRate = getMarketRate(exchangeETHBalance, exchangeTokenBalance, decimals)\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('poolTokens')}\n        extraText={poolTokenBalance && formatBalance(amountFormatter(poolTokenBalance, 18, 4))}\n        extraTextClickHander={() => {\n          if (poolTokenBalance) {\n            const valueToSet = poolTokenBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              setValue(amountFormatter(valueToSet, 18, 18, false))\n            }\n          }\n        }}\n        onCurrencySelected={setOutputCurrency}\n        onValueChange={setValue}\n        value={value}\n        errorMessage={inputError}\n        selectedTokenAddress={outputCurrency}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow src={isActive ? ArrowDownBlue : ArrowDownGrey} alt=\"arrow\" />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        description={!!(ethWithdrawn && tokenWithdrawn) ? `(${t('estimated')})` : ''}\n        key=\"remove-liquidity-input\"\n        renderInput={() =>\n          !!(ethWithdrawn && tokenWithdrawn) ? (\n            <RemoveLiquidityOutput>\n              <RemoveLiquidityOutputText>\n                {`${amountFormatter(ethWithdrawn, 18, 4, false)} ETH`}\n              </RemoveLiquidityOutputText>\n              <RemoveLiquidityOutputPlus> + </RemoveLiquidityOutputPlus>\n              <RemoveLiquidityOutputText>\n                {`${amountFormatter(tokenWithdrawn, decimals, Math.min(4, decimals))} ${symbol}`}\n              </RemoveLiquidityOutputText>\n            </RemoveLiquidityOutput>\n          ) : (\n            <RemoveLiquidityOutput />\n          )\n        }\n        disableTokenSelect\n        disableUnlock\n      />\n      <OversizedPanel key=\"remove-liquidity-input-under\" hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n            {marketRate ? <span>{`1 ETH = ${amountFormatter(marketRate, 18, 4)} ${symbol}`}</span> : ' - '}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\n            {exchangeETHBalance && exchangeTokenBalance && decimals ? (\n              <span>{`${amountFormatter(exchangeETHBalance, 18, 4)} ETH + ${amountFormatter(\n                exchangeTokenBalance,\n                decimals,\n                Math.min(decimals, 4)\n              )} ${symbol}`}</span>\n            ) : (\n              ' - '\n            )}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>\n              {t('yourPoolShare')} ({ownershipPercentageFormatted && ownershipPercentageFormatted}%)\n            </ExchangeRate>\n            {ETHOwnShare && TokenOwnShare ? (\n              <span>\n                {`${amountFormatter(ETHOwnShare, 18, 4)} ETH + ${amountFormatter(\n                  TokenOwnShare,\n                  decimals,\n                  Math.min(decimals, 4)\n                )} ${symbol}`}\n              </span>\n            ) : (\n              ' - '\n            )}\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      {renderSummary()}\n      <Flex>\n        <Button disabled={!isValid} onClick={onRemoveLiquidity}>\n          {t('removeLiquidity')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n"],"sourceRoot":""}