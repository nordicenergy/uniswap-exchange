{"version":3,"sources":["components/AddressInputPanel/index.js","pages/Pool/CreateExchange.js"],"names":["InputPanel","styled","div","theme","flexColumnNoWrap","lighten","royalBlue","white","ContainerRow","error","salmonRed","mercuryGray","InputContainer","LabelRow","flexRowNoWrap","doveGray","LabelContainer","InputRow","Input","input","chaliceGray","AddressInputPanel","title","initialInput","onChange","onError","t","useTranslation","library","useWeb3Context","useState","setInput","debouncedInput","useDebounce","address","undefined","name","data","setData","setError","useEffect","stale","isAddress","lookupAddress","then","catch","resolveName","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","event","target","value","checksummedInput","SummaryPanel","ExchangeRateWrapper","ExchangeRate","span","CreateExchangeWrapper","SummaryText","Flex","withRouter","history","location","account","factory","useFactoryContract","tokenAddress","setTokenAddress","tokenAddressError","setTokenAddressError","useTokenDetails","symbol","decimals","exchangeAddress","addTransaction","useTransactionAdder","state","replace","pathname","errorMessage","setErrorMessage","a","estimate","createExchange","estimatedGasLimit","gasLimit","response","ReactGA","category","action","ethers","constants","AddressZero","isValid","hideBottom","disabled","onClick"],"mappings":"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","file":"static/js/9.131cdc38.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3Context } from 'web3-react'\nimport { lighten } from 'polished'\n\nimport { isAddress } from '../../utils'\nimport { useDebounce } from '../../hooks'\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => lighten(0.9, theme.royalBlue)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.white};\n  z-index: 1;\n`\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  box-shadow: 0 0 0 0.5px ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n  background-color: ${({ theme }) => theme.white};\n  transition: box-shadow 200ms ease-in-out;\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\n  transition: color 200ms ease-in-out;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.chaliceGray};\n  }\n`\n\nexport default function AddressInputPanel({ title, initialInput = '', onChange = () => {}, onError = () => {} }) {\n  const { t } = useTranslation()\n\n  const { library } = useWeb3Context()\n\n  const [input, setInput] = useState(initialInput)\n  const debouncedInput = useDebounce(input, 150)\n\n  const [data, setData] = useState({ address: undefined, name: undefined })\n  const [error, setError] = useState(false)\n\n  // keep data and errors in sync\n  useEffect(() => {\n    onChange({ address: data.address, name: data.name })\n  }, [onChange, data.address, data.name])\n  useEffect(() => {\n    onError(error)\n  }, [onError, error])\n\n  // run parser on debounced input\n  useEffect(() => {\n    let stale = false\n\n    if (isAddress(debouncedInput)) {\n      library\n        .lookupAddress(debouncedInput)\n        .then(name => {\n          if (!stale) {\n            // if an ENS name exists, set it as the destination\n            if (name) {\n              setInput(name)\n            } else {\n              setData({ address: debouncedInput, name: '' })\n              setError(null)\n            }\n          }\n        })\n        .catch(() => {\n          setData({ address: debouncedInput, name: '' })\n          setError(null)\n        })\n    } else {\n      if (debouncedInput !== '') {\n        library\n          .resolveName(debouncedInput)\n          .then(address => {\n            if (!stale) {\n              // if the debounced input name resolves to an address\n              if (address) {\n                setData({ address: address, name: debouncedInput })\n                setError(null)\n              } else {\n                setError(true)\n              }\n            }\n          })\n          .catch(() => {\n            setError(true)\n          })\n      }\n    }\n\n    return () => {\n      stale = true\n    }\n  }, [debouncedInput, library, onChange, onError])\n\n  function onInput(event) {\n    if (data.address !== undefined || data.name !== undefined) {\n      setData({ address: undefined, name: undefined })\n    }\n    if (error !== undefined) {\n      setError()\n    }\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setInput(checksummedInput || input)\n  }\n\n  return (\n    <InputPanel>\n      <ContainerRow error={input !== '' && error}>\n        <InputContainer>\n          <LabelRow>\n            <LabelContainer>\n              <span>{title || t('recipientAddress')}</span>\n            </LabelContainer>\n          </LabelRow>\n          <InputRow>\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder=\"0x1234...\"\n              error={input !== '' && error}\n              onChange={onInput}\n              value={input}\n            />\n          </InputRow>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router'\nimport { useWeb3Context } from 'web3-react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\n\nimport { Button } from '../../theme'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport { useFactoryContract } from '../../hooks'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\n\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  padding: 1rem 0;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst CreateExchangeWrapper = styled.div`\n  color: ${({ theme }) => theme.doveGray};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst SummaryText = styled.div`\n  font-size: 0.75rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction CreateExchange({ history, location }) {\n  const { t } = useTranslation()\n  const { account } = useWeb3Context()\n  const factory = useFactoryContract()\n\n  const [tokenAddress, setTokenAddress] = useState({\n    address: '',\n    name: ''\n  })\n  const [tokenAddressError, setTokenAddressError] = useState()\n\n  const { name, symbol, decimals, exchangeAddress } = useTokenDetails(tokenAddress.address)\n  const addTransaction = useTransactionAdder()\n\n  // clear location state, if it exists\n  useEffect(() => {\n    if (location.state) {\n      history.replace(location.pathname)\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  // validate everything\n  const [errorMessage, setErrorMessage] = useState(!account && t('noWallet'))\n  useEffect(() => {\n    if (tokenAddressError) {\n      setErrorMessage(t('invalidTokenAddress'))\n    } else if (symbol === undefined || decimals === undefined || exchangeAddress === undefined) {\n      setErrorMessage()\n    } else if (symbol === null) {\n      setErrorMessage(t('invalidSymbol'))\n    } else if (decimals === null) {\n      setErrorMessage(t('invalidDecimals'))\n    } else if (exchangeAddress !== ethers.constants.AddressZero) {\n      setErrorMessage(t('exchangeExists'))\n    } else if (!account) {\n      setErrorMessage(t('noWallet'))\n    } else {\n      setErrorMessage(null)\n    }\n\n    return () => {\n      setErrorMessage()\n    }\n  }, [tokenAddress.address, symbol, decimals, exchangeAddress, account, t, tokenAddressError])\n\n  async function createExchange() {\n    const estimatedGasLimit = await factory.estimate.createExchange(tokenAddress.address)\n\n    factory.createExchange(tokenAddress.address, { gasLimit: estimatedGasLimit }).then(response => {\n      ReactGA.event({\n        category: 'Pool',\n        action: 'CreateExchange'\n      })\n\n      addTransaction(response)\n    })\n  }\n\n  const isValid = errorMessage === null\n\n  return (\n    <>\n      <AddressInputPanel\n        title={t('tokenAddress')}\n        initialInput={(location.state && location.state.tokenAddress) || ''}\n        onChange={setTokenAddress}\n        onError={setTokenAddressError}\n      />\n      <OversizedPanel hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('name')}</ExchangeRate>\n            <span>{name ? name : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('symbol')}</ExchangeRate>\n            <span>{symbol ? symbol : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('decimals')}</ExchangeRate>\n            <span>{decimals || decimals === 0 ? decimals : ' - '}</span>\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      <CreateExchangeWrapper>\n        <SummaryText>{errorMessage ? errorMessage : t('enterTokenCont')}</SummaryText>\n      </CreateExchangeWrapper>\n      <Flex>\n        <Button disabled={!isValid} onClick={createExchange}>\n          {t('createExchange')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default withRouter(CreateExchange)\n"],"sourceRoot":""}