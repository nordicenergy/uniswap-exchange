{"version":3,"file":"portis-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\nconst chainIdToNetwork: { [network: number]: string } = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n  100: 'xdai'\n}\n\ntype Network = number | { chainId: string; [key: string]: any }\n\ninterface PortisConnectorArguments {\n  dAppId: string\n  networks: Network[]\n  config?: any\n}\n\nexport class PortisConnector extends AbstractConnector {\n  private readonly dAppId: string\n  private readonly networks: Network[]\n  private readonly config: any\n\n  public portis: any\n\n  constructor({ dAppId, networks, config = {} }: PortisConnectorArguments) {\n    const chainIds = networks.map((n): number => (typeof n === 'number' ? n : Number(n.chainId)))\n    invariant(\n      chainIds.every((c): boolean => !!chainIdToNetwork[c]),\n      `One or more unsupported networks ${networks}`\n    )\n    super({ supportedChainIds: chainIds })\n\n    this.dAppId = dAppId\n    this.networks = networks\n    this.config = config\n\n    this.handleOnLogout = this.handleOnLogout.bind(this)\n    this.handleOnActiveWalletChanged = this.handleOnActiveWalletChanged.bind(this)\n    this.handleOnError = this.handleOnError.bind(this)\n  }\n\n  private handleOnLogout(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onLogout' event\")\n    }\n    this.emitDeactivate()\n  }\n\n  private handleOnActiveWalletChanged(account: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onActiveWalletChanged' event with payload\", account)\n    }\n    this.emitUpdate({ account })\n  }\n\n  private handleOnError(error: Error): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onError' event\")\n    }\n    this.emitError(error)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.portis) {\n      const { default: Portis } = await import('@portis/web3')\n      this.portis = new Portis(\n        this.dAppId,\n        typeof this.networks[0] === 'number' ? chainIdToNetwork[this.networks[0]] : (this.networks[0] as any),\n        this.config\n      )\n    }\n\n    this.portis.onLogout(this.handleOnLogout)\n    this.portis.onActiveWalletChanged(this.handleOnActiveWalletChanged)\n    this.portis.onError(this.handleOnError)\n\n    const account = await this.portis.provider.enable().then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.portis.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.portis.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.portis.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.portis.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.portis.onLogout(() => {})\n    this.portis.onActiveWalletChanged(() => {})\n    this.portis.onError(() => {})\n  }\n\n  public async changeNetwork(newNetwork: number | Network, isGasRelayEnabled?: boolean) {\n    if (typeof newNetwork === 'number') {\n      invariant(!!chainIdToNetwork[newNetwork], `Invalid chainId ${newNetwork}`)\n      this.portis.changeNetwork(chainIdToNetwork[newNetwork], isGasRelayEnabled)\n      this.emitUpdate({ chainId: newNetwork })\n    } else {\n      this.portis.changeNetwork(newNetwork, isGasRelayEnabled)\n      this.emitUpdate({ chainId: Number(newNetwork.chainId) })\n    }\n  }\n\n  public async close() {\n    await this.portis.logout()\n    this.emitDeactivate()\n  }\n}\n"],"names":["chainIdToNetwork","PortisConnector","dAppId","networks","config","chainIds","map","n","Number","chainId","every","c","invariant","supportedChainIds","handleOnLogout","bind","handleOnActiveWalletChanged","handleOnError","console","log","emitDeactivate","account","emitUpdate","error","emitError","activate","portis","onLogout","onActiveWalletChanged","onError","provider","enable","then","accounts","Portis","getProvider","getChainId","send","getAccount","deactivate","changeNetwork","newNetwork","isGasRelayEnabled","close","logout","AbstractConnector"],"mappings":"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"}