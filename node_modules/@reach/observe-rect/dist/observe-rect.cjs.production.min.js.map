{"version":3,"file":"observe-rect.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["let props: (keyof DOMRect)[] = [\n  'bottom',\n  'height',\n  'left',\n  'right',\n  'top',\n  'width'\n];\n\nlet rectChanged = (a: DOMRect = {} as DOMRect, b: DOMRect = {} as DOMRect) =>\n  props.some(prop => a[prop] !== b[prop]);\n\nlet observedNodes = new Map<HTMLElement, RectProps>();\nlet rafId: number;\n\nlet run = () => {\n  observedNodes.forEach(state => {\n    if (state.hasRectChanged) {\n      state.callbacks.forEach(cb => cb(state.rect));\n      state.hasRectChanged = false;\n    }\n  });\n\n  window.setTimeout(() => {\n    observedNodes.forEach((state, node) => {\n      let newRect = node.getBoundingClientRect();\n      if (rectChanged(newRect, state.rect)) {\n        state.hasRectChanged = true;\n        state.rect = newRect;\n      }\n    });\n  }, 0);\n\n  rafId = window.requestAnimationFrame(run);\n};\n\nexport default (node: HTMLElement, cb: Function) => {\n  return {\n    observe() {\n      let wasEmpty = observedNodes.size === 0;\n      if (observedNodes.has(node)) {\n        observedNodes.get(node)!.callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n      if (wasEmpty) run();\n    },\n\n    unobserve() {\n      let state = observedNodes.get(node);\n      if (state) {\n        // Remove the callback\n        const index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1);\n\n        // Remove the node reference\n        if (!state.callbacks.length) observedNodes.delete(node);\n\n        // Stop the loop\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n};\n\nexport type PartialRect = Partial<DOMRect>;\n\nexport type RectProps = {\n  rect: DOMRect | undefined;\n  hasRectChanged: boolean;\n  callbacks: Function[];\n};\n"],"names":["rafId","props","observedNodes","Map","node","cb","observe","wasEmpty","size","has","get","callbacks","push","set","rect","undefined","hasRectChanged","run","forEach","state","window","setTimeout","a","b","newRect","getBoundingClientRect","some","prop","requestAnimationFrame","unobserve","index","indexOf","splice","length","cancelAnimationFrame"],"mappings":"oEAAA,IAaIA,EAbAC,EAA2B,CAC7B,SACA,SACA,OACA,QACA,MACA,SAMEC,EAAgB,IAAIC,6BAwBRC,EAAmBC,SAC1B,CACLC,QAAA,eACMC,EAAkC,IAAvBL,EAAcM,KACzBN,EAAcO,IAAIL,GACpBF,EAAcQ,IAAIN,GAAOO,UAAUC,KAAKP,GAExCH,EAAcW,IAAIT,EAAM,CACtBU,UAAMC,EACNC,gBAAgB,EAChBL,UAAW,CAACN,KAGZE,GAlCA,SAANU,IACFf,EAAcgB,SAAQ,SAAAC,GAChBA,EAAMH,iBACRG,EAAMR,UAAUO,SAAQ,SAAAb,UAAMA,EAAGc,EAAML,SACvCK,EAAMH,gBAAiB,MAI3BI,OAAOC,YAAW,WAChBnB,EAAcgB,SAAQ,SAACC,EAAOf,OAffkB,EAA4BC,EAgBrCC,EAAUpB,EAAKqB,kCAhBNH,EAiBGE,KAjBHF,EAAa,cAAeC,EAiBhBJ,EAAML,QAjBUS,EAAa,IAC1DtB,EAAMyB,MAAK,SAAAC,UAAQL,EAAEK,KAAUJ,EAAEI,QAiB3BR,EAAMH,gBAAiB,EACvBG,EAAML,KAAOU,QAGhB,GAEHxB,EAAQoB,OAAOQ,sBAAsBX,GAgBnBA,IAGhBY,yBACMV,EAAQjB,EAAcQ,IAAIN,MAC1Be,EAAO,KAEHW,EAAQX,EAAMR,UAAUoB,QAAQ1B,GAClCyB,GAAS,GAAGX,EAAMR,UAAUqB,OAAOF,EAAO,GAGzCX,EAAMR,UAAUsB,QAAQ/B,SAAqBE,GAG7CF,EAAcM,MAAM0B,qBAAqBlC"}