{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/theme/index.js\";\nimport React, { useEffect } from 'react';\nimport { createGlobalStyle, css, ThemeProvider as StyledComponentsThemeProvider } from 'styled-components';\nimport { checkSupportedTheme, getQueryParam } from '../utils';\nimport { SUPPORTED_THEMES } from '../constants';\nimport { useDarkModeManager } from '../contexts/LocalStorage';\nexport * from './components';\nconst MEDIA_WIDTHS = {\n  upToSmall: 600,\n  upToMedium: 960,\n  upToLarge: 1280\n};\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  accumulator[size] = (...args) => css`\n    @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n      ${css(...args)}\n    }\n  `;\n\n  return accumulator;\n}, {});\nconst white = '#FFFFFF';\nconst black = '#000000';\nexport default function ThemeProvider({\n  children\n}) {\n  const [darkMode, toggleDarkMode] = useDarkModeManager();\n  const themeURL = checkSupportedTheme(getQueryParam(window.location, 'theme'));\n  const themeToRender = themeURL ? themeURL.toUpperCase() === SUPPORTED_THEMES.DARK ? true : themeURL.toUpperCase() === SUPPORTED_THEMES.LIGHT ? false : darkMode : darkMode;\n  useEffect(() => {\n    toggleDarkMode(themeToRender);\n  }, [toggleDarkMode, themeToRender]);\n  return React.createElement(StyledComponentsThemeProvider, {\n    theme: theme(themeToRender),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, children);\n}\n\nconst theme = darkMode => ({\n  white,\n  black,\n  textColor: darkMode ? white : ' #0d0d0d',\n  greyText: darkMode ? white : '#f2f2f2',\n  // for setting css on <html>\n  backgroundColor: darkMode ? ' #18191b' : white,\n  modalBackground: darkMode ? 'rgba(255, 204, 0)' : 'rgba(230, 184, 0)',\n  inputBackground: darkMode ? '#18191b' : white,\n  placeholderGray: darkMode ? '#d9d9d9' : '#f2f2f2',\n  shadowColor: darkMode ? '#000' : '#E6B800',\n  // grays\n  concreteGray: darkMode ? '#333333' : '#fafafa',\n  mercuryGray: darkMode ? '#333333' : ' #f2f2f2',\n  silverGray: darkMode ? '#737373' : ' #b3b3b3',\n  chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n  doveGray: darkMode ? ' #b3b3b3' : '#737373',\n  mineshaftGray: darkMode ? ' #f2f2f2' : '#2B2B2B',\n  activeGray: darkMode ? '#333333' : '#F7F8FA',\n  buttonOutlineGrey: darkMode ? '#fafafa' : '#F2F2F2',\n  tokenRowHover: darkMode ? '#262626' : '#F2F2F2',\n  //blacks\n  charcoalBlack: darkMode ? '#F2F2F2' : '#262626',\n  // blues\n  zumthorBlue: darkMode ? '#262626' : '#EBF4FF',\n  malibuBlue: darkMode ? '#E6B800' : '#E6B800',\n  royalBlue: darkMode ? '#E6B800' : '#E6B800',\n  loadingBlue: darkMode ? '#666666' : '#666666',\n  // purples\n  wisteriaPurple: '#E6B800',\n  // reds\n  salmonRed: '#ffcc66',\n  // orange\n  pizazzOrange: '#B38F00',\n  // yellows\n  warningYellow: '#ffd633',\n  // pink\n  uniswapPink: '#E6B800',\n  //green\n  connectedGreen: '#27AE60',\n  //branded\n  metaMaskOrange: '#CCA300',\n  //specific\n  textHover: darkMode ? theme.uniswapPink : theme.doveGray,\n  // connect button when loggedout\n  buttonFaded: darkMode ? '#E6B800' : '#737373',\n  // media queries\n  mediaWidth: mediaWidthTemplates,\n  // css snippets\n  flexColumnNoWrap: css`\n    display: flex;\n    flex-flow: column nowrap;\n  `,\n  flexRowNoWrap: css`\n    display: flex;\n    flex-flow: row nowrap;\n  `\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: 'Inter', sans-serif; }\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;    \n  }\n\n  body > div {\n    height: 100%;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n}\n\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({\n  theme\n}) => theme.textColor};\n    background-color: ${({\n  theme\n}) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n`;","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/theme/index.js"],"names":["React","useEffect","createGlobalStyle","css","ThemeProvider","StyledComponentsThemeProvider","checkSupportedTheme","getQueryParam","SUPPORTED_THEMES","useDarkModeManager","MEDIA_WIDTHS","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","args","white","black","children","darkMode","toggleDarkMode","themeURL","window","location","themeToRender","toUpperCase","DARK","LIGHT","theme","textColor","greyText","backgroundColor","modalBackground","inputBackground","placeholderGray","shadowColor","concreteGray","mercuryGray","silverGray","chaliceGray","doveGray","mineshaftGray","activeGray","buttonOutlineGrey","tokenRowHover","charcoalBlack","zumthorBlue","malibuBlue","royalBlue","loadingBlue","wisteriaPurple","salmonRed","pizazzOrange","warningYellow","uniswapPink","connectedGreen","metaMaskOrange","textHover","buttonFaded","mediaWidth","flexColumnNoWrap","flexRowNoWrap","GlobalStyle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { createGlobalStyle, css, ThemeProvider as StyledComponentsThemeProvider } from 'styled-components'\nimport { checkSupportedTheme, getQueryParam } from '../utils'\nimport { SUPPORTED_THEMES } from '../constants'\nimport { useDarkModeManager } from '../contexts/LocalStorage'\n\nexport * from './components'\n\nconst MEDIA_WIDTHS = {\n  upToSmall: 600,\n  upToMedium: 960,\n  upToLarge: 1280\n}\n\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  accumulator[size] = (...args) => css`\n    @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n      ${css(...args)}\n    }\n  `\n  return accumulator\n}, {})\n\nconst white = '#FFFFFF'\nconst black = '#000000'\n\nexport default function ThemeProvider({ children }) {\n  const [darkMode, toggleDarkMode] = useDarkModeManager()\n  const themeURL = checkSupportedTheme(getQueryParam(window.location, 'theme'))\n  const themeToRender = themeURL\n    ? themeURL.toUpperCase() === SUPPORTED_THEMES.DARK\n      ? true\n      : themeURL.toUpperCase() === SUPPORTED_THEMES.LIGHT\n      ? false\n      : darkMode\n    : darkMode\n  useEffect(() => {\n    toggleDarkMode(themeToRender)\n  }, [toggleDarkMode, themeToRender])\n  return <StyledComponentsThemeProvider theme={theme(themeToRender)}>{children}</StyledComponentsThemeProvider>\n}\n\nconst theme = darkMode => ({\n  white,\n  black,\n  textColor: darkMode ? white : ' #0d0d0d',\n  greyText: darkMode ? white : '#f2f2f2',\n\n  // for setting css on <html>\n  backgroundColor: darkMode ? ' #18191b' : white,\n\n  modalBackground: darkMode ? 'rgba(255, 204, 0)' : 'rgba(230, 184, 0)',\n  inputBackground: darkMode ? '#18191b' : white,\n  placeholderGray: darkMode ? '#d9d9d9' : '#f2f2f2',\n  shadowColor: darkMode ? '#000' : '#E6B800',\n\n  // grays\n  concreteGray: darkMode ? '#333333' : '#fafafa',\n  mercuryGray: darkMode ? '#333333' : ' #f2f2f2',\n  silverGray: darkMode ? '#737373' : ' #b3b3b3',\n  chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n  doveGray: darkMode ? ' #b3b3b3' : '#737373',\n  mineshaftGray: darkMode ? ' #f2f2f2' : '#2B2B2B',\n  activeGray: darkMode ? '#333333' : '#F7F8FA',\n  buttonOutlineGrey: darkMode ? '#fafafa' : '#F2F2F2',\n  tokenRowHover: darkMode ? '#262626' : '#F2F2F2',\n\n  //blacks\n  charcoalBlack: darkMode ? '#F2F2F2' : '#262626',\n  // blues\n  zumthorBlue: darkMode ? '#262626' : '#EBF4FF',\n  malibuBlue: darkMode ? '#E6B800' : '#E6B800',\n  royalBlue: darkMode ? '#E6B800' : '#E6B800',\n  loadingBlue: darkMode ? '#666666' : '#666666',\n\n  // purples\n  wisteriaPurple: '#E6B800',\n  // reds\n  salmonRed: '#ffcc66',\n  // orange\n  pizazzOrange: '#B38F00',\n  // yellows\n  warningYellow: '#ffd633',\n  // pink\n  uniswapPink: '#E6B800',\n  //green\n  connectedGreen: '#27AE60',\n\n  //branded\n  metaMaskOrange: '#CCA300',\n\n  //specific\n  textHover: darkMode ? theme.uniswapPink : theme.doveGray,\n\n  // connect button when loggedout\n  buttonFaded: darkMode ? '#E6B800' : '#737373',\n\n  // media queries\n  mediaWidth: mediaWidthTemplates,\n  // css snippets\n  flexColumnNoWrap: css`\n    display: flex;\n    flex-flow: column nowrap;\n  `,\n  flexRowNoWrap: css`\n    display: flex;\n    flex-flow: row nowrap;\n  `\n})\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: 'Inter', sans-serif; }\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;    \n  }\n\n  body > div {\n    height: 100%;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n}\n\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n`\n"]},"metadata":{},"sourceType":"module"}