{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  padding: 2rem;\\n\\n  button {\\n    max-width: 20rem;\\n  }\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  flex: 1 1 auto;\\n  width: 0;\\n  color: \",\";\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  \",\";\\n  align-items: center;\\n  color: \",\";\\n  font-size: 0.75rem;\\n  padding: 0.5rem 1rem;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  width: 0.625rem;\\n  height: 0.625rem;\\n  position: relative;\\n  padding: 0.875rem;\\n  cursor: \",\";\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  \",\"\\n  justify-content: center;\\n  align-items: center;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useReducer,useEffect}from'react';import ReactGA from'react-ga';import{createBrowserHistory}from'history';import{ethers}from'ethers';import styled from'styled-components';import{useTranslation}from'react-i18next';import{Button}from'../../theme';import{useWeb3React}from'../../hooks';import CurrencyInputPanel from'../CurrencyInputPanel';import AddressInputPanel from'../AddressInputPanel';import OversizedPanel from'../OversizedPanel';import TransactionDetails from'../TransactionDetails';import ArrowDown from'../../assets/svg/SVGArrowDown';import{amountFormatter,calculateGasMargin}from'../../utils';import{useExchangeContract}from'../../hooks';import{useTokenDetails}from'../../contexts/Tokens';import{useTransactionAdder}from'../../contexts/Transactions';import{useAddressBalance,useExchangeReserves}from'../../contexts/Balances';import{useAddressAllowance}from'../../contexts/Allowances';import{useWalletModalToggle}from'../../contexts/Application';import{useETHPriceInUSD}from'../../contexts/Balances';var INPUT=0;var OUTPUT=1;var ETH_TO_TOKEN=0;var TOKEN_TO_ETH=1;var TOKEN_TO_TOKEN=2;// denominated in bips\nvar ALLOWED_SLIPPAGE_DEFAULT=50;var TOKEN_ALLOWED_SLIPPAGE_DEFAULT=50;// 15 minutes, denominated in seconds\nvar DEFAULT_DEADLINE_FROM_NOW=60*15;// % above the calculated gas cost that we actually send, denominated in bips\nvar GAS_MARGIN=ethers.utils.bigNumberify(1000);var DownArrowBackground=styled.div(_templateObject(),function(_ref){var theme=_ref.theme;return theme.flexRowNoWrap;});var WrappedArrowDown=function WrappedArrowDown(_ref2){var clickable=_ref2.clickable,active=_ref2.active,rest=_objectWithoutProperties(_ref2,[\"clickable\",\"active\"]);return React.createElement(ArrowDown,rest);};var DownArrow=styled(WrappedArrowDown)(_templateObject2(),function(_ref3){var theme=_ref3.theme,active=_ref3.active;return active?theme.royalBlue:theme.chaliceGray;},function(_ref4){var clickable=_ref4.clickable;return clickable&&'pointer';});var ExchangeRateWrapper=styled.div(_templateObject3(),function(_ref5){var theme=_ref5.theme;return theme.flexRowNoWrap;},function(_ref6){var theme=_ref6.theme;return theme.doveGray;});var ExchangeRate=styled.span(_templateObject4(),function(_ref7){var theme=_ref7.theme;return theme.doveGray;});var Flex=styled.div(_templateObject5());function calculateSlippageBounds(value){var token=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var tokenAllowedSlippage=arguments.length>2?arguments[2]:undefined;var allowedSlippage=arguments.length>3?arguments[3]:undefined;if(value){var offset=value.mul(token?tokenAllowedSlippage:allowedSlippage).div(ethers.utils.bigNumberify(10000));var minimum=value.sub(offset);var maximum=value.add(offset);return{minimum:minimum.lt(ethers.constants.Zero)?ethers.constants.Zero:minimum,maximum:maximum.gt(ethers.constants.MaxUint256)?ethers.constants.MaxUint256:maximum};}else{return{};}}function getSwapType(inputCurrency,outputCurrency){if(!inputCurrency||!outputCurrency){return null;}else if(inputCurrency==='ETH'){return ETH_TO_TOKEN;}else if(outputCurrency==='ETH'){return TOKEN_TO_ETH;}else{return TOKEN_TO_TOKEN;}}// this mocks the getInputPrice function, and calculates the required output\nfunction calculateEtherTokenOutputFromInput(inputAmount,inputReserve,outputReserve){var inputAmountWithFee=inputAmount.mul(ethers.utils.bigNumberify(997));var numerator=inputAmountWithFee.mul(outputReserve);var denominator=inputReserve.mul(ethers.utils.bigNumberify(1000)).add(inputAmountWithFee);return numerator.div(denominator);}// this mocks the getOutputPrice function, and calculates the required input\nfunction calculateEtherTokenInputFromOutput(outputAmount,inputReserve,outputReserve){var numerator=inputReserve.mul(outputAmount).mul(ethers.utils.bigNumberify(1000));var denominator=outputReserve.sub(outputAmount).mul(ethers.utils.bigNumberify(997));return numerator.div(denominator).add(ethers.constants.One);}function getInitialSwapState(state){return{independentValue:state.exactFieldURL&&state.exactAmountURL?state.exactAmountURL:'',// this is a user input\ndependentValue:'',// this is a calculated number\nindependentField:state.exactFieldURL==='output'?OUTPUT:INPUT,inputCurrency:state.inputCurrencyURL?state.inputCurrencyURL:'ETH',outputCurrency:state.outputCurrencyURL?state.outputCurrencyURL==='ETH'?state.inputCurrencyURL&&state.inputCurrencyURL!=='ETH'?'ETH':'':state.outputCurrencyURL:state.initialCurrency?state.initialCurrency:''};}function swapStateReducer(state,action){switch(action.type){case'FLIP_INDEPENDENT':{var independentField=state.independentField,inputCurrency=state.inputCurrency,outputCurrency=state.outputCurrency;return _objectSpread({},state,{dependentValue:'',independentField:independentField===INPUT?OUTPUT:INPUT,inputCurrency:outputCurrency,outputCurrency:inputCurrency});}case'SELECT_CURRENCY':{var _inputCurrency=state.inputCurrency,_outputCurrency=state.outputCurrency;var _action$payload=action.payload,field=_action$payload.field,currency=_action$payload.currency;var newInputCurrency=field===INPUT?currency:_inputCurrency;var newOutputCurrency=field===OUTPUT?currency:_outputCurrency;if(newInputCurrency===newOutputCurrency){return _objectSpread({},state,{inputCurrency:field===INPUT?currency:'',outputCurrency:field===OUTPUT?currency:''});}else{return _objectSpread({},state,{inputCurrency:newInputCurrency,outputCurrency:newOutputCurrency});}}case'UPDATE_INDEPENDENT':{var _action$payload2=action.payload,_field=_action$payload2.field,value=_action$payload2.value;var dependentValue=state.dependentValue,independentValue=state.independentValue;return _objectSpread({},state,{independentValue:value,dependentValue:value===independentValue?dependentValue:'',independentField:_field});}case'UPDATE_DEPENDENT':{return _objectSpread({},state,{dependentValue:action.payload});}default:{return getInitialSwapState();}}}function getExchangeRate(inputValue,inputDecimals,outputValue,outputDecimals){var invert=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;try{if(inputValue&&(inputDecimals||inputDecimals===0)&&outputValue&&(outputDecimals||outputDecimals===0)){var factor=ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18));if(invert){return inputValue.mul(factor).div(outputValue).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals))).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)));}else{return outputValue.mul(factor).div(inputValue).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals))).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)));}}}catch(_unused){}}function getMarketRate(swapType,inputReserveETH,inputReserveToken,inputDecimals,outputReserveETH,outputReserveToken,outputDecimals){var invert=arguments.length>7&&arguments[7]!==undefined?arguments[7]:false;if(swapType===ETH_TO_TOKEN){return getExchangeRate(outputReserveETH,18,outputReserveToken,outputDecimals,invert);}else if(swapType===TOKEN_TO_ETH){return getExchangeRate(inputReserveToken,inputDecimals,inputReserveETH,18,invert);}else if(swapType===TOKEN_TO_TOKEN){var factor=ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18));var firstRate=getExchangeRate(inputReserveToken,inputDecimals,inputReserveETH,18);var secondRate=getExchangeRate(outputReserveETH,18,outputReserveToken,outputDecimals);try{return!!(firstRate&&secondRate)?firstRate.mul(secondRate).div(factor):undefined;}catch(_unused2){}}}export default function ExchangePage(_ref8){var initialCurrency=_ref8.initialCurrency,_ref8$sending=_ref8.sending,sending=_ref8$sending===void 0?false:_ref8$sending,params=_ref8.params;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account,error=_useWeb3React.error;// BigNumber.js instance\nvar ethPrice=useETHPriceInUSD();var addTransaction=useTransactionAdder();// check if URL specifies valid slippage, if so use as default\nvar initialSlippage=function initialSlippage(){var token=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var slippage=Number.parseInt(params.slippage);if(!isNaN(slippage)&&(slippage===0||slippage>=1)){return slippage;// round to match custom input availability\n}// check for token <-> token slippage option\nreturn token?TOKEN_ALLOWED_SLIPPAGE_DEFAULT:ALLOWED_SLIPPAGE_DEFAULT;};// check URL params for recipient, only on send page\nvar initialRecipient=function initialRecipient(){if(sending&&params.recipient){return params.recipient;}return'';};var _useState=useState(DEFAULT_DEADLINE_FROM_NOW),_useState2=_slicedToArray(_useState,2),deadlineFromNow=_useState2[0],setDeadlineFromNow=_useState2[1];var _useState3=useState(function(){return initialSlippage();}),_useState4=_slicedToArray(_useState3,2),rawSlippage=_useState4[0],setRawSlippage=_useState4[1];var _useState5=useState(function(){return initialSlippage(true);}),_useState6=_slicedToArray(_useState5,2),rawTokenSlippage=_useState6[0],setRawTokenSlippage=_useState6[1];var allowedSlippageBig=ethers.utils.bigNumberify(rawSlippage);var tokenAllowedSlippageBig=ethers.utils.bigNumberify(rawTokenSlippage);// analytics\nuseEffect(function(){ReactGA.pageview(window.location.pathname+window.location.search);},[]);// core swap state\nvar _useReducer=useReducer(swapStateReducer,{initialCurrency:initialCurrency,inputCurrencyURL:params.inputCurrency,outputCurrencyURL:params.outputCurrency,exactFieldURL:params.exactField,exactAmountURL:params.exactAmount},getInitialSwapState),_useReducer2=_slicedToArray(_useReducer,2),swapState=_useReducer2[0],dispatchSwapState=_useReducer2[1];var independentValue=swapState.independentValue,dependentValue=swapState.dependentValue,independentField=swapState.independentField,inputCurrency=swapState.inputCurrency,outputCurrency=swapState.outputCurrency;var _useState7=useState({address:initialRecipient(),name:''}),_useState8=_slicedToArray(_useState7,2),recipient=_useState8[0],setRecipient=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),recipientError=_useState10[0],setRecipientError=_useState10[1];// get swap type from the currency types\nvar swapType=getSwapType(inputCurrency,outputCurrency);// get decimals and exchange address for each of the currency types\nvar _useTokenDetails=useTokenDetails(inputCurrency),inputSymbol=_useTokenDetails.symbol,inputDecimals=_useTokenDetails.decimals,inputExchangeAddress=_useTokenDetails.exchangeAddress;var _useTokenDetails2=useTokenDetails(outputCurrency),outputSymbol=_useTokenDetails2.symbol,outputDecimals=_useTokenDetails2.decimals,outputExchangeAddress=_useTokenDetails2.exchangeAddress;var inputExchangeContract=useExchangeContract(inputExchangeAddress);var outputExchangeContract=useExchangeContract(outputExchangeAddress);var contract=swapType===ETH_TO_TOKEN?outputExchangeContract:inputExchangeContract;// get input allowance\nvar inputAllowance=useAddressAllowance(account,inputCurrency,inputExchangeAddress);// fetch reserves for each of the currency types\nvar _useExchangeReserves=useExchangeReserves(inputCurrency),inputReserveETH=_useExchangeReserves.reserveETH,inputReserveToken=_useExchangeReserves.reserveToken;var _useExchangeReserves2=useExchangeReserves(outputCurrency),outputReserveETH=_useExchangeReserves2.reserveETH,outputReserveToken=_useExchangeReserves2.reserveToken;// get balances for each of the currency types\nvar inputBalance=useAddressBalance(account,inputCurrency);var outputBalance=useAddressBalance(account,outputCurrency);var inputBalanceFormatted=!!(inputBalance&&Number.isInteger(inputDecimals))?amountFormatter(inputBalance,inputDecimals,Math.min(4,inputDecimals)):'';var outputBalanceFormatted=!!(outputBalance&&Number.isInteger(outputDecimals))?amountFormatter(outputBalance,outputDecimals,Math.min(4,outputDecimals)):'';// compute useful transforms of the data above\nvar independentDecimals=independentField===INPUT?inputDecimals:outputDecimals;var dependentDecimals=independentField===OUTPUT?inputDecimals:outputDecimals;// declare/get parsed and formatted versions of input/output values\nvar _useState11=useState(),_useState12=_slicedToArray(_useState11,2),independentValueParsed=_useState12[0],setIndependentValueParsed=_useState12[1];var dependentValueFormatted=!!(dependentValue&&(dependentDecimals||dependentDecimals===0))?amountFormatter(dependentValue,dependentDecimals,Math.min(4,dependentDecimals),false):'';var inputValueParsed=independentField===INPUT?independentValueParsed:dependentValue;var inputValueFormatted=independentField===INPUT?independentValue:dependentValueFormatted;var outputValueParsed=independentField===OUTPUT?independentValueParsed:dependentValue;var outputValueFormatted=independentField===OUTPUT?independentValue:dependentValueFormatted;// validate + parse independent value\nvar _useState13=useState(),_useState14=_slicedToArray(_useState13,2),independentError=_useState14[0],setIndependentError=_useState14[1];useEffect(function(){if(independentValue&&(independentDecimals||independentDecimals===0)){try{var parsedValue=ethers.utils.parseUnits(independentValue,independentDecimals);if(parsedValue.lte(ethers.constants.Zero)||parsedValue.gte(ethers.constants.MaxUint256)){throw Error();}else{setIndependentValueParsed(parsedValue);setIndependentError(null);}}catch(_unused3){setIndependentError(t('inputNotValid'));}return function(){setIndependentValueParsed();setIndependentError();};}},[independentValue,independentDecimals,t]);// calculate slippage from target rate\nvar _calculateSlippageBou=calculateSlippageBounds(dependentValue,swapType===TOKEN_TO_TOKEN,tokenAllowedSlippageBig,allowedSlippageBig),dependentValueMinumum=_calculateSlippageBou.minimum,dependentValueMaximum=_calculateSlippageBou.maximum;// validate input allowance + balance\nvar _useState15=useState(),_useState16=_slicedToArray(_useState15,2),inputError=_useState16[0],setInputError=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),showUnlock=_useState18[0],setShowUnlock=_useState18[1];useEffect(function(){var inputValueCalculation=independentField===INPUT?independentValueParsed:dependentValueMaximum;if(inputBalance&&(inputAllowance||inputCurrency==='ETH')&&inputValueCalculation){if(inputBalance.lt(inputValueCalculation)){setInputError(t('insufficientBalance'));}else if(inputCurrency!=='ETH'&&inputAllowance.lt(inputValueCalculation)){setInputError(t('unlockTokenCont'));setShowUnlock(true);}else{setInputError(null);setShowUnlock(false);}return function(){setInputError();setShowUnlock(false);};}},[independentField,independentValueParsed,dependentValueMaximum,inputBalance,inputCurrency,inputAllowance,t]);// calculate dependent value\nuseEffect(function(){var amount=independentValueParsed;if(swapType===ETH_TO_TOKEN){var reserveETH=outputReserveETH;var reserveToken=outputReserveToken;if(amount&&reserveETH&&reserveToken){try{var calculatedDependentValue=independentField===INPUT?calculateEtherTokenOutputFromInput(amount,reserveETH,reserveToken):calculateEtherTokenInputFromOutput(amount,reserveETH,reserveToken);if(calculatedDependentValue.lte(ethers.constants.Zero)){throw Error();}dispatchSwapState({type:'UPDATE_DEPENDENT',payload:calculatedDependentValue});}catch(_unused4){setIndependentError(t('insufficientLiquidity'));}return function(){dispatchSwapState({type:'UPDATE_DEPENDENT',payload:''});};}}else if(swapType===TOKEN_TO_ETH){var _reserveETH=inputReserveETH;var _reserveToken=inputReserveToken;if(amount&&_reserveETH&&_reserveToken){try{var _calculatedDependentValue=independentField===INPUT?calculateEtherTokenOutputFromInput(amount,_reserveToken,_reserveETH):calculateEtherTokenInputFromOutput(amount,_reserveToken,_reserveETH);if(_calculatedDependentValue.lte(ethers.constants.Zero)){throw Error();}dispatchSwapState({type:'UPDATE_DEPENDENT',payload:_calculatedDependentValue});}catch(_unused5){setIndependentError(t('insufficientLiquidity'));}return function(){dispatchSwapState({type:'UPDATE_DEPENDENT',payload:''});};}}else if(swapType===TOKEN_TO_TOKEN){var reserveETHFirst=inputReserveETH;var reserveTokenFirst=inputReserveToken;var reserveETHSecond=outputReserveETH;var reserveTokenSecond=outputReserveToken;if(amount&&reserveETHFirst&&reserveTokenFirst&&reserveETHSecond&&reserveTokenSecond){try{if(independentField===INPUT){var intermediateValue=calculateEtherTokenOutputFromInput(amount,reserveTokenFirst,reserveETHFirst);if(intermediateValue.lte(ethers.constants.Zero)){throw Error();}var _calculatedDependentValue2=calculateEtherTokenOutputFromInput(intermediateValue,reserveETHSecond,reserveTokenSecond);if(_calculatedDependentValue2.lte(ethers.constants.Zero)){throw Error();}dispatchSwapState({type:'UPDATE_DEPENDENT',payload:_calculatedDependentValue2});}else{var _intermediateValue=calculateEtherTokenInputFromOutput(amount,reserveETHSecond,reserveTokenSecond);if(_intermediateValue.lte(ethers.constants.Zero)){throw Error();}var _calculatedDependentValue3=calculateEtherTokenInputFromOutput(_intermediateValue,reserveTokenFirst,reserveETHFirst);if(_calculatedDependentValue3.lte(ethers.constants.Zero)){throw Error();}dispatchSwapState({type:'UPDATE_DEPENDENT',payload:_calculatedDependentValue3});}}catch(_unused6){setIndependentError(t('insufficientLiquidity'));}return function(){dispatchSwapState({type:'UPDATE_DEPENDENT',payload:''});};}}},[independentValueParsed,swapType,outputReserveETH,outputReserveToken,inputReserveETH,inputReserveToken,independentField,t]);useEffect(function(){var history=createBrowserHistory();history.push(window.location.pathname+'');},[]);var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),inverted=_useState20[0],setInverted=_useState20[1];var exchangeRate=getExchangeRate(inputValueParsed,inputDecimals,outputValueParsed,outputDecimals);var exchangeRateInverted=getExchangeRate(inputValueParsed,inputDecimals,outputValueParsed,outputDecimals,true);var marketRate=getMarketRate(swapType,inputReserveETH,inputReserveToken,inputDecimals,outputReserveETH,outputReserveToken,outputDecimals);var percentSlippage=exchangeRate&&marketRate?exchangeRate.sub(marketRate).abs().mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(marketRate).sub(ethers.utils.bigNumberify(3).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(15)))):undefined;var percentSlippageFormatted=percentSlippage&&amountFormatter(percentSlippage,16,2);var slippageWarning=percentSlippage&&percentSlippage.gte(ethers.utils.parseEther('.05'))&&percentSlippage.lt(ethers.utils.parseEther('.2'));// [5% - 20%)\nvar highSlippageWarning=percentSlippage&&percentSlippage.gte(ethers.utils.parseEther('.2'));// [20+%\nvar isValid=sending?exchangeRate&&inputError===null&&independentError===null&&recipientError===null&&deadlineFromNow:exchangeRate&&inputError===null&&independentError===null&&deadlineFromNow;var estimatedText=\"(\".concat(t('estimated'),\")\");function formatBalance(value){return\"Balance: \".concat(value);}function onSwap(){var deadline,estimate,method,args,value,inputEthPerToken,usdTransactionSize,estimatedGasLimit;return _regeneratorRuntime.async(function onSwap$(_context){while(1){switch(_context.prev=_context.next){case 0://if user changed deadline, log new one in minutes\nif(deadlineFromNow!==DEFAULT_DEADLINE_FROM_NOW){ReactGA.event({category:'Advanced Interaction',action:'Set Custom Deadline',value:deadlineFromNow/60});}deadline=Math.ceil(Date.now()/1000)+deadlineFromNow;// if user has changed slippage, log\nif(swapType===TOKEN_TO_TOKEN){if(parseInt(tokenAllowedSlippageBig.toString())!==TOKEN_ALLOWED_SLIPPAGE_DEFAULT){ReactGA.event({category:'Advanced Interaction',action:'Set Custom Slippage',value:parseInt(tokenAllowedSlippageBig.toString())});}}else{if(parseInt(allowedSlippageBig.toString())!==ALLOWED_SLIPPAGE_DEFAULT){ReactGA.event({category:'Advanced Interaction',action:'Set Custom Slippage',value:parseInt(allowedSlippageBig.toString())});}}inputEthPerToken=1;if(inputCurrency!=='ETH'){inputEthPerToken=inputReserveToken&&inputReserveETH?inputReserveETH/inputReserveToken:null;}usdTransactionSize=ethPrice*inputEthPerToken*inputValueFormatted;if(independentField===INPUT){// general details about transaction\nReactGA.event({category:'Transaction',action:sending?'SendInput':'SwapInput',label:outputCurrency,value:usdTransactionSize});if(swapType===ETH_TO_TOKEN){estimate=sending?contract.estimate.ethToTokenTransferInput:contract.estimate.ethToUniswapInput;method=sending?contract.ethToTokenTransferInput:contract.ethToUniswapInput;args=sending?[dependentValueMinumum,deadline,recipient.address]:[dependentValueMinumum,deadline];value=independentValueParsed;}else if(swapType===TOKEN_TO_ETH){estimate=sending?contract.estimate.tokenToEthTransferInput:contract.estimate.tokenToEthSwapInput;method=sending?contract.tokenToEthTransferInput:contract.tokenToEthSwapInput;args=sending?[independentValueParsed,dependentValueMinumum,deadline,recipient.address]:[independentValueParsed,dependentValueMinumum,deadline];value=ethers.constants.Zero;}else if(swapType===TOKEN_TO_TOKEN){estimate=sending?contract.estimate.tokenToTokenTransferInput:contract.estimate.tokenToUniswapInput;method=sending?contract.tokenToTokenTransferInput:contract.tokenToUniswapInput;args=sending?[independentValueParsed,dependentValueMinumum,ethers.constants.One,deadline,recipient.address,outputCurrency]:[independentValueParsed,dependentValueMinumum,ethers.constants.One,deadline,outputCurrency];value=ethers.constants.Zero;}}else if(independentField===OUTPUT){// general details about transaction\nReactGA.event({category:'Transaction',action:sending?'SendOutput':'SwapOutput',label:outputCurrency,value:usdTransactionSize});if(swapType===ETH_TO_TOKEN){estimate=sending?contract.estimate.ethToTokenTransferOutput:contract.estimate.ethToUniswapOutput;method=sending?contract.ethToTokenTransferOutput:contract.ethToUniswapOutput;args=sending?[independentValueParsed,deadline,recipient.address]:[independentValueParsed,deadline];value=dependentValueMaximum;}else if(swapType===TOKEN_TO_ETH){estimate=sending?contract.estimate.tokenToEthTransferOutput:contract.estimate.tokenToEthSwapOutput;method=sending?contract.tokenToEthTransferOutput:contract.tokenToEthSwapOutput;args=sending?[independentValueParsed,dependentValueMaximum,deadline,recipient.address]:[independentValueParsed,dependentValueMaximum,deadline];value=ethers.constants.Zero;}else if(swapType===TOKEN_TO_TOKEN){estimate=sending?contract.estimate.tokenToTokenTransferOutput:contract.estimate.tokenToUniswapOutput;method=sending?contract.tokenToTokenTransferOutput:contract.tokenToUniswapOutput;args=sending?[independentValueParsed,dependentValueMaximum,ethers.constants.MaxUint256,deadline,recipient.address,outputCurrency]:[independentValueParsed,dependentValueMaximum,ethers.constants.MaxUint256,deadline,outputCurrency];value=ethers.constants.Zero;}}_context.next=9;return _regeneratorRuntime.awrap(estimate.apply(void 0,_toConsumableArray(args).concat([{value:value}])));case 9:estimatedGasLimit=_context.sent;method.apply(void 0,_toConsumableArray(args).concat([{value:value,gasLimit:calculateGasMargin(estimatedGasLimit,GAS_MARGIN)}])).then(function(response){addTransaction(response);});case 11:case\"end\":return _context.stop();}}});}var _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),customSlippageError=_useState22[0],setcustomSlippageError=_useState22[1];var toggleWalletModal=useWalletModalToggle();return React.createElement(React.Fragment,null,React.createElement(CurrencyInputPanel,{title:t('input'),description:inputValueFormatted&&independentField===OUTPUT?estimatedText:'',extraText:inputBalanceFormatted&&formatBalance(inputBalanceFormatted),extraTextClickHander:function extraTextClickHander(){if(inputBalance&&inputDecimals){var valueToSet=inputCurrency==='ETH'?inputBalance.sub(ethers.utils.parseEther('.1')):inputBalance;if(valueToSet.gt(ethers.constants.Zero)){dispatchSwapState({type:'UPDATE_INDEPENDENT',payload:{value:amountFormatter(valueToSet,inputDecimals,inputDecimals,false),field:INPUT}});}}},onCurrencySelected:function onCurrencySelected(inputCurrency){dispatchSwapState({type:'SELECT_CURRENCY',payload:{currency:inputCurrency,field:INPUT}});},onValueChange:function onValueChange(inputValue){dispatchSwapState({type:'UPDATE_INDEPENDENT',payload:{value:inputValue,field:INPUT}});},showUnlock:showUnlock,selectedTokens:[inputCurrency,outputCurrency],selectedTokenAddress:inputCurrency,value:inputValueFormatted,errorMessage:inputError?inputError:independentField===INPUT?independentError:''}),React.createElement(OversizedPanel,null,React.createElement(DownArrowBackground,null,React.createElement(DownArrow,{onClick:function onClick(){dispatchSwapState({type:'FLIP_INDEPENDENT'});},clickable:true,alt:\"swap\",active:isValid}))),React.createElement(CurrencyInputPanel,{title:t('output'),description:outputValueFormatted&&independentField===INPUT?estimatedText:'',extraText:outputBalanceFormatted&&formatBalance(outputBalanceFormatted),onCurrencySelected:function onCurrencySelected(outputCurrency){dispatchSwapState({type:'SELECT_CURRENCY',payload:{currency:outputCurrency,field:OUTPUT}});},onValueChange:function onValueChange(outputValue){dispatchSwapState({type:'UPDATE_INDEPENDENT',payload:{value:outputValue,field:OUTPUT}});},selectedTokens:[inputCurrency,outputCurrency],selectedTokenAddress:outputCurrency,value:outputValueFormatted,errorMessage:independentField===OUTPUT?independentError:'',disableUnlock:true}),sending?React.createElement(React.Fragment,null,React.createElement(OversizedPanel,null,React.createElement(DownArrowBackground,null,React.createElement(DownArrow,{active:isValid,alt:\"arrow\"}))),React.createElement(AddressInputPanel,{onChange:setRecipient,onError:setRecipientError,initialInput:recipient})):'',React.createElement(OversizedPanel,{hideBottom:true},React.createElement(ExchangeRateWrapper,{onClick:function onClick(){setInverted(function(inverted){return!inverted;});}},React.createElement(ExchangeRate,null,t('exchangeRate')),inverted?React.createElement(\"span\",null,exchangeRate?\"1 \".concat(inputSymbol,\" = \").concat(amountFormatter(exchangeRate,18,6,false),\" \").concat(outputSymbol):' - '):React.createElement(\"span\",null,exchangeRate?\"1 \".concat(outputSymbol,\" = \").concat(amountFormatter(exchangeRateInverted,18,6,false),\" \").concat(inputSymbol):' - '))),React.createElement(TransactionDetails,{account:account,setRawSlippage:setRawSlippage,setRawTokenSlippage:setRawTokenSlippage,rawSlippage:rawSlippage,slippageWarning:slippageWarning,highSlippageWarning:highSlippageWarning,setDeadline:setDeadlineFromNow,deadline:deadlineFromNow,inputError:inputError,independentError:independentError,inputCurrency:inputCurrency,outputCurrency:outputCurrency,independentValue:independentValue,independentValueParsed:independentValueParsed,independentField:independentField,INPUT:INPUT,inputValueParsed:inputValueParsed,outputValueParsed:outputValueParsed,inputSymbol:inputSymbol,outputSymbol:outputSymbol,dependentValueMinumum:dependentValueMinumum,dependentValueMaximum:dependentValueMaximum,dependentDecimals:dependentDecimals,independentDecimals:independentDecimals,percentSlippageFormatted:percentSlippageFormatted,setcustomSlippageError:setcustomSlippageError,recipientAddress:recipient.address,sending:sending}),React.createElement(Flex,null,React.createElement(Button,{disabled:!account&&!error?false:!isValid||customSlippageError==='invalid',onClick:account&&!error?onSwap:toggleWalletModal,warning:highSlippageWarning||customSlippageError==='warning',loggedOut:!account},!account?'Connect to a Wallet':sending?highSlippageWarning||customSlippageError==='warning'?t('sendAnyway'):t('send'):highSlippageWarning||customSlippageError==='warning'?t('swapAnyway'):t('swap'))));}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/components/ExchangePage/index.jsx"],"names":["React","useState","useReducer","useEffect","ReactGA","createBrowserHistory","ethers","styled","useTranslation","Button","useWeb3React","CurrencyInputPanel","AddressInputPanel","OversizedPanel","TransactionDetails","ArrowDown","amountFormatter","calculateGasMargin","useExchangeContract","useTokenDetails","useTransactionAdder","useAddressBalance","useExchangeReserves","useAddressAllowance","useWalletModalToggle","useETHPriceInUSD","INPUT","OUTPUT","ETH_TO_TOKEN","TOKEN_TO_ETH","TOKEN_TO_TOKEN","ALLOWED_SLIPPAGE_DEFAULT","TOKEN_ALLOWED_SLIPPAGE_DEFAULT","DEFAULT_DEADLINE_FROM_NOW","GAS_MARGIN","utils","bigNumberify","DownArrowBackground","div","theme","flexRowNoWrap","WrappedArrowDown","clickable","active","rest","DownArrow","royalBlue","chaliceGray","ExchangeRateWrapper","doveGray","ExchangeRate","span","Flex","calculateSlippageBounds","value","token","tokenAllowedSlippage","allowedSlippage","offset","mul","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","getSwapType","inputCurrency","outputCurrency","calculateEtherTokenOutputFromInput","inputAmount","inputReserve","outputReserve","inputAmountWithFee","numerator","denominator","calculateEtherTokenInputFromOutput","outputAmount","One","getInitialSwapState","state","independentValue","exactFieldURL","exactAmountURL","dependentValue","independentField","inputCurrencyURL","outputCurrencyURL","initialCurrency","swapStateReducer","action","type","payload","field","currency","newInputCurrency","newOutputCurrency","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","getMarketRate","swapType","inputReserveETH","inputReserveToken","outputReserveETH","outputReserveToken","firstRate","secondRate","undefined","ExchangePage","sending","params","t","account","error","ethPrice","addTransaction","initialSlippage","slippage","Number","parseInt","isNaN","initialRecipient","recipient","deadlineFromNow","setDeadlineFromNow","rawSlippage","setRawSlippage","rawTokenSlippage","setRawTokenSlippage","allowedSlippageBig","tokenAllowedSlippageBig","pageview","window","location","pathname","search","exactField","exactAmount","swapState","dispatchSwapState","address","name","setRecipient","recipientError","setRecipientError","inputSymbol","symbol","decimals","inputExchangeAddress","exchangeAddress","outputSymbol","outputExchangeAddress","inputExchangeContract","outputExchangeContract","contract","inputAllowance","reserveETH","reserveToken","inputBalance","outputBalance","inputBalanceFormatted","isInteger","Math","min","outputBalanceFormatted","independentDecimals","dependentDecimals","independentValueParsed","setIndependentValueParsed","dependentValueFormatted","inputValueParsed","inputValueFormatted","outputValueParsed","outputValueFormatted","independentError","setIndependentError","parsedValue","parseUnits","lte","gte","Error","dependentValueMinumum","dependentValueMaximum","inputError","setInputError","showUnlock","setShowUnlock","inputValueCalculation","amount","calculatedDependentValue","reserveETHFirst","reserveTokenFirst","reserveETHSecond","reserveTokenSecond","intermediateValue","history","push","inverted","setInverted","exchangeRate","exchangeRateInverted","marketRate","percentSlippage","abs","percentSlippageFormatted","slippageWarning","parseEther","highSlippageWarning","isValid","estimatedText","formatBalance","onSwap","event","category","deadline","ceil","Date","now","toString","inputEthPerToken","usdTransactionSize","label","estimate","ethToTokenTransferInput","ethToUniswapInput","method","args","tokenToEthTransferInput","tokenToEthSwapInput","tokenToTokenTransferInput","tokenToUniswapInput","ethToTokenTransferOutput","ethToUniswapOutput","tokenToEthTransferOutput","tokenToEthSwapOutput","tokenToTokenTransferOutput","tokenToUniswapOutput","estimatedGasLimit","gasLimit","then","response","customSlippageError","setcustomSlippageError","toggleWalletModal","valueToSet"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { createBrowserHistory } from 'history'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { Button } from '../../theme'\nimport { useWeb3React } from '../../hooks'\nimport CurrencyInputPanel from '../CurrencyInputPanel'\nimport AddressInputPanel from '../AddressInputPanel'\nimport OversizedPanel from '../OversizedPanel'\nimport TransactionDetails from '../TransactionDetails'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { amountFormatter, calculateGasMargin } from '../../utils'\nimport { useExchangeContract } from '../../hooks'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\nimport { useAddressAllowance } from '../../contexts/Allowances'\nimport { useWalletModalToggle } from '../../contexts/Application'\nimport { useETHPriceInUSD } from '../../contexts/Balances'\n\nconst INPUT = 0\nconst OUTPUT = 1\n\nconst ETH_TO_TOKEN = 0\nconst TOKEN_TO_ETH = 1\nconst TOKEN_TO_TOKEN = 2\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE_DEFAULT = 50\nconst TOKEN_ALLOWED_SLIPPAGE_DEFAULT = 50\n\n// 15 minutes, denominated in seconds\nconst DEFAULT_DEADLINE_FROM_NOW = 60 * 15\n\n// % above the calculated gas cost that we actually send, denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst WrappedArrowDown = ({ clickable, active, ...rest }) => <ArrowDown {...rest} />\nconst DownArrow = styled(WrappedArrowDown)`\n  color: ${({ theme, active }) => (active ? theme.royalBlue : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.5rem 1rem;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction calculateSlippageBounds(value, token = false, tokenAllowedSlippage, allowedSlippage) {\n  if (value) {\n    const offset = value.mul(token ? tokenAllowedSlippage : allowedSlippage).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nfunction getSwapType(inputCurrency, outputCurrency) {\n  if (!inputCurrency || !outputCurrency) {\n    return null\n  } else if (inputCurrency === 'ETH') {\n    return ETH_TO_TOKEN\n  } else if (outputCurrency === 'ETH') {\n    return TOKEN_TO_ETH\n  } else {\n    return TOKEN_TO_TOKEN\n  }\n}\n\n// this mocks the getInputPrice function, and calculates the required output\nfunction calculateEtherTokenOutputFromInput(inputAmount, inputReserve, outputReserve) {\n  const inputAmountWithFee = inputAmount.mul(ethers.utils.bigNumberify(997))\n  const numerator = inputAmountWithFee.mul(outputReserve)\n  const denominator = inputReserve.mul(ethers.utils.bigNumberify(1000)).add(inputAmountWithFee)\n  return numerator.div(denominator)\n}\n\n// this mocks the getOutputPrice function, and calculates the required input\nfunction calculateEtherTokenInputFromOutput(outputAmount, inputReserve, outputReserve) {\n  const numerator = inputReserve.mul(outputAmount).mul(ethers.utils.bigNumberify(1000))\n  const denominator = outputReserve.sub(outputAmount).mul(ethers.utils.bigNumberify(997))\n  return numerator.div(denominator).add(ethers.constants.One)\n}\n\nfunction getInitialSwapState(state) {\n  return {\n    independentValue: state.exactFieldURL && state.exactAmountURL ? state.exactAmountURL : '', // this is a user input\n    dependentValue: '', // this is a calculated number\n    independentField: state.exactFieldURL === 'output' ? OUTPUT : INPUT,\n    inputCurrency: state.inputCurrencyURL ? state.inputCurrencyURL : 'ETH',\n    outputCurrency: state.outputCurrencyURL\n      ? state.outputCurrencyURL === 'ETH'\n        ? state.inputCurrencyURL && state.inputCurrencyURL !== 'ETH'\n          ? 'ETH'\n          : ''\n        : state.outputCurrencyURL\n      : state.initialCurrency\n      ? state.initialCurrency\n      : ''\n  }\n}\n\nfunction swapStateReducer(state, action) {\n  switch (action.type) {\n    case 'FLIP_INDEPENDENT': {\n      const { independentField, inputCurrency, outputCurrency } = state\n      return {\n        ...state,\n        dependentValue: '',\n        independentField: independentField === INPUT ? OUTPUT : INPUT,\n        inputCurrency: outputCurrency,\n        outputCurrency: inputCurrency\n      }\n    }\n    case 'SELECT_CURRENCY': {\n      const { inputCurrency, outputCurrency } = state\n      const { field, currency } = action.payload\n\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\n\n      if (newInputCurrency === newOutputCurrency) {\n        return {\n          ...state,\n          inputCurrency: field === INPUT ? currency : '',\n          outputCurrency: field === OUTPUT ? currency : ''\n        }\n      } else {\n        return {\n          ...state,\n          inputCurrency: newInputCurrency,\n          outputCurrency: newOutputCurrency\n        }\n      }\n    }\n    case 'UPDATE_INDEPENDENT': {\n      const { field, value } = action.payload\n      const { dependentValue, independentValue } = state\n      return {\n        ...state,\n        independentValue: value,\n        dependentValue: value === independentValue ? dependentValue : '',\n        independentField: field\n      }\n    }\n    case 'UPDATE_DEPENDENT': {\n      return {\n        ...state,\n        dependentValue: action.payload\n      }\n    }\n    default: {\n      return getInitialSwapState()\n    }\n  }\n}\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(\n  swapType,\n  inputReserveETH,\n  inputReserveToken,\n  inputDecimals,\n  outputReserveETH,\n  outputReserveToken,\n  outputDecimals,\n  invert = false\n) {\n  if (swapType === ETH_TO_TOKEN) {\n    return getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals, invert)\n  } else if (swapType === TOKEN_TO_ETH) {\n    return getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18, invert)\n  } else if (swapType === TOKEN_TO_TOKEN) {\n    const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n    const firstRate = getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18)\n    const secondRate = getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals)\n    try {\n      return !!(firstRate && secondRate) ? firstRate.mul(secondRate).div(factor) : undefined\n    } catch {}\n  }\n}\n\nexport default function ExchangePage({ initialCurrency, sending = false, params }) {\n  const { t } = useTranslation()\n  const { account, error } = useWeb3React()\n\n  // BigNumber.js instance\n  const ethPrice = useETHPriceInUSD()\n\n  const addTransaction = useTransactionAdder()\n\n  // check if URL specifies valid slippage, if so use as default\n  const initialSlippage = (token = false) => {\n    let slippage = Number.parseInt(params.slippage)\n    if (!isNaN(slippage) && (slippage === 0 || slippage >= 1)) {\n      return slippage // round to match custom input availability\n    }\n    // check for token <-> token slippage option\n    return token ? TOKEN_ALLOWED_SLIPPAGE_DEFAULT : ALLOWED_SLIPPAGE_DEFAULT\n  }\n\n  // check URL params for recipient, only on send page\n  const initialRecipient = () => {\n    if (sending && params.recipient) {\n      return params.recipient\n    }\n    return ''\n  }\n\n  const [deadlineFromNow, setDeadlineFromNow] = useState(DEFAULT_DEADLINE_FROM_NOW)\n\n  const [rawSlippage, setRawSlippage] = useState(() => initialSlippage())\n  const [rawTokenSlippage, setRawTokenSlippage] = useState(() => initialSlippage(true))\n\n  const allowedSlippageBig = ethers.utils.bigNumberify(rawSlippage)\n  const tokenAllowedSlippageBig = ethers.utils.bigNumberify(rawTokenSlippage)\n\n  // analytics\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  // core swap state\n  const [swapState, dispatchSwapState] = useReducer(\n    swapStateReducer,\n    {\n      initialCurrency: initialCurrency,\n      inputCurrencyURL: params.inputCurrency,\n      outputCurrencyURL: params.outputCurrency,\n      exactFieldURL: params.exactField,\n      exactAmountURL: params.exactAmount\n    },\n    getInitialSwapState\n  )\n\n  const { independentValue, dependentValue, independentField, inputCurrency, outputCurrency } = swapState\n\n  const [recipient, setRecipient] = useState({\n    address: initialRecipient(),\n    name: ''\n  })\n  const [recipientError, setRecipientError] = useState()\n\n  // get swap type from the currency types\n  const swapType = getSwapType(inputCurrency, outputCurrency)\n\n  // get decimals and exchange address for each of the currency types\n  const { symbol: inputSymbol, decimals: inputDecimals, exchangeAddress: inputExchangeAddress } = useTokenDetails(\n    inputCurrency\n  )\n  const { symbol: outputSymbol, decimals: outputDecimals, exchangeAddress: outputExchangeAddress } = useTokenDetails(\n    outputCurrency\n  )\n\n  const inputExchangeContract = useExchangeContract(inputExchangeAddress)\n  const outputExchangeContract = useExchangeContract(outputExchangeAddress)\n  const contract = swapType === ETH_TO_TOKEN ? outputExchangeContract : inputExchangeContract\n\n  // get input allowance\n  const inputAllowance = useAddressAllowance(account, inputCurrency, inputExchangeAddress)\n\n  // fetch reserves for each of the currency types\n  const { reserveETH: inputReserveETH, reserveToken: inputReserveToken } = useExchangeReserves(inputCurrency)\n  const { reserveETH: outputReserveETH, reserveToken: outputReserveToken } = useExchangeReserves(outputCurrency)\n\n  // get balances for each of the currency types\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\n    : ''\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\n    : ''\n\n  // compute useful transforms of the data above\n  const independentDecimals = independentField === INPUT ? inputDecimals : outputDecimals\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\n\n  // declare/get parsed and formatted versions of input/output values\n  const [independentValueParsed, setIndependentValueParsed] = useState()\n  const dependentValueFormatted = !!(dependentValue && (dependentDecimals || dependentDecimals === 0))\n    ? amountFormatter(dependentValue, dependentDecimals, Math.min(4, dependentDecimals), false)\n    : ''\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : dependentValue\n  const inputValueFormatted = independentField === INPUT ? independentValue : dependentValueFormatted\n  const outputValueParsed = independentField === OUTPUT ? independentValueParsed : dependentValue\n  const outputValueFormatted = independentField === OUTPUT ? independentValue : dependentValueFormatted\n\n  // validate + parse independent value\n  const [independentError, setIndependentError] = useState()\n  useEffect(() => {\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        } else {\n          setIndependentValueParsed(parsedValue)\n          setIndependentError(null)\n        }\n      } catch {\n        setIndependentError(t('inputNotValid'))\n      }\n\n      return () => {\n        setIndependentValueParsed()\n        setIndependentError()\n      }\n    }\n  }, [independentValue, independentDecimals, t])\n\n  // calculate slippage from target rate\n  const { minimum: dependentValueMinumum, maximum: dependentValueMaximum } = calculateSlippageBounds(\n    dependentValue,\n    swapType === TOKEN_TO_TOKEN,\n    tokenAllowedSlippageBig,\n    allowedSlippageBig\n  )\n\n  // validate input allowance + balance\n  const [inputError, setInputError] = useState()\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    const inputValueCalculation = independentField === INPUT ? independentValueParsed : dependentValueMaximum\n    if (inputBalance && (inputAllowance || inputCurrency === 'ETH') && inputValueCalculation) {\n      if (inputBalance.lt(inputValueCalculation)) {\n        setInputError(t('insufficientBalance'))\n      } else if (inputCurrency !== 'ETH' && inputAllowance.lt(inputValueCalculation)) {\n        setInputError(t('unlockTokenCont'))\n        setShowUnlock(true)\n      } else {\n        setInputError(null)\n        setShowUnlock(false)\n      }\n      return () => {\n        setInputError()\n        setShowUnlock(false)\n      }\n    }\n  }, [independentField, independentValueParsed, dependentValueMaximum, inputBalance, inputCurrency, inputAllowance, t])\n\n  // calculate dependent value\n  useEffect(() => {\n    const amount = independentValueParsed\n\n    if (swapType === ETH_TO_TOKEN) {\n      const reserveETH = outputReserveETH\n      const reserveToken = outputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveETH, reserveToken)\n              : calculateEtherTokenInputFromOutput(amount, reserveETH, reserveToken)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({\n            type: 'UPDATE_DEPENDENT',\n            payload: calculatedDependentValue\n          })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_ETH) {\n      const reserveETH = inputReserveETH\n      const reserveToken = inputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveToken, reserveETH)\n              : calculateEtherTokenInputFromOutput(amount, reserveToken, reserveETH)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({\n            type: 'UPDATE_DEPENDENT',\n            payload: calculatedDependentValue\n          })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_TOKEN) {\n      const reserveETHFirst = inputReserveETH\n      const reserveTokenFirst = inputReserveToken\n\n      const reserveETHSecond = outputReserveETH\n      const reserveTokenSecond = outputReserveToken\n\n      if (amount && reserveETHFirst && reserveTokenFirst && reserveETHSecond && reserveTokenSecond) {\n        try {\n          if (independentField === INPUT) {\n            const intermediateValue = calculateEtherTokenOutputFromInput(amount, reserveTokenFirst, reserveETHFirst)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenOutputFromInput(\n              intermediateValue,\n              reserveETHSecond,\n              reserveTokenSecond\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({\n              type: 'UPDATE_DEPENDENT',\n              payload: calculatedDependentValue\n            })\n          } else {\n            const intermediateValue = calculateEtherTokenInputFromOutput(amount, reserveETHSecond, reserveTokenSecond)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenInputFromOutput(\n              intermediateValue,\n              reserveTokenFirst,\n              reserveETHFirst\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({\n              type: 'UPDATE_DEPENDENT',\n              payload: calculatedDependentValue\n            })\n          }\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    }\n  }, [\n    independentValueParsed,\n    swapType,\n    outputReserveETH,\n    outputReserveToken,\n    inputReserveETH,\n    inputReserveToken,\n    independentField,\n    t\n  ])\n\n  useEffect(() => {\n    const history = createBrowserHistory()\n    history.push(window.location.pathname + '')\n  }, [])\n\n  const [inverted, setInverted] = useState(false)\n  const exchangeRate = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals)\n  const exchangeRateInverted = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals, true)\n\n  const marketRate = getMarketRate(\n    swapType,\n    inputReserveETH,\n    inputReserveToken,\n    inputDecimals,\n    outputReserveETH,\n    outputReserveToken,\n    outputDecimals\n  )\n\n  const percentSlippage =\n    exchangeRate && marketRate\n      ? exchangeRate\n          .sub(marketRate)\n          .abs()\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(marketRate)\n          .sub(ethers.utils.bigNumberify(3).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(15))))\n      : undefined\n  const percentSlippageFormatted = percentSlippage && amountFormatter(percentSlippage, 16, 2)\n  const slippageWarning =\n    percentSlippage &&\n    percentSlippage.gte(ethers.utils.parseEther('.05')) &&\n    percentSlippage.lt(ethers.utils.parseEther('.2')) // [5% - 20%)\n  const highSlippageWarning = percentSlippage && percentSlippage.gte(ethers.utils.parseEther('.2')) // [20+%\n\n  const isValid = sending\n    ? exchangeRate && inputError === null && independentError === null && recipientError === null && deadlineFromNow\n    : exchangeRate && inputError === null && independentError === null && deadlineFromNow\n\n  const estimatedText = `(${t('estimated')})`\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  async function onSwap() {\n    //if user changed deadline, log new one in minutes\n    if (deadlineFromNow !== DEFAULT_DEADLINE_FROM_NOW) {\n      ReactGA.event({\n        category: 'Advanced Interaction',\n        action: 'Set Custom Deadline',\n        value: deadlineFromNow / 60\n      })\n    }\n\n    const deadline = Math.ceil(Date.now() / 1000) + deadlineFromNow\n\n    // if user has changed slippage, log\n    if (swapType === TOKEN_TO_TOKEN) {\n      if (parseInt(tokenAllowedSlippageBig.toString()) !== TOKEN_ALLOWED_SLIPPAGE_DEFAULT) {\n        ReactGA.event({\n          category: 'Advanced Interaction',\n          action: 'Set Custom Slippage',\n          value: parseInt(tokenAllowedSlippageBig.toString())\n        })\n      }\n    } else {\n      if (parseInt(allowedSlippageBig.toString()) !== ALLOWED_SLIPPAGE_DEFAULT) {\n        ReactGA.event({\n          category: 'Advanced Interaction',\n          action: 'Set Custom Slippage',\n          value: parseInt(allowedSlippageBig.toString())\n        })\n      }\n    }\n\n    let estimate, method, args, value\n\n    let inputEthPerToken = 1\n    if (inputCurrency !== 'ETH') {\n      inputEthPerToken = inputReserveToken && inputReserveETH ? inputReserveETH / inputReserveToken : null\n    }\n    let usdTransactionSize = ethPrice * inputEthPerToken * inputValueFormatted\n\n    if (independentField === INPUT) {\n      // general details about transaction\n      ReactGA.event({\n        category: 'Transaction',\n        action: sending ? 'SendInput' : 'SwapInput',\n        label: outputCurrency,\n        value: usdTransactionSize\n      })\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = sending ? contract.estimate.ethToTokenTransferInput : contract.estimate.ethToUniswapInput\n        method = sending ? contract.ethToTokenTransferInput : contract.ethToUniswapInput\n        args = sending ? [dependentValueMinumum, deadline, recipient.address] : [dependentValueMinumum, deadline]\n        value = independentValueParsed\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = sending ? contract.estimate.tokenToEthTransferInput : contract.estimate.tokenToEthSwapInput\n        method = sending ? contract.tokenToEthTransferInput : contract.tokenToEthSwapInput\n        args = sending\n          ? [independentValueParsed, dependentValueMinumum, deadline, recipient.address]\n          : [independentValueParsed, dependentValueMinumum, deadline]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = sending ? contract.estimate.tokenToTokenTransferInput : contract.estimate.tokenToUniswapInput\n        method = sending ? contract.tokenToTokenTransferInput : contract.tokenToUniswapInput\n        args = sending\n          ? [\n              independentValueParsed,\n              dependentValueMinumum,\n              ethers.constants.One,\n              deadline,\n              recipient.address,\n              outputCurrency\n            ]\n          : [independentValueParsed, dependentValueMinumum, ethers.constants.One, deadline, outputCurrency]\n        value = ethers.constants.Zero\n      }\n    } else if (independentField === OUTPUT) {\n      // general details about transaction\n      ReactGA.event({\n        category: 'Transaction',\n        action: sending ? 'SendOutput' : 'SwapOutput',\n        label: outputCurrency,\n        value: usdTransactionSize\n      })\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = sending ? contract.estimate.ethToTokenTransferOutput : contract.estimate.ethToUniswapOutput\n        method = sending ? contract.ethToTokenTransferOutput : contract.ethToUniswapOutput\n        args = sending ? [independentValueParsed, deadline, recipient.address] : [independentValueParsed, deadline]\n        value = dependentValueMaximum\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = sending ? contract.estimate.tokenToEthTransferOutput : contract.estimate.tokenToEthSwapOutput\n        method = sending ? contract.tokenToEthTransferOutput : contract.tokenToEthSwapOutput\n        args = sending\n          ? [independentValueParsed, dependentValueMaximum, deadline, recipient.address]\n          : [independentValueParsed, dependentValueMaximum, deadline]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = sending ? contract.estimate.tokenToTokenTransferOutput : contract.estimate.tokenToUniswapOutput\n        method = sending ? contract.tokenToTokenTransferOutput : contract.tokenToUniswapOutput\n        args = sending\n          ? [\n              independentValueParsed,\n              dependentValueMaximum,\n              ethers.constants.MaxUint256,\n              deadline,\n              recipient.address,\n              outputCurrency\n            ]\n          : [independentValueParsed, dependentValueMaximum, ethers.constants.MaxUint256, deadline, outputCurrency]\n        value = ethers.constants.Zero\n      }\n    }\n\n    const estimatedGasLimit = await estimate(...args, { value })\n    method(...args, {\n      value,\n      gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\n    }).then(response => {\n      addTransaction(response)\n    })\n  }\n\n  const [customSlippageError, setcustomSlippageError] = useState('')\n\n  const toggleWalletModal = useWalletModalToggle()\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('input')}\n        description={inputValueFormatted && independentField === OUTPUT ? estimatedText : ''}\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\n        extraTextClickHander={() => {\n          if (inputBalance && inputDecimals) {\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              dispatchSwapState({\n                type: 'UPDATE_INDEPENDENT',\n                payload: {\n                  value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false),\n                  field: INPUT\n                }\n              })\n            }\n          }\n        }}\n        onCurrencySelected={inputCurrency => {\n          dispatchSwapState({\n            type: 'SELECT_CURRENCY',\n            payload: { currency: inputCurrency, field: INPUT }\n          })\n        }}\n        onValueChange={inputValue => {\n          dispatchSwapState({\n            type: 'UPDATE_INDEPENDENT',\n            payload: { value: inputValue, field: INPUT }\n          })\n        }}\n        showUnlock={showUnlock}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={inputCurrency}\n        value={inputValueFormatted}\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        description={outputValueFormatted && independentField === INPUT ? estimatedText : ''}\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\n        onCurrencySelected={outputCurrency => {\n          dispatchSwapState({\n            type: 'SELECT_CURRENCY',\n            payload: { currency: outputCurrency, field: OUTPUT }\n          })\n        }}\n        onValueChange={outputValue => {\n          dispatchSwapState({\n            type: 'UPDATE_INDEPENDENT',\n            payload: { value: outputValue, field: OUTPUT }\n          })\n        }}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={outputCurrency}\n        value={outputValueFormatted}\n        errorMessage={independentField === OUTPUT ? independentError : ''}\n        disableUnlock\n      />\n      {sending ? (\n        <>\n          <OversizedPanel>\n            <DownArrowBackground>\n              <DownArrow active={isValid} alt=\"arrow\" />\n            </DownArrowBackground>\n          </OversizedPanel>\n          <AddressInputPanel onChange={setRecipient} onError={setRecipientError} initialInput={recipient} />\n        </>\n      ) : (\n        ''\n      )}\n      <OversizedPanel hideBottom>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted(inverted => !inverted)\n          }}\n        >\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n          {inverted ? (\n            <span>\n              {exchangeRate\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 6, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {exchangeRate\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 6, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n      </OversizedPanel>\n      <TransactionDetails\n        account={account}\n        setRawSlippage={setRawSlippage}\n        setRawTokenSlippage={setRawTokenSlippage}\n        rawSlippage={rawSlippage}\n        slippageWarning={slippageWarning}\n        highSlippageWarning={highSlippageWarning}\n        setDeadline={setDeadlineFromNow}\n        deadline={deadlineFromNow}\n        inputError={inputError}\n        independentError={independentError}\n        inputCurrency={inputCurrency}\n        outputCurrency={outputCurrency}\n        independentValue={independentValue}\n        independentValueParsed={independentValueParsed}\n        independentField={independentField}\n        INPUT={INPUT}\n        inputValueParsed={inputValueParsed}\n        outputValueParsed={outputValueParsed}\n        inputSymbol={inputSymbol}\n        outputSymbol={outputSymbol}\n        dependentValueMinumum={dependentValueMinumum}\n        dependentValueMaximum={dependentValueMaximum}\n        dependentDecimals={dependentDecimals}\n        independentDecimals={independentDecimals}\n        percentSlippageFormatted={percentSlippageFormatted}\n        setcustomSlippageError={setcustomSlippageError}\n        recipientAddress={recipient.address}\n        sending={sending}\n      />\n      <Flex>\n        <Button\n          disabled={!account && !error ? false : !isValid || customSlippageError === 'invalid'}\n          onClick={account && !error ? onSwap : toggleWalletModal}\n          warning={highSlippageWarning || customSlippageError === 'warning'}\n          loggedOut={!account}\n        >\n          {!account\n            ? 'Connect to a Wallet'\n            : sending\n            ? highSlippageWarning || customSlippageError === 'warning'\n              ? t('sendAnyway')\n              : t('send')\n            : highSlippageWarning || customSlippageError === 'warning'\n            ? t('swapAnyway')\n            : t('swap')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}