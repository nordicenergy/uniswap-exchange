{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/components/ContextualInfo/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ReactGA from 'react-ga';\nimport { ReactComponent as Dropup } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/dropup-blue.svg\";\nimport { ReactComponent as Dropdown } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/dropdown-blue.svg\";\nconst SummaryWrapper = styled.div`\n  color: ${({\n  error,\n  theme\n}) => error ? theme.salmonRed : theme.doveGray};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`;\nconst Details = styled.div`\n  background-color: ${({\n  theme\n}) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`;\nconst SummaryWrapperContainer = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  color: ${({\n  theme\n}) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  span {\n    margin-right: 12px;\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`;\n\nconst WrappedDropup = ({\n  isError,\n  highSlippageWarning,\n  ...rest\n}) => React.createElement(Dropup, Object.assign({}, rest, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}));\n\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.royalBlue};\n  }\n`;\n\nconst WrappedDropdown = ({\n  isError,\n  highSlippageWarning,\n  ...rest\n}) => React.createElement(Dropdown, Object.assign({}, rest, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}));\n\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.royalBlue};\n  }\n`;\n\nclass ContextualInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showDetails: false\n    };\n  }\n\n  renderDetails() {\n    if (!this.state.showDetails) {\n      return null;\n    }\n\n    return React.createElement(Details, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.renderTransactionDetails());\n  }\n\n  render() {\n    const {\n      openDetailsText,\n      closeDetailsText,\n      contextualInfo,\n      isError\n    } = this.props;\n\n    if (contextualInfo) {\n      return React.createElement(SummaryWrapper, {\n        error: isError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, contextualInfo);\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(SummaryWrapperContainer, {\n      onClick: () => {\n        !this.state.showDetails && ReactGA.event({\n          category: 'Advanced Interaction',\n          action: 'Open Advanced Details',\n          label: 'Pool Page Details'\n        });\n        this.setState(prevState => {\n          return {\n            showDetails: !prevState.showDetails\n          };\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, !this.state.showDetails ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, openDetailsText), React.createElement(ColoredDropup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, closeDetailsText), React.createElement(ColoredDropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), this.renderDetails());\n  }\n\n}\n\nContextualInfo.propTypes = {\n  openDetailsText: PropTypes.string,\n  renderTransactionDetails: PropTypes.func,\n  contextualInfo: PropTypes.string,\n  isError: PropTypes.bool\n};\nContextualInfo.defaultProps = {\n  openDetailsText: 'Advanced Details',\n  closeDetailsText: 'Hide Advanced',\n\n  renderTransactionDetails() {},\n\n  contextualInfo: '',\n  isError: false\n};\nexport default ContextualInfo;","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/components/ContextualInfo/index.js"],"names":["React","Component","PropTypes","styled","ReactGA","SummaryWrapper","div","error","theme","salmonRed","doveGray","Details","concreteGray","SummaryWrapperContainer","flexRowNoWrap","royalBlue","WrappedDropup","isError","highSlippageWarning","rest","ColoredDropup","WrappedDropdown","ColoredDropdown","ContextualInfo","state","showDetails","renderDetails","props","renderTransactionDetails","render","openDetailsText","closeDetailsText","contextualInfo","event","category","action","label","setState","prevState","propTypes","string","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport ReactGA from 'react-ga'\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  span {\n    margin-right: 12px;\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nclass ContextualInfo extends Component {\n  static propTypes = {\n    openDetailsText: PropTypes.string,\n    renderTransactionDetails: PropTypes.func,\n    contextualInfo: PropTypes.string,\n    isError: PropTypes.bool\n  }\n\n  static defaultProps = {\n    openDetailsText: 'Advanced Details',\n    closeDetailsText: 'Hide Advanced',\n    renderTransactionDetails() {},\n    contextualInfo: '',\n    isError: false\n  }\n\n  state = {\n    showDetails: false\n  }\n\n  renderDetails() {\n    if (!this.state.showDetails) {\n      return null\n    }\n\n    return <Details>{this.props.renderTransactionDetails()}</Details>\n  }\n\n  render() {\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\n\n    if (contextualInfo) {\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\n    }\n\n    return (\n      <>\n        <SummaryWrapperContainer\n          onClick={() => {\n            !this.state.showDetails &&\n              ReactGA.event({\n                category: 'Advanced Interaction',\n                action: 'Open Advanced Details',\n                label: 'Pool Page Details'\n              })\n            this.setState(prevState => {\n              return { showDetails: !prevState.showDetails }\n            })\n          }}\n        >\n          {!this.state.showDetails ? (\n            <>\n              <span>{openDetailsText}</span>\n              <ColoredDropup />\n            </>\n          ) : (\n            <>\n              <span>{closeDetailsText}</span>\n              <ColoredDropdown />\n            </>\n          )}\n        </SummaryWrapperContainer>\n        {this.renderDetails()}\n      </>\n    )\n  }\n}\n\nexport default ContextualInfo\n"]},"metadata":{},"sourceType":"module"}