{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  padding: 2rem;\\n\\n  button {\\n    max-width: 20rem;\\n  }\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  flex: 1 1 auto;\\n  width: 0;\\n  color: \",\";\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  \",\";\\n  align-items: center;\\n  color: \",\";\\n  font-size: 0.75rem;\\n  padding: 0.5rem 1rem;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  margin-top: 1rem;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: 0.625rem;\\n  height: 0.625rem;\\n  position: relative;\\n  padding: 0.875rem;\\n  cursor: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  \",\"\\n  justify-content: center;\\n  align-items: center;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  color: \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useReducer,useEffect}from'react';import ReactGA from'react-ga';import{useTranslation}from'react-i18next';import{useWeb3Context}from'web3-react';import{ethers}from'ethers';import styled from'styled-components';import{Button}from'../../theme';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import NewContextualInfo from'../../components/ContextualInfoNew';import OversizedPanel from'../../components/OversizedPanel';import AddressInputPanel from'../../components/AddressInputPanel';import ArrowDownBlue from\"../../assets/images/arrow-down-blue.svg\";import ArrowDownGrey from\"../../assets/images/arrow-down-grey.svg\";import{isAddress,amountFormatter,calculateGasMargin}from'../../utils';import{useExchangeContract}from'../../hooks';import{useTokenDetails}from'../../contexts/Tokens';import{useTransactionAdder}from'../../contexts/Transactions';import{useAddressBalance,useExchangeReserves}from'../../contexts/Balances';import{useAddressAllowance}from'../../contexts/Allowances';var INPUT=0;var OUTPUT=1;var ETH_TO_TOKEN=0;var TOKEN_TO_ETH=1;var TOKEN_TO_TOKEN=2;// denominated in bips\nvar ALLOWED_SLIPPAGE=ethers.utils.bigNumberify(200);var TOKEN_ALLOWED_SLIPPAGE=ethers.utils.bigNumberify(400);// denominated in seconds\nvar DEADLINE_FROM_NOW=60*15;// denominated in bips\nvar GAS_MARGIN=ethers.utils.bigNumberify(1000);var BlueSpan=styled.span(_templateObject(),function(_ref){var theme=_ref.theme;return theme.royalBlue;});var DownArrowBackground=styled.div(_templateObject2(),function(_ref2){var theme=_ref2.theme;return theme.flexRowNoWrap;});var DownArrow=styled.img(_templateObject3(),function(_ref3){var clickable=_ref3.clickable;return clickable&&'pointer';});var LastSummaryText=styled.div(_templateObject4());var ExchangeRateWrapper=styled.div(_templateObject5(),function(_ref4){var theme=_ref4.theme;return theme.flexRowNoWrap;},function(_ref5){var theme=_ref5.theme;return theme.doveGray;});var ExchangeRate=styled.span(_templateObject6(),function(_ref6){var theme=_ref6.theme;return theme.chaliceGray;});var Flex=styled.div(_templateObject7());function calculateSlippageBounds(value){var token=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(value){var offset=value.mul(token?TOKEN_ALLOWED_SLIPPAGE:ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000));var minimum=value.sub(offset);var maximum=value.add(offset);return{minimum:minimum.lt(ethers.constants.Zero)?ethers.constants.Zero:minimum,maximum:maximum.gt(ethers.constants.MaxUint256)?ethers.constants.MaxUint256:maximum};}else{return{};}}function getSwapType(inputCurrency,outputCurrency){if(!inputCurrency||!outputCurrency){return null;}else if(inputCurrency==='ETH'){return ETH_TO_TOKEN;}else if(outputCurrency==='ETH'){return TOKEN_TO_ETH;}else{return TOKEN_TO_TOKEN;}}// this mocks the getInputPrice function, and calculates the required output\nfunction calculateEtherTokenOutputFromInput(inputAmount,inputReserve,outputReserve){var inputAmountWithFee=inputAmount.mul(ethers.utils.bigNumberify(997));var numerator=inputAmountWithFee.mul(outputReserve);var denominator=inputReserve.mul(ethers.utils.bigNumberify(1000)).add(inputAmountWithFee);return numerator.div(denominator);}// this mocks the getOutputPrice function, and calculates the required input\nfunction calculateEtherTokenInputFromOutput(outputAmount,inputReserve,outputReserve){var numerator=inputReserve.mul(outputAmount).mul(ethers.utils.bigNumberify(1000));var denominator=outputReserve.sub(outputAmount).mul(ethers.utils.bigNumberify(997));return numerator.div(denominator).add(ethers.constants.One);}var initialSwapState={independentValue:'',// this is a user input\ndependentValue:'',// this is a calculated number\nindependentField:INPUT,inputCurrency:'ETH',outputCurrency:''};function swapStateReducer(state,action){switch(action.type){case'FLIP_INDEPENDENT':{var independentField=state.independentField,inputCurrency=state.inputCurrency,outputCurrency=state.outputCurrency;return _objectSpread({},state,{dependentValue:'',independentField:independentField===INPUT?OUTPUT:INPUT,inputCurrency:outputCurrency,outputCurrency:inputCurrency});}case'SELECT_CURRENCY':{var _inputCurrency=state.inputCurrency,_outputCurrency=state.outputCurrency;var _action$payload=action.payload,field=_action$payload.field,currency=_action$payload.currency;var newInputCurrency=field===INPUT?currency:_inputCurrency;var newOutputCurrency=field===OUTPUT?currency:_outputCurrency;if(newInputCurrency===newOutputCurrency){return _objectSpread({},state,{inputCurrency:field===INPUT?currency:'',outputCurrency:field===OUTPUT?currency:''});}else{return _objectSpread({},state,{inputCurrency:newInputCurrency,outputCurrency:newOutputCurrency});}}case'UPDATE_INDEPENDENT':{var _action$payload2=action.payload,_field=_action$payload2.field,value=_action$payload2.value;return _objectSpread({},state,{independentValue:value,dependentValue:'',independentField:_field});}case'UPDATE_DEPENDENT':{return _objectSpread({},state,{dependentValue:action.payload});}default:{return initialSwapState;}}}function getExchangeRate(inputValue,inputDecimals,outputValue,outputDecimals){var invert=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;try{if(inputValue&&(inputDecimals||inputDecimals===0)&&outputValue&&(outputDecimals||outputDecimals===0)){var factor=ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18));if(invert){return inputValue.mul(factor).div(outputValue).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals))).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)));}else{return outputValue.mul(factor).div(inputValue).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals))).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)));}}}catch(_unused){}}function getMarketRate(swapType,inputReserveETH,inputReserveToken,inputDecimals,outputReserveETH,outputReserveToken,outputDecimals){var invert=arguments.length>7&&arguments[7]!==undefined?arguments[7]:false;if(swapType===ETH_TO_TOKEN){return getExchangeRate(outputReserveETH,18,outputReserveToken,outputDecimals,invert);}else if(swapType===TOKEN_TO_ETH){return getExchangeRate(inputReserveToken,inputDecimals,inputReserveETH,18,invert);}else if(swapType===TOKEN_TO_TOKEN){var factor=ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18));var firstRate=getExchangeRate(inputReserveToken,inputDecimals,inputReserveETH,18);var secondRate=getExchangeRate(outputReserveETH,18,outputReserveToken,outputDecimals);try{return!!(firstRate&&secondRate)?firstRate.mul(secondRate).div(factor):undefined;}catch(_unused2){}}}export default function Swap(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3Context=useWeb3Context(),account=_useWeb3Context.account;var addTransaction=useTransactionAdder();// analytics\nuseEffect(function(){ReactGA.pageview(window.location.pathname+window.location.search);},[]);// core swap state\nvar _useReducer=useReducer(swapStateReducer,initialSwapState),_useReducer2=_slicedToArray(_useReducer,2),swapState=_useReducer2[0],dispatchSwapState=_useReducer2[1];var independentValue=swapState.independentValue,dependentValue=swapState.dependentValue,independentField=swapState.independentField,inputCurrency=swapState.inputCurrency,outputCurrency=swapState.outputCurrency;var _useState=useState({address:'',name:''}),_useState2=_slicedToArray(_useState,2),recipient=_useState2[0],setRecipient=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),recipientError=_useState4[0],setRecipientError=_useState4[1];// get swap type from the currency types\nvar swapType=getSwapType(inputCurrency,outputCurrency);// get decimals and exchange addressfor each of the currency types\nvar _useTokenDetails=useTokenDetails(inputCurrency),inputSymbol=_useTokenDetails.symbol,inputDecimals=_useTokenDetails.decimals,inputExchangeAddress=_useTokenDetails.exchangeAddress;var _useTokenDetails2=useTokenDetails(outputCurrency),outputSymbol=_useTokenDetails2.symbol,outputDecimals=_useTokenDetails2.decimals,outputExchangeAddress=_useTokenDetails2.exchangeAddress;var inputExchangeContract=useExchangeContract(inputExchangeAddress);var outputExchangeContract=useExchangeContract(outputExchangeAddress);var contract=swapType===ETH_TO_TOKEN?outputExchangeContract:inputExchangeContract;// get input allowance\nvar inputAllowance=useAddressAllowance(account,inputCurrency,inputExchangeAddress);// fetch reserves for each of the currency types\nvar _useExchangeReserves=useExchangeReserves(inputCurrency),inputReserveETH=_useExchangeReserves.reserveETH,inputReserveToken=_useExchangeReserves.reserveToken;var _useExchangeReserves2=useExchangeReserves(outputCurrency),outputReserveETH=_useExchangeReserves2.reserveETH,outputReserveToken=_useExchangeReserves2.reserveToken;// get balances for each of the currency types\nvar inputBalance=useAddressBalance(account,inputCurrency);var outputBalance=useAddressBalance(account,outputCurrency);var inputBalanceFormatted=!!(inputBalance&&Number.isInteger(inputDecimals))?amountFormatter(inputBalance,inputDecimals,Math.min(4,inputDecimals)):'';var outputBalanceFormatted=!!(outputBalance&&Number.isInteger(outputDecimals))?amountFormatter(outputBalance,outputDecimals,Math.min(4,outputDecimals)):'';// compute useful transforms of the data above\nvar independentDecimals=independentField===INPUT?inputDecimals:outputDecimals;var dependentDecimals=independentField===OUTPUT?inputDecimals:outputDecimals;// declare/get parsed and formatted versions of input/output values\nvar _useState5=useState(),_useState6=_slicedToArray(_useState5,2),independentValueParsed=_useState6[0],setIndependentValueParsed=_useState6[1];var dependentValueFormatted=!!(dependentValue&&dependentDecimals)?amountFormatter(dependentValue,dependentDecimals,Math.min(4,dependentDecimals),false):'';var inputValueParsed=independentField===INPUT?independentValueParsed:dependentValue;var inputValueFormatted=independentField===INPUT?independentValue:dependentValueFormatted;var outputValueParsed=independentField===OUTPUT?independentValueParsed:dependentValue;var outputValueFormatted=independentField===OUTPUT?independentValue:dependentValueFormatted;// validate + parse independent value\nvar _useState7=useState(),_useState8=_slicedToArray(_useState7,2),independentError=_useState8[0],setIndependentError=_useState8[1];useEffect(function(){if(independentValue&&independentDecimals){try{var parsedValue=ethers.utils.parseUnits(independentValue,independentDecimals);if(parsedValue.lte(ethers.constants.Zero)||parsedValue.gte(ethers.constants.MaxUint256)){throw Error();}else{setIndependentValueParsed(parsedValue);setIndependentError(null);}}catch(_unused3){setIndependentError(t('inputNotValid'));}return function(){setIndependentValueParsed();setIndependentError();};}},[independentValue,independentDecimals,t]);// calculate slippage from target rate\nvar _calculateSlippageBou=calculateSlippageBounds(dependentValue,swapType===TOKEN_TO_TOKEN),dependentValueMinumum=_calculateSlippageBou.minimum,dependentValueMaximum=_calculateSlippageBou.maximum;// validate input allowance + balance\nvar _useState9=useState(),_useState10=_slicedToArray(_useState9,2),inputError=_useState10[0],setInputError=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showUnlock=_useState12[0],setShowUnlock=_useState12[1];useEffect(function(){var inputValueCalculation=independentField===INPUT?independentValueParsed:dependentValueMaximum;if(inputBalance&&(inputAllowance||inputCurrency==='ETH')&&inputValueCalculation){if(inputBalance.lt(inputValueCalculation)){setInputError(t('insufficientBalance'));}else if(inputCurrency!=='ETH'&&inputAllowance.lt(inputValueCalculation)){setInputError(t('unlockTokenCont'));setShowUnlock(true);}else{setInputError(null);setShowUnlock(false);}return function(){setInputError();setShowUnlock(false);};}},[independentField,independentValueParsed,dependentValueMaximum,inputBalance,inputCurrency,inputAllowance,t]);// calculate dependent value\nuseEffect(function(){var amount=independentValueParsed;if(swapType===ETH_TO_TOKEN){var reserveETH=outputReserveETH;var reserveToken=outputReserveToken;if(amount&&reserveETH&&reserveToken){try{var calculatedDependentValue=independentField===INPUT?calculateEtherTokenOutputFromInput(amount,reserveETH,reserveToken):calculateEtherTokenInputFromOutput(amount,reserveETH,reserveToken);if(calculatedDependentValue.lte(ethers.constants.Zero)){throw Error();}dispatchSwapState({type:'UPDATE_DEPENDENT',payload:calculatedDependentValue});}catch(_unused4){setIndependentError(t('insufficientLiquidity'));}return function(){dispatchSwapState({type:'UPDATE_DEPENDENT',payload:''});};}}else if(swapType===TOKEN_TO_ETH){var _reserveETH=inputReserveETH;var _reserveToken=inputReserveToken;if(amount&&_reserveETH&&_reserveToken){try{var _calculatedDependentValue=independentField===INPUT?calculateEtherTokenOutputFromInput(amount,_reserveToken,_reserveETH):calculateEtherTokenInputFromOutput(amount,_reserveToken,_reserveETH);if(_calculatedDependentValue.lte(ethers.constants.Zero)){throw Error();}dispatchSwapState({type:'UPDATE_DEPENDENT',payload:_calculatedDependentValue});}catch(_unused5){setIndependentError(t('insufficientLiquidity'));}return function(){dispatchSwapState({type:'UPDATE_DEPENDENT',payload:''});};}}else if(swapType===TOKEN_TO_TOKEN){var reserveETHFirst=inputReserveETH;var reserveTokenFirst=inputReserveToken;var reserveETHSecond=outputReserveETH;var reserveTokenSecond=outputReserveToken;if(amount&&reserveETHFirst&&reserveTokenFirst&&reserveETHSecond&&reserveTokenSecond){try{if(independentField===INPUT){var intermediateValue=calculateEtherTokenOutputFromInput(amount,reserveTokenFirst,reserveETHFirst);if(intermediateValue.lte(ethers.constants.Zero)){throw Error();}var _calculatedDependentValue2=calculateEtherTokenOutputFromInput(intermediateValue,reserveETHSecond,reserveTokenSecond);if(_calculatedDependentValue2.lte(ethers.constants.Zero)){throw Error();}dispatchSwapState({type:'UPDATE_DEPENDENT',payload:_calculatedDependentValue2});}else{var _intermediateValue=calculateEtherTokenInputFromOutput(amount,reserveETHSecond,reserveTokenSecond);if(_intermediateValue.lte(ethers.constants.Zero)){throw Error();}// console.log('hi!', amountFormatter(intermediateValue, ))\nvar _calculatedDependentValue3=calculateEtherTokenInputFromOutput(_intermediateValue,reserveTokenFirst,reserveETHFirst);if(_calculatedDependentValue3.lte(ethers.constants.Zero)){throw Error();}dispatchSwapState({type:'UPDATE_DEPENDENT',payload:_calculatedDependentValue3});}}catch(_unused6){setIndependentError(t('insufficientLiquidity'));}return function(){dispatchSwapState({type:'UPDATE_DEPENDENT',payload:''});};}}},[independentValueParsed,swapType,outputReserveETH,outputReserveToken,inputReserveETH,inputReserveToken,independentField,t]);var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),inverted=_useState14[0],setInverted=_useState14[1];var exchangeRate=getExchangeRate(inputValueParsed,inputDecimals,outputValueParsed,outputDecimals);var exchangeRateInverted=getExchangeRate(inputValueParsed,inputDecimals,outputValueParsed,outputDecimals,true);var marketRate=getMarketRate(swapType,inputReserveETH,inputReserveToken,inputDecimals,outputReserveETH,outputReserveToken,outputDecimals);var percentSlippage=exchangeRate&&marketRate?exchangeRate.sub(marketRate).abs().mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(marketRate).sub(ethers.utils.bigNumberify(3).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(15)))):undefined;var percentSlippageFormatted=percentSlippage&&amountFormatter(percentSlippage,16,2);var slippageWarning=percentSlippage&&percentSlippage.gte(ethers.utils.parseEther('.05'))&&percentSlippage.lt(ethers.utils.parseEther('.2'));// [5% - 20%)\nvar highSlippageWarning=percentSlippage&&percentSlippage.gte(ethers.utils.parseEther('.2'));// [20+%\nvar isValid=exchangeRate&&inputError===null&&independentError===null&&recipientError===null;var estimatedText=\"(\".concat(t('estimated'),\")\");function formatBalance(value){return\"Balance: \".concat(value);}function renderTransactionDetails(){ReactGA.event({category:'TransactionDetail',action:'Open'});var b=function b(text){return React.createElement(BlueSpan,null,text);};if(independentField===INPUT){return React.createElement(\"div\",null,React.createElement(\"div\",null,t('youAreSelling'),' ',b(\"\".concat(amountFormatter(independentValueParsed,independentDecimals,Math.min(4,independentDecimals)),\" \").concat(inputSymbol)),\".\"),React.createElement(LastSummaryText,null,b(recipient.address),\" \",t('willReceive'),' ',b(\"\".concat(amountFormatter(dependentValueMinumum,dependentDecimals,Math.min(4,dependentDecimals)),\" \").concat(outputSymbol)),' ',t('orTransFail')),React.createElement(LastSummaryText,null,(slippageWarning||highSlippageWarning)&&React.createElement(\"span\",{role:\"img\",\"aria-label\":\"warning\"},\"\\u26A0\\uFE0F\"),t('priceChange'),\" \",b(\"\".concat(percentSlippageFormatted,\"%\")),\".\"));}else{return React.createElement(\"div\",null,React.createElement(\"div\",null,t('youAreSending'),' ',b(\"\".concat(amountFormatter(independentValueParsed,independentDecimals,Math.min(4,independentDecimals)),\" \").concat(outputSymbol)),' ',t('to'),\" \",b(recipient.address),\".\"),React.createElement(LastSummaryText,null,t('itWillCost'),' ',b(\"\".concat(amountFormatter(dependentValueMaximum,dependentDecimals,Math.min(4,dependentDecimals)),\" \").concat(inputSymbol)),' ',t('orTransFail')),React.createElement(LastSummaryText,null,t('priceChange'),\" \",b(\"\".concat(percentSlippageFormatted,\"%\")),\".\"));}}function renderSummary(){var contextualInfo='';var isError=false;if(inputError||independentError){contextualInfo=inputError||independentError;isError=true;}else if(!inputCurrency||!outputCurrency){contextualInfo=t('selectTokenCont');}else if(!independentValue){contextualInfo=t('enterValueCont');}else if(!recipient.address){contextualInfo=t('noRecipient');}else if(!isAddress(recipient.address)){contextualInfo=t('invalidRecipient');}else if(!account){contextualInfo=t('noWallet');isError=true;}var slippageWarningText=highSlippageWarning?t('highSlippageWarning'):slippageWarning?t('slippageWarning'):'';return React.createElement(NewContextualInfo,{openDetailsText:t('transactionDetails'),closeDetailsText:t('hideDetails'),contextualInfo:contextualInfo?contextualInfo:slippageWarningText,allowExpand:!!(inputCurrency&&outputCurrency&&inputValueParsed&&outputValueParsed&&recipient.address),isError:isError,slippageWarning:slippageWarning&&slippageWarningText,highSlippageWarning:highSlippageWarning&&slippageWarningText,renderTransactionDetails:renderTransactionDetails});}function onSwap(){return _onSwap.apply(this,arguments);}function _onSwap(){_onSwap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var deadline,estimate,method,args,value,estimatedGasLimit;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:deadline=Math.ceil(Date.now()/1000)+DEADLINE_FROM_NOW;if(independentField===INPUT){ReactGA.event({category:\"\".concat(swapType),action:'TransferInput'});if(swapType===ETH_TO_TOKEN){estimate=contract.estimate.ethToTokenTransferInput;method=contract.ethToTokenTransferInput;args=[dependentValueMinumum,deadline,recipient.address];value=independentValueParsed;}else if(swapType===TOKEN_TO_ETH){estimate=contract.estimate.tokenToEthTransferInput;method=contract.tokenToEthTransferInput;args=[independentValueParsed,dependentValueMinumum,deadline,recipient.address];value=ethers.constants.Zero;}else if(swapType===TOKEN_TO_TOKEN){estimate=contract.estimate.tokenToTokenTransferInput;method=contract.tokenToTokenTransferInput;args=[independentValueParsed,dependentValueMinumum,ethers.constants.One,deadline,recipient.address,outputCurrency];value=ethers.constants.Zero;}}else if(independentField===OUTPUT){ReactGA.event({category:\"\".concat(swapType),action:'TransferOutput'});if(swapType===ETH_TO_TOKEN){estimate=contract.estimate.ethToTokenTransferOutput;method=contract.ethToTokenTransferOutput;args=[independentValueParsed,deadline,recipient.address];value=dependentValueMaximum;}else if(swapType===TOKEN_TO_ETH){estimate=contract.estimate.tokenToEthTransferOutput;method=contract.tokenToEthTransferOutput;args=[independentValueParsed,dependentValueMaximum,deadline,recipient.address];value=ethers.constants.Zero;}else if(swapType===TOKEN_TO_TOKEN){estimate=contract.estimate.tokenToTokenTransferOutput;method=contract.tokenToTokenTransferOutput;args=[independentValueParsed,dependentValueMaximum,ethers.constants.MaxUint256,deadline,recipient.address,outputCurrency];value=ethers.constants.Zero;}}_context.next=4;return estimate.apply(void 0,_toConsumableArray(args).concat([{value:value}]));case 4:estimatedGasLimit=_context.sent;method.apply(void 0,_toConsumableArray(args).concat([{value:value,gasLimit:calculateGasMargin(estimatedGasLimit,GAS_MARGIN)}])).then(function(response){addTransaction(response);});case 6:case\"end\":return _context.stop();}}},_callee);}));return _onSwap.apply(this,arguments);}return React.createElement(React.Fragment,null,React.createElement(CurrencyInputPanel,{title:t('input'),description:inputValueFormatted&&independentField===OUTPUT?estimatedText:'',extraText:inputBalanceFormatted&&formatBalance(inputBalanceFormatted),extraTextClickHander:function extraTextClickHander(){if(inputBalance&&inputDecimals){var valueToSet=inputCurrency==='ETH'?inputBalance.sub(ethers.utils.parseEther('.1')):inputBalance;if(valueToSet.gt(ethers.constants.Zero)){dispatchSwapState({type:'UPDATE_INDEPENDENT',payload:{value:amountFormatter(valueToSet,inputDecimals,inputDecimals,false),field:INPUT}});}}},onCurrencySelected:function onCurrencySelected(inputCurrency){dispatchSwapState({type:'SELECT_CURRENCY',payload:{currency:inputCurrency,field:INPUT}});},onValueChange:function onValueChange(inputValue){dispatchSwapState({type:'UPDATE_INDEPENDENT',payload:{value:inputValue,field:INPUT}});},showUnlock:showUnlock,selectedTokens:[inputCurrency,outputCurrency],selectedTokenAddress:inputCurrency,value:inputValueFormatted,errorMessage:inputError?inputError:independentField===INPUT?independentError:''}),React.createElement(OversizedPanel,null,React.createElement(DownArrowBackground,null,React.createElement(DownArrow,{onClick:function onClick(){dispatchSwapState({type:'FLIP_INDEPENDENT'});},clickable:true,alt:\"swap\",src:isValid?ArrowDownBlue:ArrowDownGrey}))),React.createElement(CurrencyInputPanel,{title:t('output'),description:outputValueFormatted&&independentField===INPUT?estimatedText:'',extraText:outputBalanceFormatted&&formatBalance(outputBalanceFormatted),onCurrencySelected:function onCurrencySelected(outputCurrency){dispatchSwapState({type:'SELECT_CURRENCY',payload:{currency:outputCurrency,field:OUTPUT}});},onValueChange:function onValueChange(outputValue){dispatchSwapState({type:'UPDATE_INDEPENDENT',payload:{value:outputValue,field:OUTPUT}});},selectedTokens:[inputCurrency,outputCurrency],selectedTokenAddress:outputCurrency,value:outputValueFormatted,errorMessage:independentField===OUTPUT?independentError:'',disableUnlock:true}),React.createElement(OversizedPanel,null,React.createElement(DownArrowBackground,null,React.createElement(DownArrow,{src:isValid?ArrowDownBlue:ArrowDownGrey,alt:\"arrow\"}))),React.createElement(AddressInputPanel,{onChange:setRecipient,onError:setRecipientError}),React.createElement(OversizedPanel,{hideBottom:true},React.createElement(ExchangeRateWrapper,{onClick:function onClick(){setInverted(function(inverted){return!inverted;});}},React.createElement(ExchangeRate,null,t('exchangeRate')),inverted?React.createElement(\"span\",null,exchangeRate?\"1 \".concat(outputSymbol,\" = \").concat(amountFormatter(exchangeRateInverted,18,4,false),\" \").concat(inputSymbol):' - '):React.createElement(\"span\",null,exchangeRate?\"1 \".concat(inputSymbol,\" = \").concat(amountFormatter(exchangeRate,18,4,false),\" \").concat(outputSymbol):' - '))),renderSummary(),React.createElement(Flex,null,React.createElement(Button,{disabled:!isValid,onClick:onSwap,warning:highSlippageWarning},highSlippageWarning?t('sendAnyway'):t('send'))));}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/pages/Send/index.js"],"names":["React","useState","useReducer","useEffect","ReactGA","useTranslation","useWeb3Context","ethers","styled","Button","CurrencyInputPanel","NewContextualInfo","OversizedPanel","AddressInputPanel","isAddress","amountFormatter","calculateGasMargin","useExchangeContract","useTokenDetails","useTransactionAdder","useAddressBalance","useExchangeReserves","useAddressAllowance","INPUT","OUTPUT","ETH_TO_TOKEN","TOKEN_TO_ETH","TOKEN_TO_TOKEN","ALLOWED_SLIPPAGE","utils","bigNumberify","TOKEN_ALLOWED_SLIPPAGE","DEADLINE_FROM_NOW","GAS_MARGIN","BlueSpan","span","theme","royalBlue","DownArrowBackground","div","flexRowNoWrap","DownArrow","img","clickable","LastSummaryText","ExchangeRateWrapper","doveGray","ExchangeRate","chaliceGray","Flex","calculateSlippageBounds","value","token","offset","mul","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","getSwapType","inputCurrency","outputCurrency","calculateEtherTokenOutputFromInput","inputAmount","inputReserve","outputReserve","inputAmountWithFee","numerator","denominator","calculateEtherTokenInputFromOutput","outputAmount","One","initialSwapState","independentValue","dependentValue","independentField","swapStateReducer","state","action","type","payload","field","currency","newInputCurrency","newOutputCurrency","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","getMarketRate","swapType","inputReserveETH","inputReserveToken","outputReserveETH","outputReserveToken","firstRate","secondRate","undefined","Swap","t","account","addTransaction","pageview","window","location","pathname","search","swapState","dispatchSwapState","address","name","recipient","setRecipient","recipientError","setRecipientError","inputSymbol","symbol","decimals","inputExchangeAddress","exchangeAddress","outputSymbol","outputExchangeAddress","inputExchangeContract","outputExchangeContract","contract","inputAllowance","reserveETH","reserveToken","inputBalance","outputBalance","inputBalanceFormatted","Number","isInteger","Math","min","outputBalanceFormatted","independentDecimals","dependentDecimals","independentValueParsed","setIndependentValueParsed","dependentValueFormatted","inputValueParsed","inputValueFormatted","outputValueParsed","outputValueFormatted","independentError","setIndependentError","parsedValue","parseUnits","lte","gte","Error","dependentValueMinumum","dependentValueMaximum","inputError","setInputError","showUnlock","setShowUnlock","inputValueCalculation","amount","calculatedDependentValue","reserveETHFirst","reserveTokenFirst","reserveETHSecond","reserveTokenSecond","intermediateValue","inverted","setInverted","exchangeRate","exchangeRateInverted","marketRate","percentSlippage","abs","percentSlippageFormatted","slippageWarning","parseEther","highSlippageWarning","isValid","estimatedText","formatBalance","renderTransactionDetails","event","category","b","text","renderSummary","contextualInfo","isError","slippageWarningText","onSwap","deadline","ceil","Date","now","estimate","ethToTokenTransferInput","method","args","tokenToEthTransferInput","tokenToTokenTransferInput","ethToTokenTransferOutput","tokenToEthTransferOutput","tokenToTokenTransferOutput","estimatedGasLimit","gasLimit","then","response","valueToSet","ArrowDownBlue","ArrowDownGrey"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3Context } from 'web3-react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport NewContextualInfo from '../../components/ContextualInfoNew'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport ArrowDownBlue from '../../assets/images/arrow-down-blue.svg'\nimport ArrowDownGrey from '../../assets/images/arrow-down-grey.svg'\nimport { isAddress, amountFormatter, calculateGasMargin } from '../../utils'\nimport { useExchangeContract } from '../../hooks'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\nimport { useAddressAllowance } from '../../contexts/Allowances'\n\nconst INPUT = 0\nconst OUTPUT = 1\n\nconst ETH_TO_TOKEN = 0\nconst TOKEN_TO_ETH = 1\nconst TOKEN_TO_TOKEN = 2\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\nconst TOKEN_ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(400)\n\n// denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst BlueSpan = styled.span`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst DownArrow = styled.img`\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst LastSummaryText = styled.div`\n  margin-top: 1rem;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.5rem 1rem;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction calculateSlippageBounds(value, token = false) {\n  if (value) {\n    const offset = value.mul(token ? TOKEN_ALLOWED_SLIPPAGE : ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nfunction getSwapType(inputCurrency, outputCurrency) {\n  if (!inputCurrency || !outputCurrency) {\n    return null\n  } else if (inputCurrency === 'ETH') {\n    return ETH_TO_TOKEN\n  } else if (outputCurrency === 'ETH') {\n    return TOKEN_TO_ETH\n  } else {\n    return TOKEN_TO_TOKEN\n  }\n}\n\n// this mocks the getInputPrice function, and calculates the required output\nfunction calculateEtherTokenOutputFromInput(inputAmount, inputReserve, outputReserve) {\n  const inputAmountWithFee = inputAmount.mul(ethers.utils.bigNumberify(997))\n  const numerator = inputAmountWithFee.mul(outputReserve)\n  const denominator = inputReserve.mul(ethers.utils.bigNumberify(1000)).add(inputAmountWithFee)\n  return numerator.div(denominator)\n}\n\n// this mocks the getOutputPrice function, and calculates the required input\nfunction calculateEtherTokenInputFromOutput(outputAmount, inputReserve, outputReserve) {\n  const numerator = inputReserve.mul(outputAmount).mul(ethers.utils.bigNumberify(1000))\n  const denominator = outputReserve.sub(outputAmount).mul(ethers.utils.bigNumberify(997))\n  return numerator.div(denominator).add(ethers.constants.One)\n}\n\nconst initialSwapState = {\n  independentValue: '', // this is a user input\n  dependentValue: '', // this is a calculated number\n  independentField: INPUT,\n  inputCurrency: 'ETH',\n  outputCurrency: ''\n}\n\nfunction swapStateReducer(state, action) {\n  switch (action.type) {\n    case 'FLIP_INDEPENDENT': {\n      const { independentField, inputCurrency, outputCurrency } = state\n      return {\n        ...state,\n        dependentValue: '',\n        independentField: independentField === INPUT ? OUTPUT : INPUT,\n        inputCurrency: outputCurrency,\n        outputCurrency: inputCurrency\n      }\n    }\n    case 'SELECT_CURRENCY': {\n      const { inputCurrency, outputCurrency } = state\n      const { field, currency } = action.payload\n\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\n\n      if (newInputCurrency === newOutputCurrency) {\n        return {\n          ...state,\n          inputCurrency: field === INPUT ? currency : '',\n          outputCurrency: field === OUTPUT ? currency : ''\n        }\n      } else {\n        return {\n          ...state,\n          inputCurrency: newInputCurrency,\n          outputCurrency: newOutputCurrency\n        }\n      }\n    }\n    case 'UPDATE_INDEPENDENT': {\n      const { field, value } = action.payload\n      return {\n        ...state,\n        independentValue: value,\n        dependentValue: '',\n        independentField: field\n      }\n    }\n    case 'UPDATE_DEPENDENT': {\n      return {\n        ...state,\n        dependentValue: action.payload\n      }\n    }\n    default: {\n      return initialSwapState\n    }\n  }\n}\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(\n  swapType,\n  inputReserveETH,\n  inputReserveToken,\n  inputDecimals,\n  outputReserveETH,\n  outputReserveToken,\n  outputDecimals,\n  invert = false\n) {\n  if (swapType === ETH_TO_TOKEN) {\n    return getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals, invert)\n  } else if (swapType === TOKEN_TO_ETH) {\n    return getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18, invert)\n  } else if (swapType === TOKEN_TO_TOKEN) {\n    const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n    const firstRate = getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18)\n    const secondRate = getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals)\n    try {\n      return !!(firstRate && secondRate) ? firstRate.mul(secondRate).div(factor) : undefined\n    } catch {}\n  }\n}\n\nexport default function Swap() {\n  const { t } = useTranslation()\n  const { account } = useWeb3Context()\n\n  const addTransaction = useTransactionAdder()\n\n  // analytics\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  // core swap state\n  const [swapState, dispatchSwapState] = useReducer(swapStateReducer, initialSwapState)\n  const { independentValue, dependentValue, independentField, inputCurrency, outputCurrency } = swapState\n\n  const [recipient, setRecipient] = useState({ address: '', name: '' })\n  const [recipientError, setRecipientError] = useState()\n\n  // get swap type from the currency types\n  const swapType = getSwapType(inputCurrency, outputCurrency)\n\n  // get decimals and exchange addressfor each of the currency types\n  const { symbol: inputSymbol, decimals: inputDecimals, exchangeAddress: inputExchangeAddress } = useTokenDetails(\n    inputCurrency\n  )\n  const { symbol: outputSymbol, decimals: outputDecimals, exchangeAddress: outputExchangeAddress } = useTokenDetails(\n    outputCurrency\n  )\n\n  const inputExchangeContract = useExchangeContract(inputExchangeAddress)\n  const outputExchangeContract = useExchangeContract(outputExchangeAddress)\n  const contract = swapType === ETH_TO_TOKEN ? outputExchangeContract : inputExchangeContract\n\n  // get input allowance\n  const inputAllowance = useAddressAllowance(account, inputCurrency, inputExchangeAddress)\n\n  // fetch reserves for each of the currency types\n  const { reserveETH: inputReserveETH, reserveToken: inputReserveToken } = useExchangeReserves(inputCurrency)\n  const { reserveETH: outputReserveETH, reserveToken: outputReserveToken } = useExchangeReserves(outputCurrency)\n\n  // get balances for each of the currency types\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\n    : ''\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\n    : ''\n\n  // compute useful transforms of the data above\n  const independentDecimals = independentField === INPUT ? inputDecimals : outputDecimals\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\n\n  // declare/get parsed and formatted versions of input/output values\n  const [independentValueParsed, setIndependentValueParsed] = useState()\n  const dependentValueFormatted = !!(dependentValue && dependentDecimals)\n    ? amountFormatter(dependentValue, dependentDecimals, Math.min(4, dependentDecimals), false)\n    : ''\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : dependentValue\n  const inputValueFormatted = independentField === INPUT ? independentValue : dependentValueFormatted\n  const outputValueParsed = independentField === OUTPUT ? independentValueParsed : dependentValue\n  const outputValueFormatted = independentField === OUTPUT ? independentValue : dependentValueFormatted\n\n  // validate + parse independent value\n  const [independentError, setIndependentError] = useState()\n  useEffect(() => {\n    if (independentValue && independentDecimals) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        } else {\n          setIndependentValueParsed(parsedValue)\n          setIndependentError(null)\n        }\n      } catch {\n        setIndependentError(t('inputNotValid'))\n      }\n\n      return () => {\n        setIndependentValueParsed()\n        setIndependentError()\n      }\n    }\n  }, [independentValue, independentDecimals, t])\n\n  // calculate slippage from target rate\n  const { minimum: dependentValueMinumum, maximum: dependentValueMaximum } = calculateSlippageBounds(\n    dependentValue,\n    swapType === TOKEN_TO_TOKEN\n  )\n\n  // validate input allowance + balance\n  const [inputError, setInputError] = useState()\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    const inputValueCalculation = independentField === INPUT ? independentValueParsed : dependentValueMaximum\n\n    if (inputBalance && (inputAllowance || inputCurrency === 'ETH') && inputValueCalculation) {\n      if (inputBalance.lt(inputValueCalculation)) {\n        setInputError(t('insufficientBalance'))\n      } else if (inputCurrency !== 'ETH' && inputAllowance.lt(inputValueCalculation)) {\n        setInputError(t('unlockTokenCont'))\n        setShowUnlock(true)\n      } else {\n        setInputError(null)\n        setShowUnlock(false)\n      }\n\n      return () => {\n        setInputError()\n        setShowUnlock(false)\n      }\n    }\n  }, [independentField, independentValueParsed, dependentValueMaximum, inputBalance, inputCurrency, inputAllowance, t])\n\n  // calculate dependent value\n  useEffect(() => {\n    const amount = independentValueParsed\n\n    if (swapType === ETH_TO_TOKEN) {\n      const reserveETH = outputReserveETH\n      const reserveToken = outputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveETH, reserveToken)\n              : calculateEtherTokenInputFromOutput(amount, reserveETH, reserveToken)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_ETH) {\n      const reserveETH = inputReserveETH\n      const reserveToken = inputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveToken, reserveETH)\n              : calculateEtherTokenInputFromOutput(amount, reserveToken, reserveETH)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_TOKEN) {\n      const reserveETHFirst = inputReserveETH\n      const reserveTokenFirst = inputReserveToken\n\n      const reserveETHSecond = outputReserveETH\n      const reserveTokenSecond = outputReserveToken\n\n      if (amount && reserveETHFirst && reserveTokenFirst && reserveETHSecond && reserveTokenSecond) {\n        try {\n          if (independentField === INPUT) {\n            const intermediateValue = calculateEtherTokenOutputFromInput(amount, reserveTokenFirst, reserveETHFirst)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenOutputFromInput(\n              intermediateValue,\n              reserveETHSecond,\n              reserveTokenSecond\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n          } else {\n            const intermediateValue = calculateEtherTokenInputFromOutput(amount, reserveETHSecond, reserveTokenSecond)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            // console.log('hi!', amountFormatter(intermediateValue, ))\n            const calculatedDependentValue = calculateEtherTokenInputFromOutput(\n              intermediateValue,\n              reserveTokenFirst,\n              reserveETHFirst\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n          }\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    }\n  }, [\n    independentValueParsed,\n    swapType,\n    outputReserveETH,\n    outputReserveToken,\n    inputReserveETH,\n    inputReserveToken,\n    independentField,\n    t\n  ])\n\n  const [inverted, setInverted] = useState(false)\n  const exchangeRate = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals)\n  const exchangeRateInverted = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals, true)\n\n  const marketRate = getMarketRate(\n    swapType,\n    inputReserveETH,\n    inputReserveToken,\n    inputDecimals,\n    outputReserveETH,\n    outputReserveToken,\n    outputDecimals\n  )\n\n  const percentSlippage =\n    exchangeRate && marketRate\n      ? exchangeRate\n          .sub(marketRate)\n          .abs()\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(marketRate)\n          .sub(ethers.utils.bigNumberify(3).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(15))))\n      : undefined\n  const percentSlippageFormatted = percentSlippage && amountFormatter(percentSlippage, 16, 2)\n  const slippageWarning =\n    percentSlippage &&\n    percentSlippage.gte(ethers.utils.parseEther('.05')) &&\n    percentSlippage.lt(ethers.utils.parseEther('.2')) // [5% - 20%)\n  const highSlippageWarning = percentSlippage && percentSlippage.gte(ethers.utils.parseEther('.2')) // [20+%\n\n  const isValid = exchangeRate && inputError === null && independentError === null && recipientError === null\n\n  const estimatedText = `(${t('estimated')})`\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  function renderTransactionDetails() {\n    ReactGA.event({\n      category: 'TransactionDetail',\n      action: 'Open'\n    })\n\n    const b = text => <BlueSpan>{text}</BlueSpan>\n\n    if (independentField === INPUT) {\n      return (\n        <div>\n          <div>\n            {t('youAreSelling')}{' '}\n            {b(\n              `${amountFormatter(\n                independentValueParsed,\n                independentDecimals,\n                Math.min(4, independentDecimals)\n              )} ${inputSymbol}`\n            )}\n            .\n          </div>\n          <LastSummaryText>\n            {b(recipient.address)} {t('willReceive')}{' '}\n            {b(\n              `${amountFormatter(\n                dependentValueMinumum,\n                dependentDecimals,\n                Math.min(4, dependentDecimals)\n              )} ${outputSymbol}`\n            )}{' '}\n            {t('orTransFail')}\n          </LastSummaryText>\n          <LastSummaryText>\n            {(slippageWarning || highSlippageWarning) && (\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n            )}\n            {t('priceChange')} {b(`${percentSlippageFormatted}%`)}.\n          </LastSummaryText>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div>\n            {t('youAreSending')}{' '}\n            {b(\n              `${amountFormatter(\n                independentValueParsed,\n                independentDecimals,\n                Math.min(4, independentDecimals)\n              )} ${outputSymbol}`\n            )}{' '}\n            {t('to')} {b(recipient.address)}.\n          </div>\n          <LastSummaryText>\n            {t('itWillCost')}{' '}\n            {b(\n              `${amountFormatter(\n                dependentValueMaximum,\n                dependentDecimals,\n                Math.min(4, dependentDecimals)\n              )} ${inputSymbol}`\n            )}{' '}\n            {t('orTransFail')}\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('priceChange')} {b(`${percentSlippageFormatted}%`)}.\n          </LastSummaryText>\n        </div>\n      )\n    }\n  }\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n\n    if (inputError || independentError) {\n      contextualInfo = inputError || independentError\n      isError = true\n    } else if (!inputCurrency || !outputCurrency) {\n      contextualInfo = t('selectTokenCont')\n    } else if (!independentValue) {\n      contextualInfo = t('enterValueCont')\n    } else if (!recipient.address) {\n      contextualInfo = t('noRecipient')\n    } else if (!isAddress(recipient.address)) {\n      contextualInfo = t('invalidRecipient')\n    } else if (!account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    const slippageWarningText = highSlippageWarning\n      ? t('highSlippageWarning')\n      : slippageWarning\n      ? t('slippageWarning')\n      : ''\n\n    return (\n      <NewContextualInfo\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo ? contextualInfo : slippageWarningText}\n        allowExpand={!!(inputCurrency && outputCurrency && inputValueParsed && outputValueParsed && recipient.address)}\n        isError={isError}\n        slippageWarning={slippageWarning && slippageWarningText}\n        highSlippageWarning={highSlippageWarning && slippageWarningText}\n        renderTransactionDetails={renderTransactionDetails}\n      />\n    )\n  }\n\n  async function onSwap() {\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    let estimate, method, args, value\n    if (independentField === INPUT) {\n      ReactGA.event({\n        category: `${swapType}`,\n        action: 'TransferInput'\n      })\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = contract.estimate.ethToTokenTransferInput\n        method = contract.ethToTokenTransferInput\n        args = [dependentValueMinumum, deadline, recipient.address]\n        value = independentValueParsed\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = contract.estimate.tokenToEthTransferInput\n        method = contract.tokenToEthTransferInput\n        args = [independentValueParsed, dependentValueMinumum, deadline, recipient.address]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = contract.estimate.tokenToTokenTransferInput\n        method = contract.tokenToTokenTransferInput\n        args = [\n          independentValueParsed,\n          dependentValueMinumum,\n          ethers.constants.One,\n          deadline,\n          recipient.address,\n          outputCurrency\n        ]\n        value = ethers.constants.Zero\n      }\n    } else if (independentField === OUTPUT) {\n      ReactGA.event({\n        category: `${swapType}`,\n        action: 'TransferOutput'\n      })\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = contract.estimate.ethToTokenTransferOutput\n        method = contract.ethToTokenTransferOutput\n        args = [independentValueParsed, deadline, recipient.address]\n        value = dependentValueMaximum\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = contract.estimate.tokenToEthTransferOutput\n        method = contract.tokenToEthTransferOutput\n        args = [independentValueParsed, dependentValueMaximum, deadline, recipient.address]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = contract.estimate.tokenToTokenTransferOutput\n        method = contract.tokenToTokenTransferOutput\n        args = [\n          independentValueParsed,\n          dependentValueMaximum,\n          ethers.constants.MaxUint256,\n          deadline,\n          recipient.address,\n          outputCurrency\n        ]\n        value = ethers.constants.Zero\n      }\n    }\n\n    const estimatedGasLimit = await estimate(...args, { value })\n    method(...args, { value, gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN) }).then(response => {\n      addTransaction(response)\n    })\n  }\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('input')}\n        description={inputValueFormatted && independentField === OUTPUT ? estimatedText : ''}\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\n        extraTextClickHander={() => {\n          if (inputBalance && inputDecimals) {\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              dispatchSwapState({\n                type: 'UPDATE_INDEPENDENT',\n                payload: { value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false), field: INPUT }\n              })\n            }\n          }\n        }}\n        onCurrencySelected={inputCurrency => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: inputCurrency, field: INPUT } })\n        }}\n        onValueChange={inputValue => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValue, field: INPUT } })\n        }}\n        showUnlock={showUnlock}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={inputCurrency}\n        value={inputValueFormatted}\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\n            }}\n            clickable\n            alt=\"swap\"\n            src={isValid ? ArrowDownBlue : ArrowDownGrey}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        description={outputValueFormatted && independentField === INPUT ? estimatedText : ''}\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\n        onCurrencySelected={outputCurrency => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: outputCurrency, field: OUTPUT } })\n        }}\n        onValueChange={outputValue => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: outputValue, field: OUTPUT } })\n        }}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={outputCurrency}\n        value={outputValueFormatted}\n        errorMessage={independentField === OUTPUT ? independentError : ''}\n        disableUnlock\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow src={isValid ? ArrowDownBlue : ArrowDownGrey} alt=\"arrow\" />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <AddressInputPanel onChange={setRecipient} onError={setRecipientError} />\n      <OversizedPanel hideBottom>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted(inverted => !inverted)\n          }}\n        >\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n          {inverted ? (\n            <span>\n              {exchangeRate\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {exchangeRate\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n      </OversizedPanel>\n      {renderSummary()}\n      <Flex>\n        <Button disabled={!isValid} onClick={onSwap} warning={highSlippageWarning}>\n          {highSlippageWarning ? t('sendAnyway') : t('send')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}