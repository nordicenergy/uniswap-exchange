{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/components/CurrencyInputPanel/index.js\";\nimport React, { useState, useRef, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { ethers } from 'ethers';\nimport styled from 'styled-components';\nimport escapeStringRegex from 'escape-string-regexp';\nimport { lighten, darken } from 'polished';\nimport Tooltip from '@reach/tooltip';\nimport '@reach/tooltip/styles.css';\nimport { BorderlessInput } from '../../theme';\nimport { useTokenContract } from '../../hooks';\nimport { isAddress, calculateGasMargin } from '../../utils';\nimport { ReactComponent as DropDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/dropdown.svg\";\nimport Modal from '../Modal';\nimport TokenLogo from '../TokenLogo';\nimport SearchIcon from \"../../assets/images/magnifying-glass.svg\";\nimport { useTransactionAdder, usePendingApproval } from '../../contexts/Transactions';\nimport { useTokenDetails, useAllTokenDetails } from '../../contexts/Tokens';\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000);\nconst SubCurrencySelect = styled.button`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  background: ${({\n  theme\n}) => theme.zumthorBlue};\n  border: 1px solid ${({\n  theme\n}) => theme.royalBlue};\n  color: ${({\n  theme\n}) => theme.royalBlue};\n  line-height: 0;\n  height: 2rem;\n  padding: 10px 50px 10px 15px;\n  margin-right: -40px;\n  border-radius: 2.5rem;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n`;\nconst InputRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`;\nconst Input = styled(BorderlessInput)`\n  font-size: 1.5rem;\n  color: ${({\n  error,\n  theme\n}) => error && theme.salmonRed};\n`;\nconst StyledBorderlessInput = styled(BorderlessInput)`\n  min-height: 1.75rem;\n  flex-shrink: 0;\n`;\nconst CurrencySelect = styled.button`\n  align-items: center;\n  font-size: 1rem;\n  color: ${({\n  selected,\n  theme\n}) => selected ? theme.black : theme.royalBlue};\n  height: 2rem;\n  border: 1px solid ${({\n  selected,\n  theme\n}) => selected ? theme.mercuryGray : theme.royalBlue};\n  border-radius: 2.5rem;\n  background-color: ${({\n  selected,\n  theme\n}) => selected ? theme.concreteGray : theme.zumthorBlue};\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n\n  :hover {\n    border: 1px solid\n      ${({\n  selected,\n  theme\n}) => selected ? darken(0.1, theme.mercuryGray) : darken(0.1, theme.royalBlue)};\n  }\n\n  :focus {\n    box-shadow: 0 0 0.5px 0.5px ${({\n  theme\n}) => theme.malibuBlue};\n  }\n\n  :active {\n    background-color: ${({\n  theme\n}) => theme.zumthorBlue};\n  }\n`;\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.5rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({\n  selected,\n  theme\n}) => selected ? theme.black : theme.royalBlue};\n  }\n`;\nconst InputPanel = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({\n  theme\n}) => lighten(0.9, theme.royalBlue)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({\n  theme\n}) => theme.white};\n  z-index: 1;\n`;\nconst Container = styled.div`\n  border-radius: 1.25rem;\n  box-shadow: 0 0 0 0.5px ${({\n  error,\n  theme\n}) => error ? theme.salmonRed : theme.mercuryGray};\n  background-color: ${({\n  theme\n}) => theme.white};\n  transition: box-shadow 200ms ease-in-out;\n\n  :focus-within {\n    box-shadow: 0 0 0.5px 0.5px ${({\n  theme\n}) => theme.malibuBlue};\n  }\n`;\nconst LabelRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({\n  theme\n}) => darken(0.2, theme.doveGray)};\n  }\n`;\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nconst ErrorSpan = styled.span`\n  color: ${({\n  error,\n  theme\n}) => error && theme.salmonRed};\n  :hover {\n    cursor: pointer;\n    color: ${({\n  error,\n  theme\n}) => error && darken(0.1, theme.salmonRed)};\n  }\n`;\nconst TokenModal = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  background-color: ${({\n  theme\n}) => theme.white};\n  width: 100%;\n`;\nconst SearchContainer = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  padding: 1rem;\n  border-bottom: 1px solid ${({\n  theme\n}) => theme.mercuryGray};\n`;\nconst TokenModalInfo = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  user-select: none;\n`;\nconst TokenList = styled.div`\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: auto;\n`;\nconst TokenModalRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: space-between;\n  cursor: pointer;\n  user-select: none;\n\n  #symbol {\n    color: ${({\n  theme\n}) => theme.doveGrey};\n  }\n\n  :hover {\n    background-color: ${({\n  theme\n}) => theme.concreteGray};\n  }\n`;\nconst StyledTokenName = styled.span`\n  margin: 0 0.25rem 0 0.25rem;\n`;\nexport default function CurrencyInputPanel({\n  onValueChange = () => {},\n  renderInput,\n  onCurrencySelected = () => {},\n  title,\n  description,\n  extraText,\n  extraTextClickHander = () => {},\n  errorMessage,\n  disableUnlock,\n  disableTokenSelect,\n  selectedTokenAddress = '',\n  showUnlock,\n  value\n}) {\n  const {\n    t\n  } = useTranslation();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const tokenContract = useTokenContract(selectedTokenAddress);\n  const {\n    exchangeAddress: selectedTokenExchangeAddress\n  } = useTokenDetails(selectedTokenAddress);\n  const pendingApproval = usePendingApproval(selectedTokenAddress);\n  const addTransaction = useTransactionAdder();\n  const allTokens = useAllTokenDetails();\n\n  function renderUnlockButton() {\n    if (disableUnlock || !showUnlock || selectedTokenAddress === 'ETH' || !selectedTokenAddress) {\n      return null;\n    } else {\n      if (!pendingApproval) {\n        return React.createElement(SubCurrencySelect, {\n          onClick: async () => {\n            const estimatedGas = await tokenContract.estimate.approve(selectedTokenExchangeAddress, ethers.constants.MaxUint256);\n            tokenContract.approve(selectedTokenExchangeAddress, ethers.constants.MaxUint256, {\n              gasLimit: calculateGasMargin(estimatedGas, GAS_MARGIN)\n            }).then(response => {\n              addTransaction(response, {\n                approval: selectedTokenAddress\n              });\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, t('unlock'));\n      } else {\n        return React.createElement(SubCurrencySelect, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, t('pending'));\n      }\n    }\n  }\n\n  function _renderInput() {\n    if (typeof renderInput === 'function') {\n      return renderInput();\n    }\n\n    return React.createElement(InputRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"number\",\n      min: \"0\",\n      error: !!errorMessage,\n      placeholder: \"0.0\",\n      onChange: e => onValueChange(e.target.value),\n      onKeyPress: e => {\n        const charCode = e.which ? e.which : e.keyCode; // Prevent 'minus' character\n\n        if (charCode === 45) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      },\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), renderUnlockButton(), React.createElement(CurrencySelect, {\n      selected: !!selectedTokenAddress,\n      onClick: () => {\n        if (!disableTokenSelect) {\n          setModalIsOpen(true);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Aligner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, selectedTokenAddress ? React.createElement(TokenLogo, {\n      address: selectedTokenAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }) : null, React.createElement(StyledTokenName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, allTokens[selectedTokenAddress] && allTokens[selectedTokenAddress].symbol || t('selectToken')), !disableTokenSelect && React.createElement(StyledDropDown, {\n      selected: !!selectedTokenAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }))));\n  }\n\n  return React.createElement(InputPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(Container, {\n    error: !!errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(LabelRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(LabelContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, title), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, description)), React.createElement(ErrorSpan, {\n    \"data-tip\": 'Enter max',\n    error: !!errorMessage,\n    onClick: () => {\n      extraTextClickHander();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    label: \"Enter Max\",\n    style: {\n      background: 'hsla(0, 0%, 0%, 0.75)',\n      color: 'white',\n      border: 'none',\n      borderRadius: '24px',\n      padding: '0.5em 1em',\n      marginTop: '-64px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, extraText)))), _renderInput()), !disableTokenSelect && React.createElement(CurrencySelectModal, {\n    isOpen: modalIsOpen,\n    onDismiss: () => {\n      setModalIsOpen(false);\n    },\n    onTokenSelect: onCurrencySelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }));\n}\n\nfunction CurrencySelectModal({\n  isOpen,\n  onDismiss,\n  onTokenSelect\n}) {\n  const {\n    t\n  } = useTranslation();\n  const [searchQuery, setSearchQuery] = useState('');\n  const {\n    exchangeAddress\n  } = useTokenDetails(searchQuery);\n  const allTokens = useAllTokenDetails();\n  const tokenList = useMemo(() => {\n    return Object.keys(allTokens).sort((a, b) => {\n      const aSymbol = allTokens[a].symbol.toLowerCase();\n      const bSymbol = allTokens[b].symbol.toLowerCase();\n\n      if (aSymbol === 'ETH'.toLowerCase() || bSymbol === 'ETH'.toLowerCase()) {\n        return aSymbol === bSymbol ? 0 : aSymbol === 'ETH'.toLowerCase() ? -1 : 1;\n      } else {\n        return aSymbol < bSymbol ? -1 : aSymbol > bSymbol ? 1 : 0;\n      }\n    }).map(k => {\n      return {\n        name: allTokens[k].name,\n        symbol: allTokens[k].symbol,\n        address: k\n      };\n    });\n  }, [allTokens]);\n  const filteredTokenList = useMemo(() => {\n    return tokenList.filter(tokenEntry => {\n      // check the regex for each field\n      const regexMatches = Object.keys(tokenEntry).map(tokenEntryKey => {\n        return tokenEntry[tokenEntryKey] && !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'));\n      });\n      return regexMatches.some(m => m);\n    });\n  }, [tokenList, searchQuery]);\n\n  function _onTokenSelect(address) {\n    setSearchQuery('');\n    onTokenSelect(address);\n    onDismiss();\n  }\n\n  function renderTokenList() {\n    if (isAddress(searchQuery) && exchangeAddress === undefined) {\n      return React.createElement(TokenModalInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \"Searching for Exchange...\");\n    }\n\n    if (isAddress(searchQuery) && exchangeAddress === ethers.constants.AddressZero) {\n      return React.createElement(React.Fragment, null, React.createElement(TokenModalInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, t('noExchange')), React.createElement(TokenModalInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/create-exchange/${searchQuery}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, t('createExchange'))));\n    }\n\n    if (!filteredTokenList.length) {\n      return React.createElement(TokenModalInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, t('noExchange'));\n    }\n\n    return filteredTokenList.map(({\n      address,\n      symbol\n    }) => {\n      return React.createElement(TokenModalRow, {\n        key: address,\n        onClick: () => _onTokenSelect(address),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(TokenLogo, {\n        address: address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, symbol));\n    });\n  } // manage focus on modal show\n\n\n  const inputRef = useRef();\n\n  function onInput(event) {\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n  }\n\n  return React.createElement(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    initialFocusRef: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, React.createElement(TokenModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, React.createElement(SearchContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, React.createElement(StyledBorderlessInput, {\n    ref: inputRef,\n    type: \"text\",\n    placeholder: t('searchOrPaste'),\n    onChange: onInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: SearchIcon,\n    alt: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  })), React.createElement(TokenList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, renderTokenList())));\n}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/components/CurrencyInputPanel/index.js"],"names":["React","useState","useRef","useMemo","Link","useTranslation","ethers","styled","escapeStringRegex","lighten","darken","Tooltip","BorderlessInput","useTokenContract","isAddress","calculateGasMargin","Modal","TokenLogo","useTransactionAdder","usePendingApproval","useTokenDetails","useAllTokenDetails","GAS_MARGIN","utils","bigNumberify","SubCurrencySelect","button","theme","flexRowNoWrap","zumthorBlue","royalBlue","InputRow","div","Input","error","salmonRed","StyledBorderlessInput","CurrencySelect","selected","black","mercuryGray","concreteGray","malibuBlue","Aligner","span","StyledDropDown","DropDown","InputPanel","flexColumnNoWrap","white","Container","LabelRow","doveGray","LabelContainer","ErrorSpan","TokenModal","SearchContainer","TokenModalInfo","TokenList","TokenModalRow","doveGrey","StyledTokenName","CurrencyInputPanel","onValueChange","renderInput","onCurrencySelected","title","description","extraText","extraTextClickHander","errorMessage","disableUnlock","disableTokenSelect","selectedTokenAddress","showUnlock","value","t","modalIsOpen","setModalIsOpen","tokenContract","exchangeAddress","selectedTokenExchangeAddress","pendingApproval","addTransaction","allTokens","renderUnlockButton","estimatedGas","estimate","approve","constants","MaxUint256","gasLimit","then","response","approval","_renderInput","e","target","charCode","which","keyCode","preventDefault","stopPropagation","symbol","background","color","border","borderRadius","padding","marginTop","CurrencySelectModal","isOpen","onDismiss","onTokenSelect","searchQuery","setSearchQuery","tokenList","Object","keys","sort","a","b","aSymbol","toLowerCase","bSymbol","map","k","name","address","filteredTokenList","filter","tokenEntry","regexMatches","tokenEntryKey","match","RegExp","some","m","_onTokenSelect","renderTokenList","undefined","AddressZero","length","inputRef","onInput","event","input","checksummedInput","SearchIcon"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport escapeStringRegex from 'escape-string-regexp'\nimport { lighten, darken } from 'polished'\nimport Tooltip from '@reach/tooltip'\nimport '@reach/tooltip/styles.css'\n\nimport { BorderlessInput } from '../../theme'\nimport { useTokenContract } from '../../hooks'\nimport { isAddress, calculateGasMargin } from '../../utils'\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport Modal from '../Modal'\nimport TokenLogo from '../TokenLogo'\nimport SearchIcon from '../../assets/images/magnifying-glass.svg'\nimport { useTransactionAdder, usePendingApproval } from '../../contexts/Transactions'\nimport { useTokenDetails, useAllTokenDetails } from '../../contexts/Tokens'\n\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst SubCurrencySelect = styled.button`\n  ${({ theme }) => theme.flexRowNoWrap}\n  background: ${({ theme }) => theme.zumthorBlue};\n  border: 1px solid ${({ theme }) => theme.royalBlue};\n  color: ${({ theme }) => theme.royalBlue};\n  line-height: 0;\n  height: 2rem;\n  padding: 10px 50px 10px 15px;\n  margin-right: -40px;\n  border-radius: 2.5rem;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled(BorderlessInput)`\n  font-size: 1.5rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n`\n\nconst StyledBorderlessInput = styled(BorderlessInput)`\n  min-height: 1.75rem;\n  flex-shrink: 0;\n`\n\nconst CurrencySelect = styled.button`\n  align-items: center;\n  font-size: 1rem;\n  color: ${({ selected, theme }) => (selected ? theme.black : theme.royalBlue)};\n  height: 2rem;\n  border: 1px solid ${({ selected, theme }) => (selected ? theme.mercuryGray : theme.royalBlue)};\n  border-radius: 2.5rem;\n  background-color: ${({ selected, theme }) => (selected ? theme.concreteGray : theme.zumthorBlue)};\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n\n  :hover {\n    border: 1px solid\n      ${({ selected, theme }) => (selected ? darken(0.1, theme.mercuryGray) : darken(0.1, theme.royalBlue))};\n  }\n\n  :focus {\n    box-shadow: 0 0 0.5px 0.5px ${({ theme }) => theme.malibuBlue};\n  }\n\n  :active {\n    background-color: ${({ theme }) => theme.zumthorBlue};\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.5rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.black : theme.royalBlue)};\n  }\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => lighten(0.9, theme.royalBlue)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.white};\n  z-index: 1;\n`\n\nconst Container = styled.div`\n  border-radius: 1.25rem;\n  box-shadow: 0 0 0 0.5px ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n  background-color: ${({ theme }) => theme.white};\n  transition: box-shadow 200ms ease-in-out;\n\n  :focus-within {\n    box-shadow: 0 0 0.5px 0.5px ${({ theme }) => theme.malibuBlue};\n  }\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.doveGray)};\n  }\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst ErrorSpan = styled.span`\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  :hover {\n    cursor: pointer;\n    color: ${({ error, theme }) => error && darken(0.1, theme.salmonRed)};\n  }\n`\n\nconst TokenModal = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  background-color: ${({ theme }) => theme.white};\n  width: 100%;\n`\n\nconst SearchContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  padding: 1rem;\n  border-bottom: 1px solid ${({ theme }) => theme.mercuryGray};\n`\n\nconst TokenModalInfo = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  user-select: none;\n`\n\nconst TokenList = styled.div`\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: auto;\n`\n\nconst TokenModalRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: space-between;\n  cursor: pointer;\n  user-select: none;\n\n  #symbol {\n    color: ${({ theme }) => theme.doveGrey};\n  }\n\n  :hover {\n    background-color: ${({ theme }) => theme.concreteGray};\n  }\n`\n\nconst StyledTokenName = styled.span`\n  margin: 0 0.25rem 0 0.25rem;\n`\n\nexport default function CurrencyInputPanel({\n  onValueChange = () => {},\n  renderInput,\n  onCurrencySelected = () => {},\n  title,\n  description,\n  extraText,\n  extraTextClickHander = () => {},\n  errorMessage,\n  disableUnlock,\n  disableTokenSelect,\n  selectedTokenAddress = '',\n  showUnlock,\n  value\n}) {\n  const { t } = useTranslation()\n\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const tokenContract = useTokenContract(selectedTokenAddress)\n  const { exchangeAddress: selectedTokenExchangeAddress } = useTokenDetails(selectedTokenAddress)\n\n  const pendingApproval = usePendingApproval(selectedTokenAddress)\n\n  const addTransaction = useTransactionAdder()\n\n  const allTokens = useAllTokenDetails()\n\n  function renderUnlockButton() {\n    if (disableUnlock || !showUnlock || selectedTokenAddress === 'ETH' || !selectedTokenAddress) {\n      return null\n    } else {\n      if (!pendingApproval) {\n        return (\n          <SubCurrencySelect\n            onClick={async () => {\n              const estimatedGas = await tokenContract.estimate.approve(\n                selectedTokenExchangeAddress,\n                ethers.constants.MaxUint256\n              )\n\n              tokenContract\n                .approve(selectedTokenExchangeAddress, ethers.constants.MaxUint256, {\n                  gasLimit: calculateGasMargin(estimatedGas, GAS_MARGIN)\n                })\n                .then(response => {\n                  addTransaction(response, { approval: selectedTokenAddress })\n                })\n            }}\n          >\n            {t('unlock')}\n          </SubCurrencySelect>\n        )\n      } else {\n        return <SubCurrencySelect>{t('pending')}</SubCurrencySelect>\n      }\n    }\n  }\n\n  function _renderInput() {\n    if (typeof renderInput === 'function') {\n      return renderInput()\n    }\n\n    return (\n      <InputRow>\n        <Input\n          type=\"number\"\n          min=\"0\"\n          error={!!errorMessage}\n          placeholder=\"0.0\"\n          onChange={e => onValueChange(e.target.value)}\n          onKeyPress={e => {\n            const charCode = e.which ? e.which : e.keyCode\n\n            // Prevent 'minus' character\n            if (charCode === 45) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n          }}\n          value={value}\n        />\n        {renderUnlockButton()}\n        <CurrencySelect\n          selected={!!selectedTokenAddress}\n          onClick={() => {\n            if (!disableTokenSelect) {\n              setModalIsOpen(true)\n            }\n          }}\n        >\n          <Aligner>\n            {selectedTokenAddress ? <TokenLogo address={selectedTokenAddress} /> : null}\n            {\n              <StyledTokenName>\n                {(allTokens[selectedTokenAddress] && allTokens[selectedTokenAddress].symbol) || t('selectToken')}\n              </StyledTokenName>\n            }\n            {!disableTokenSelect && <StyledDropDown selected={!!selectedTokenAddress} />}\n          </Aligner>\n        </CurrencySelect>\n      </InputRow>\n    )\n  }\n\n  return (\n    <InputPanel>\n      <Container error={!!errorMessage}>\n        <LabelRow>\n          <LabelContainer>\n            <span>{title}</span> <span>{description}</span>\n          </LabelContainer>\n\n          <ErrorSpan\n            data-tip={'Enter max'}\n            error={!!errorMessage}\n            onClick={() => {\n              extraTextClickHander()\n            }}\n          >\n            <Tooltip\n              label=\"Enter Max\"\n              style={{\n                background: 'hsla(0, 0%, 0%, 0.75)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '24px',\n                padding: '0.5em 1em',\n                marginTop: '-64px'\n              }}\n            >\n              <span>{extraText}</span>\n            </Tooltip>\n          </ErrorSpan>\n        </LabelRow>\n        {_renderInput()}\n      </Container>\n      {!disableTokenSelect && (\n        <CurrencySelectModal\n          isOpen={modalIsOpen}\n          onDismiss={() => {\n            setModalIsOpen(false)\n          }}\n          onTokenSelect={onCurrencySelected}\n        />\n      )}\n    </InputPanel>\n  )\n}\n\nfunction CurrencySelectModal({ isOpen, onDismiss, onTokenSelect }) {\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const { exchangeAddress } = useTokenDetails(searchQuery)\n\n  const allTokens = useAllTokenDetails()\n  const tokenList = useMemo(() => {\n    return Object.keys(allTokens)\n      .sort((a, b) => {\n        const aSymbol = allTokens[a].symbol.toLowerCase()\n        const bSymbol = allTokens[b].symbol.toLowerCase()\n        if (aSymbol === 'ETH'.toLowerCase() || bSymbol === 'ETH'.toLowerCase()) {\n          return aSymbol === bSymbol ? 0 : aSymbol === 'ETH'.toLowerCase() ? -1 : 1\n        } else {\n          return aSymbol < bSymbol ? -1 : aSymbol > bSymbol ? 1 : 0\n        }\n      })\n      .map(k => {\n        return {\n          name: allTokens[k].name,\n          symbol: allTokens[k].symbol,\n          address: k\n        }\n      })\n  }, [allTokens])\n  const filteredTokenList = useMemo(() => {\n    return tokenList.filter(tokenEntry => {\n      // check the regex for each field\n      const regexMatches = Object.keys(tokenEntry).map(tokenEntryKey => {\n        return (\n          tokenEntry[tokenEntryKey] &&\n          !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'))\n        )\n      })\n\n      return regexMatches.some(m => m)\n    })\n  }, [tokenList, searchQuery])\n\n  function _onTokenSelect(address) {\n    setSearchQuery('')\n    onTokenSelect(address)\n    onDismiss()\n  }\n\n  function renderTokenList() {\n    if (isAddress(searchQuery) && exchangeAddress === undefined) {\n      return <TokenModalInfo>Searching for Exchange...</TokenModalInfo>\n    }\n\n    if (isAddress(searchQuery) && exchangeAddress === ethers.constants.AddressZero) {\n      return (\n        <>\n          <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\n          <TokenModalInfo>\n            <Link to={`/create-exchange/${searchQuery}`}>{t('createExchange')}</Link>\n          </TokenModalInfo>\n        </>\n      )\n    }\n\n    if (!filteredTokenList.length) {\n      return <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\n    }\n\n    return filteredTokenList.map(({ address, symbol }) => {\n      return (\n        <TokenModalRow key={address} onClick={() => _onTokenSelect(address)}>\n          <TokenLogo address={address} />\n          <span id=\"symbol\">{symbol}</span>\n        </TokenModalRow>\n      )\n    })\n  }\n\n  // manage focus on modal show\n  const inputRef = useRef()\n\n  function onInput(event) {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} initialFocusRef={inputRef}>\n      <TokenModal>\n        <SearchContainer>\n          <StyledBorderlessInput ref={inputRef} type=\"text\" placeholder={t('searchOrPaste')} onChange={onInput} />\n          <img src={SearchIcon} alt=\"search\" />\n        </SearchContainer>\n        <TokenList>{renderTokenList()}</TokenList>\n      </TokenModal>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}