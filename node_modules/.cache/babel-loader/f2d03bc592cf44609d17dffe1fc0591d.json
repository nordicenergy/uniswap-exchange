{"ast":null,"code":"import _slicedToArray from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  font-size: \",\";\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: \",\";\\n  border-radius: 1rem;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import styled from'styled-components';import{ReactComponent as EthereumLogo}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/ethereum-logo.svg\";var TOKEN_ICON_API='https://raw.githubusercontent.com/TrustWallet/tokens/master/tokens';var BAD_IMAGES={};var Image=styled.img(_templateObject(),function(_ref){var size=_ref.size;return size;},function(_ref2){var size=_ref2.size;return size;});var Emoji=styled.span(_templateObject2(),function(_ref3){var size=_ref3.size;return size;},function(_ref4){var size=_ref4.size;return size;});var StyledEthereumLogo=styled(EthereumLogo)(_templateObject3(),function(_ref5){var size=_ref5.size;return size;},function(_ref6){var size=_ref6.size;return size;});export default function TokenLogo(_ref7){var address=_ref7.address,_ref7$size=_ref7.size,size=_ref7$size===void 0?'1rem':_ref7$size,rest=_objectWithoutProperties(_ref7,[\"address\",\"size\"]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var path='';if(address==='ETH'){return React.createElement(StyledEthereumLogo,{size:size});}else if(!error&&!BAD_IMAGES[address]){path=\"\".concat(TOKEN_ICON_API,\"/\").concat(address.toLowerCase(),\".png\");}else{return React.createElement(Emoji,rest,React.createElement(\"span\",{role:\"img\",\"aria-label\":\"Thinking\"},\"\\uD83E\\uDD14\"));}return React.createElement(Image,Object.assign({},rest,{alt:address,src:path,size:size,onError:function onError(){BAD_IMAGES[address]=true;setError(true);}}));}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/components/TokenLogo/index.js"],"names":["React","useState","styled","TOKEN_ICON_API","BAD_IMAGES","Image","img","size","Emoji","span","StyledEthereumLogo","EthereumLogo","TokenLogo","address","rest","error","setError","path","toLowerCase"],"mappings":"u4BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,sHAIA,GAAMC,CAAAA,cAAc,CAAG,oEAAvB,CACA,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAGH,MAAM,CAACI,GAAV,mBACA,kBAAGC,CAAAA,IAAH,MAAGA,IAAH,OAAcA,CAAAA,IAAd,EADA,CAEC,mBAAGA,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAFD,CAAX,CAMA,GAAMC,CAAAA,KAAK,CAAGN,MAAM,CAACO,IAAV,oBACA,mBAAGF,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EADA,CAEI,mBAAGA,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAFJ,CAAX,CAKA,GAAMG,CAAAA,kBAAkB,CAAGR,MAAM,CAACS,YAAD,CAAT,oBACb,mBAAGJ,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EADa,CAEZ,mBAAGA,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAFY,CAAxB,CAKA,cAAe,SAASK,CAAAA,SAAT,OAAwD,IAAnCC,CAAAA,OAAmC,OAAnCA,OAAmC,kBAA1BN,IAA0B,CAA1BA,IAA0B,qBAAnB,MAAmB,YAARO,IAAQ,kEAC3Cb,QAAQ,CAAC,KAAD,CADmC,wCAC9Dc,KAD8D,eACvDC,QADuD,eAGrE,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIJ,OAAO,GAAK,KAAhB,CAAuB,CACrB,MAAO,qBAAC,kBAAD,EAAoB,IAAI,CAAEN,IAA1B,EAAP,CACD,CAFD,IAEO,IAAI,CAACQ,KAAD,EAAU,CAACX,UAAU,CAACS,OAAD,CAAzB,CAAoC,CACzCI,IAAI,WAAMd,cAAN,aAAwBU,OAAO,CAACK,WAAR,EAAxB,QAAJ,CACD,CAFM,IAEA,CACL,MACE,qBAAC,KAAD,CAAWJ,IAAX,CACE,4BAAM,IAAI,CAAC,KAAX,CAAiB,aAAW,UAA5B,iBADF,CADF,CAOD,CAED,MACE,qBAAC,KAAD,kBACMA,IADN,EAEE,GAAG,CAAED,OAFP,CAGE,GAAG,CAAEI,IAHP,CAIE,IAAI,CAAEV,IAJR,CAKE,OAAO,CAAE,kBAAM,CACbH,UAAU,CAACS,OAAD,CAAV,CAAsB,IAAtB,CACAG,QAAQ,CAAC,IAAD,CAAR,CACD,CARH,GADF,CAYD","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { ReactComponent as EthereumLogo } from '../../assets/images/ethereum-logo.svg'\n\nconst TOKEN_ICON_API = 'https://raw.githubusercontent.com/TrustWallet/tokens/master/tokens'\nconst BAD_IMAGES = {}\n\nconst Image = styled.img`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: 1rem;\n`\n\nconst Emoji = styled.span`\n  width: ${({ size }) => size};\n  font-size: ${({ size }) => size};\n`\n\nconst StyledEthereumLogo = styled(EthereumLogo)`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function TokenLogo({ address, size = '1rem', ...rest }) {\n  const [error, setError] = useState(false)\n\n  let path = ''\n  if (address === 'ETH') {\n    return <StyledEthereumLogo size={size} />\n  } else if (!error && !BAD_IMAGES[address]) {\n    path = `${TOKEN_ICON_API}/${address.toLowerCase()}.png`\n  } else {\n    return (\n      <Emoji {...rest}>\n        <span role=\"img\" aria-label=\"Thinking\">\n          ðŸ¤”\n        </span>\n      </Emoji>\n    )\n  }\n\n  return (\n    <Image\n      {...rest}\n      alt={address}\n      src={path}\n      size={size}\n      onError={() => {\n        BAD_IMAGES[address] = true\n        setError(true)\n      }}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}