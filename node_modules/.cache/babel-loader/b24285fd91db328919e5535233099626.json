{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{ethers}from'ethers';import FACTORY_ABI from'../constants/abis/factory';import EXCHANGE_ABI from'../constants/abis/exchange';import ERC20_ABI from'../constants/abis/erc20';import ERC20_BYTES32_ABI from'../constants/abis/erc20_bytes32';import{FACTORY_ADDRESSES}from'../constants';import UncheckedJsonRpcSigner from'./signer';export var ERROR_CODES=['TOKEN_NAME','TOKEN_SYMBOL','TOKEN_DECIMALS'].reduce(function(accumulator,currentValue,currentIndex){accumulator[currentValue]=currentIndex;return accumulator;},{});export function safeAccess(object,path){return object?path.reduce(function(accumulator,currentValue){return accumulator&&accumulator[currentValue]?accumulator[currentValue]:null;},object):null;}var ETHERSCAN_PREFIXES={1:'',3:'ropsten.',4:'rinkeby.',5:'goerli.',42:'kovan.'};export function getEtherscanLink(networkId,data,type){var prefix=\"https://\".concat(ETHERSCAN_PREFIXES[networkId]||ETHERSCAN_PREFIXES[1],\"etherscan.io\");switch(type){case'transaction':{return\"\".concat(prefix,\"/tx/\").concat(data);}case'address':default:{return\"\".concat(prefix,\"/address/\").concat(data);}}}export function getNetworkName(networkId){switch(networkId){case 1:{return'the Main Ethereum Network';}case 3:{return'the Ropsten Test Network';}case 4:{return'the Rinkeby Test Network';}case 5:{return'the GÃ¶rli Test Network';}case 42:{return'the Kovan Test Network';}default:{return'the correct network';}}}export function shortenAddress(address){var digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;if(!isAddress(address)){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return\"\".concat(address.substring(0,digits+2),\"...\").concat(address.substring(42-digits));}export function shortenTransactionHash(hash){var digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"\".concat(hash.substring(0,digits+2),\"...\").concat(hash.substring(66-digits));}export function isAddress(value){try{return ethers.utils.getAddress(value.toLowerCase());}catch(_unused){return false;}}export function calculateGasMargin(value,margin){var offset=value.mul(margin).div(ethers.utils.bigNumberify(10000));return value.add(offset);}// account is optional\nexport function getProviderOrSigner(library,account){return account?new UncheckedJsonRpcSigner(library.getSigner(account)):library;}// account is optional\nexport function getContract(address,ABI,library,account){if(!isAddress(address)||address===ethers.constants.AddressZero){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return new ethers.Contract(address,ABI,getProviderOrSigner(library,account));}// account is optional\nexport function getFactoryContract(networkId,library,account){return getContract(FACTORY_ADDRESSES[networkId],FACTORY_ABI,library,account);}// account is optional\nexport function getExchangeContract(exchangeAddress,library,account){return getContract(exchangeAddress,EXCHANGE_ABI,library,account);}// get token name\nexport function getTokenName(_x,_x2){return _getTokenName.apply(this,arguments);}// get token symbol\nfunction _getTokenName(){_getTokenName=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenAddress,library){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isAddress(tokenAddress)){_context.next=2;break;}throw Error(\"Invalid 'tokenAddress' parameter '\".concat(tokenAddress,\"'.\"));case 2:return _context.abrupt(\"return\",getContract(tokenAddress,ERC20_ABI,library).name().catch(function(){return getContract(tokenAddress,ERC20_BYTES32_ABI,library).name().then(function(bytes32){return ethers.utils.parseBytes32String(bytes32);});}).catch(function(error){error.code=ERROR_CODES.TOKEN_SYMBOL;throw error;}));case 3:case\"end\":return _context.stop();}}},_callee);}));return _getTokenName.apply(this,arguments);}export function getTokenSymbol(_x3,_x4){return _getTokenSymbol.apply(this,arguments);}// get token decimals\nfunction _getTokenSymbol(){_getTokenSymbol=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenAddress,library){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(isAddress(tokenAddress)){_context2.next=2;break;}throw Error(\"Invalid 'tokenAddress' parameter '\".concat(tokenAddress,\"'.\"));case 2:return _context2.abrupt(\"return\",getContract(tokenAddress,ERC20_ABI,library).symbol().catch(function(){var contractBytes32=getContract(tokenAddress,ERC20_BYTES32_ABI,library);return contractBytes32.symbol().then(function(bytes32){return ethers.utils.parseBytes32String(bytes32);});}).catch(function(error){error.code=ERROR_CODES.TOKEN_SYMBOL;throw error;}));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _getTokenSymbol.apply(this,arguments);}export function getTokenDecimals(_x5,_x6){return _getTokenDecimals.apply(this,arguments);}// get the exchange address for a token from the factory\nfunction _getTokenDecimals(){_getTokenDecimals=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tokenAddress,library){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(isAddress(tokenAddress)){_context3.next=2;break;}throw Error(\"Invalid 'tokenAddress' parameter '\".concat(tokenAddress,\"'.\"));case 2:return _context3.abrupt(\"return\",getContract(tokenAddress,ERC20_ABI,library).decimals().catch(function(error){error.code=ERROR_CODES.TOKEN_DECIMALS;throw error;}));case 3:case\"end\":return _context3.stop();}}},_callee3);}));return _getTokenDecimals.apply(this,arguments);}export function getTokenExchangeAddressFromFactory(_x7,_x8,_x9){return _getTokenExchangeAddressFromFactory.apply(this,arguments);}// get the ether balance of an address\nfunction _getTokenExchangeAddressFromFactory(){_getTokenExchangeAddressFromFactory=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tokenAddress,networkId,library){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",getFactoryContract(networkId,library).getExchange(tokenAddress));case 1:case\"end\":return _context4.stop();}}},_callee4);}));return _getTokenExchangeAddressFromFactory.apply(this,arguments);}export function getEtherBalance(_x10,_x11){return _getEtherBalance.apply(this,arguments);}// get the token balance of an address\nfunction _getEtherBalance(){_getEtherBalance=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(address,library){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(isAddress(address)){_context5.next=2;break;}throw Error(\"Invalid 'address' parameter '\".concat(address,\"'\"));case 2:return _context5.abrupt(\"return\",library.getBalance(address));case 3:case\"end\":return _context5.stop();}}},_callee5);}));return _getEtherBalance.apply(this,arguments);}export function getTokenBalance(_x12,_x13,_x14){return _getTokenBalance.apply(this,arguments);}// get the token allowance\nfunction _getTokenBalance(){_getTokenBalance=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(tokenAddress,address,library){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(!isAddress(tokenAddress)||!isAddress(address))){_context6.next=2;break;}throw Error(\"Invalid 'tokenAddress' or 'address' parameter '\".concat(tokenAddress,\"' or '\").concat(address,\"'.\"));case 2:return _context6.abrupt(\"return\",getContract(tokenAddress,ERC20_ABI,library).balanceOf(address));case 3:case\"end\":return _context6.stop();}}},_callee6);}));return _getTokenBalance.apply(this,arguments);}export function getTokenAllowance(_x15,_x16,_x17,_x18){return _getTokenAllowance.apply(this,arguments);}// amount must be a BigNumber, {base,display}Decimals must be Numbers\nfunction _getTokenAllowance(){_getTokenAllowance=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(address,tokenAddress,spenderAddress,library){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!(!isAddress(address)||!isAddress(tokenAddress)||!isAddress(spenderAddress))){_context7.next=2;break;}throw Error(\"Invalid 'address' or 'tokenAddress' or 'spenderAddress' parameter\"+\"'\".concat(address,\"' or '\").concat(tokenAddress,\"' or '\").concat(spenderAddress,\"'.\"));case 2:return _context7.abrupt(\"return\",getContract(tokenAddress,ERC20_ABI,library).allowance(address,spenderAddress));case 3:case\"end\":return _context7.stop();}}},_callee7);}));return _getTokenAllowance.apply(this,arguments);}export function amountFormatter(amount){var baseDecimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;var displayDecimals=arguments.length>2&&arguments[2]!==undefined?arguments[2]:3;var useLessThan=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;if(baseDecimals>18||displayDecimals>18||displayDecimals>baseDecimals){throw Error(\"Invalid combination of baseDecimals '\".concat(baseDecimals,\"' and displayDecimals '\").concat(displayDecimals,\".\"));}// if balance is falsy, return undefined\nif(!amount){return undefined;}// if amount is 0, return\nelse if(amount.isZero()){return'0';}// amount > 0\nelse{// amount of 'wei' in 1 'ether'\nvar baseAmount=ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(baseDecimals));var minimumDisplayAmount=baseAmount.div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(displayDecimals)));// if balance is less than the minimum display amount\nif(amount.lt(minimumDisplayAmount)){return useLessThan?\"<\".concat(ethers.utils.formatUnits(minimumDisplayAmount,baseDecimals)):\"\".concat(ethers.utils.formatUnits(amount,baseDecimals));}// if the balance is greater than the minimum display amount\nelse{var stringAmount=ethers.utils.formatUnits(amount,baseDecimals);// if there isn't a decimal portion\nif(!stringAmount.match(/\\./)){return stringAmount;}// if there is a decimal portion\nelse{var _stringAmount$split=stringAmount.split('.'),_stringAmount$split2=_slicedToArray(_stringAmount$split,2),wholeComponent=_stringAmount$split2[0],decimalComponent=_stringAmount$split2[1];var roundUpAmount=minimumDisplayAmount.div(ethers.constants.Two);var roundedDecimalComponent=ethers.utils.bigNumberify(decimalComponent.padEnd(baseDecimals,'0')).add(roundUpAmount).toString().padStart(baseDecimals,'0').substring(0,displayDecimals);// decimals are too small to show\nif(roundedDecimalComponent==='0'.repeat(displayDecimals)){return wholeComponent;}// decimals are not too small to show\nelse{return\"\".concat(wholeComponent,\".\").concat(roundedDecimalComponent.toString().replace(/0*$/,''));}}}}}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/utils/index.js"],"names":["ethers","FACTORY_ABI","EXCHANGE_ABI","ERC20_ABI","ERC20_BYTES32_ABI","FACTORY_ADDRESSES","UncheckedJsonRpcSigner","ERROR_CODES","reduce","accumulator","currentValue","currentIndex","safeAccess","object","path","ETHERSCAN_PREFIXES","getEtherscanLink","networkId","data","type","prefix","getNetworkName","shortenAddress","address","digits","isAddress","Error","substring","shortenTransactionHash","hash","value","utils","getAddress","toLowerCase","calculateGasMargin","margin","offset","mul","div","bigNumberify","add","getProviderOrSigner","library","account","getSigner","getContract","ABI","constants","AddressZero","Contract","getFactoryContract","getExchangeContract","exchangeAddress","getTokenName","tokenAddress","name","catch","then","bytes32","parseBytes32String","error","code","TOKEN_SYMBOL","getTokenSymbol","symbol","contractBytes32","getTokenDecimals","decimals","TOKEN_DECIMALS","getTokenExchangeAddressFromFactory","getExchange","getEtherBalance","getBalance","getTokenBalance","balanceOf","getTokenAllowance","spenderAddress","allowance","amountFormatter","amount","baseDecimals","displayDecimals","useLessThan","undefined","isZero","baseAmount","pow","minimumDisplayAmount","lt","formatUnits","stringAmount","match","split","wholeComponent","decimalComponent","roundUpAmount","Two","roundedDecimalComponent","padEnd","toString","padStart","repeat","replace"],"mappings":"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","sourcesContent":["import { ethers } from 'ethers'\n\nimport FACTORY_ABI from '../constants/abis/factory'\nimport EXCHANGE_ABI from '../constants/abis/exchange'\nimport ERC20_ABI from '../constants/abis/erc20'\nimport ERC20_BYTES32_ABI from '../constants/abis/erc20_bytes32'\nimport { FACTORY_ADDRESSES } from '../constants'\n\nimport UncheckedJsonRpcSigner from './signer'\n\nexport const ERROR_CODES = ['TOKEN_NAME', 'TOKEN_SYMBOL', 'TOKEN_DECIMALS'].reduce(\n  (accumulator, currentValue, currentIndex) => {\n    accumulator[currentValue] = currentIndex\n    return accumulator\n  },\n  {}\n)\n\nexport function safeAccess(object, path) {\n  return object\n    ? path.reduce(\n        (accumulator, currentValue) => (accumulator && accumulator[currentValue] ? accumulator[currentValue] : null),\n        object\n      )\n    : null\n}\n\nconst ETHERSCAN_PREFIXES = {\n  1: '',\n  3: 'ropsten.',\n  4: 'rinkeby.',\n  5: 'goerli.',\n  42: 'kovan.'\n}\nexport function getEtherscanLink(networkId, data, type) {\n  const prefix = `https://${ETHERSCAN_PREFIXES[networkId] || ETHERSCAN_PREFIXES[1]}etherscan.io`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\nexport function getNetworkName(networkId) {\n  switch (networkId) {\n    case 1: {\n      return 'the Main Ethereum Network'\n    }\n    case 3: {\n      return 'the Ropsten Test Network'\n    }\n    case 4: {\n      return 'the Rinkeby Test Network'\n    }\n    case 5: {\n      return 'the GÃ¶rli Test Network'\n    }\n    case 42: {\n      return 'the Kovan Test Network'\n    }\n    default: {\n      return 'the correct network'\n    }\n  }\n}\n\nexport function shortenAddress(address, digits = 4) {\n  if (!isAddress(address)) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${address.substring(0, digits + 2)}...${address.substring(42 - digits)}`\n}\n\nexport function shortenTransactionHash(hash, digits = 4) {\n  return `${hash.substring(0, digits + 2)}...${hash.substring(66 - digits)}`\n}\n\nexport function isAddress(value) {\n  try {\n    return ethers.utils.getAddress(value.toLowerCase())\n  } catch {\n    return false\n  }\n}\n\nexport function calculateGasMargin(value, margin) {\n  const offset = value.mul(margin).div(ethers.utils.bigNumberify(10000))\n  return value.add(offset)\n}\n\n// account is optional\nexport function getProviderOrSigner(library, account) {\n  return account ? new UncheckedJsonRpcSigner(library.getSigner(account)) : library\n}\n\n// account is optional\nexport function getContract(address, ABI, library, account) {\n  if (!isAddress(address) || address === ethers.constants.AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new ethers.Contract(address, ABI, getProviderOrSigner(library, account))\n}\n\n// account is optional\nexport function getFactoryContract(networkId, library, account) {\n  return getContract(FACTORY_ADDRESSES[networkId], FACTORY_ABI, library, account)\n}\n\n// account is optional\nexport function getExchangeContract(exchangeAddress, library, account) {\n  return getContract(exchangeAddress, EXCHANGE_ABI, library, account)\n}\n\n// get token name\nexport async function getTokenName(tokenAddress, library) {\n  if (!isAddress(tokenAddress)) {\n    throw Error(`Invalid 'tokenAddress' parameter '${tokenAddress}'.`)\n  }\n\n  return getContract(tokenAddress, ERC20_ABI, library)\n    .name()\n    .catch(() =>\n      getContract(tokenAddress, ERC20_BYTES32_ABI, library)\n        .name()\n        .then(bytes32 => ethers.utils.parseBytes32String(bytes32))\n    )\n    .catch(error => {\n      error.code = ERROR_CODES.TOKEN_SYMBOL\n      throw error\n    })\n}\n\n// get token symbol\nexport async function getTokenSymbol(tokenAddress, library) {\n  if (!isAddress(tokenAddress)) {\n    throw Error(`Invalid 'tokenAddress' parameter '${tokenAddress}'.`)\n  }\n\n  return getContract(tokenAddress, ERC20_ABI, library)\n    .symbol()\n    .catch(() => {\n      const contractBytes32 = getContract(tokenAddress, ERC20_BYTES32_ABI, library)\n      return contractBytes32.symbol().then(bytes32 => ethers.utils.parseBytes32String(bytes32))\n    })\n    .catch(error => {\n      error.code = ERROR_CODES.TOKEN_SYMBOL\n      throw error\n    })\n}\n\n// get token decimals\nexport async function getTokenDecimals(tokenAddress, library) {\n  if (!isAddress(tokenAddress)) {\n    throw Error(`Invalid 'tokenAddress' parameter '${tokenAddress}'.`)\n  }\n\n  return getContract(tokenAddress, ERC20_ABI, library)\n    .decimals()\n    .catch(error => {\n      error.code = ERROR_CODES.TOKEN_DECIMALS\n      throw error\n    })\n}\n\n// get the exchange address for a token from the factory\nexport async function getTokenExchangeAddressFromFactory(tokenAddress, networkId, library) {\n  return getFactoryContract(networkId, library).getExchange(tokenAddress)\n}\n\n// get the ether balance of an address\nexport async function getEtherBalance(address, library) {\n  if (!isAddress(address)) {\n    throw Error(`Invalid 'address' parameter '${address}'`)\n  }\n\n  return library.getBalance(address)\n}\n\n// get the token balance of an address\nexport async function getTokenBalance(tokenAddress, address, library) {\n  if (!isAddress(tokenAddress) || !isAddress(address)) {\n    throw Error(`Invalid 'tokenAddress' or 'address' parameter '${tokenAddress}' or '${address}'.`)\n  }\n\n  return getContract(tokenAddress, ERC20_ABI, library).balanceOf(address)\n}\n\n// get the token allowance\nexport async function getTokenAllowance(address, tokenAddress, spenderAddress, library) {\n  if (!isAddress(address) || !isAddress(tokenAddress) || !isAddress(spenderAddress)) {\n    throw Error(\n      \"Invalid 'address' or 'tokenAddress' or 'spenderAddress' parameter\" +\n        `'${address}' or '${tokenAddress}' or '${spenderAddress}'.`\n    )\n  }\n\n  return getContract(tokenAddress, ERC20_ABI, library).allowance(address, spenderAddress)\n}\n\n// amount must be a BigNumber, {base,display}Decimals must be Numbers\nexport function amountFormatter(amount, baseDecimals = 18, displayDecimals = 3, useLessThan = true) {\n  if (baseDecimals > 18 || displayDecimals > 18 || displayDecimals > baseDecimals) {\n    throw Error(`Invalid combination of baseDecimals '${baseDecimals}' and displayDecimals '${displayDecimals}.`)\n  }\n\n  // if balance is falsy, return undefined\n  if (!amount) {\n    return undefined\n  }\n  // if amount is 0, return\n  else if (amount.isZero()) {\n    return '0'\n  }\n  // amount > 0\n  else {\n    // amount of 'wei' in 1 'ether'\n    const baseAmount = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(baseDecimals))\n\n    const minimumDisplayAmount = baseAmount.div(\n      ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(displayDecimals))\n    )\n\n    // if balance is less than the minimum display amount\n    if (amount.lt(minimumDisplayAmount)) {\n      return useLessThan\n        ? `<${ethers.utils.formatUnits(minimumDisplayAmount, baseDecimals)}`\n        : `${ethers.utils.formatUnits(amount, baseDecimals)}`\n    }\n    // if the balance is greater than the minimum display amount\n    else {\n      const stringAmount = ethers.utils.formatUnits(amount, baseDecimals)\n\n      // if there isn't a decimal portion\n      if (!stringAmount.match(/\\./)) {\n        return stringAmount\n      }\n      // if there is a decimal portion\n      else {\n        const [wholeComponent, decimalComponent] = stringAmount.split('.')\n        const roundUpAmount = minimumDisplayAmount.div(ethers.constants.Two)\n        const roundedDecimalComponent = ethers.utils\n          .bigNumberify(decimalComponent.padEnd(baseDecimals, '0'))\n          .add(roundUpAmount)\n          .toString()\n          .padStart(baseDecimals, '0')\n          .substring(0, displayDecimals)\n\n        // decimals are too small to show\n        if (roundedDecimalComponent === '0'.repeat(displayDecimals)) {\n          return wholeComponent\n        }\n        // decimals are not too small to show\n        else {\n          return `${wholeComponent}.${roundedDecimalComponent.toString().replace(/0*$/, '')}`\n        }\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}