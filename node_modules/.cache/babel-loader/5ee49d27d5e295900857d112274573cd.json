{"ast":null,"code":"var t = [\"width\", \"height\", \"top\", \"right\", \"bottom\", \"left\"],\n    n = function n(_n, e) {\n  return void 0 === _n && (_n = {}), void 0 === e && (e = {}), t.some(function (t) {\n    return _n[t] !== e[t];\n  });\n};\n\nexport default function (t, e) {\n  var o,\n      i,\n      r = function r() {\n    var u = t.getBoundingClientRect();\n    n(u, o) && e(o = u), i = requestAnimationFrame(r);\n  };\n\n  return {\n    observe: r,\n    unobserve: function unobserve() {\n      cancelAnimationFrame(i);\n    }\n  };\n}\n;","map":{"version":3,"sources":["../src/index.js"],"names":["let","props","rectChanged","a","b","some","prop","node","cb","rect","rafId","observe","newRect","getBoundingClientRect","requestAnimationFrame","cancelAnimationFrame"],"mappings":"AAAAA,IAAIC,CAAAA,GAAAA,CAAS,OAATA,EAAkB,QAAlBA,EAA4B,KAA5BA,EAAmC,OAAnCA,EAA4C,QAA5CA,EAAsD,MAAtDA,CAAJD;AAAAA,IAEIE,CAAAA,GAAAA,WAAeC,EAAfD,EAAuBE,CAAvBF,EAAuBE;AAAAA,SAAAA,KAAAA,CAAAA,KAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAWH,CAAAA,CAAMI,IAANJ,CAAMI,UAAKC,CAALD,EAAKC;AAAAA,WAAQH,EAAAA,CAAEG,CAAFH,CAAAA,KAAYC,CAAAA,CAAEE,CAAFF,CAApBE;AAAsBA,GAAjCL,CAAXG;AAA4CE,CAFvEN;;AAEuEM,eAEvE,UAAgBC,CAAhB,EAAsBC,CAAtB,EAAsBA;AACpBR,MAAIS,CAAJT;AAAAA,MACIU,CADJV;AAAAA,MAGIW,CAAAA,GAAAA,SAAAA,CAAAA,GAAAA;AACFX,QAAIY,CAAAA,GAAUL,CAAAA,CAAKM,qBAALN,EAAdP;AACIE,IAAAA,CAAAA,CAAYU,CAAZV,EAAqBO,CAArBP,CAAAA,IAEFM,CAAAA,CADAC,CAAAA,GAAOG,CACPJ,CAFEN,EAIJQ,CAAAA,GAAQI,qBAAAA,CAAsBH,CAAtBG,CAJJZ;AAI0BS,GAThCX;;AAgBA,SAAA;AAAA,IAAA,OAAA,EAASW,CAAT;AAASA,IAAAA,SAAAA,EAAAA,qBAAAA;AAHPI,MAAAA,oBAAAA,CAAqBL,CAArBK,CAAAA;AAAqBL;AAGvB,GAAA;AAHuBA;AAAAA","sourcesContent":["let props = [\"width\", \"height\", \"top\", \"right\", \"bottom\", \"left\"];\n\nlet rectChanged = (a = {}, b = {}) => props.some(prop => a[prop] !== b[prop]);\n\nexport default (node, cb) => {\n  let rect;\n  let rafId;\n\n  let observe = () => {\n    let newRect = node.getBoundingClientRect();\n    if (rectChanged(newRect, rect)) {\n      rect = newRect;\n      cb(rect);\n    }\n    rafId = requestAnimationFrame(observe);\n  };\n\n  let unobserve = () => {\n    cancelAnimationFrame(rafId);\n  };\n\n  return { observe, unobserve };\n};\n"]},"metadata":{},"sourceType":"module"}