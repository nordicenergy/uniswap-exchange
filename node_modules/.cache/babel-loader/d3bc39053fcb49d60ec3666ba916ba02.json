{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"@0x/utils\");\n\nvar _ = require(\"lodash\");\n\nexports.utils = {\n  convertHexToNumber: function convertHexToNumber(value) {\n    var valueBigNumber = new utils_1.BigNumber(value);\n    var valueNumber = valueBigNumber.toNumber();\n    return valueNumber;\n  },\n  convertHexToNumberOrNull: function convertHexToNumberOrNull(hex) {\n    if (hex === null) {\n      return null;\n    }\n\n    var decimal = exports.utils.convertHexToNumber(hex);\n    return decimal;\n  },\n  convertAmountToBigNumber: function convertAmountToBigNumber(value) {\n    var num = value || 0;\n    var isBigNumber = utils_1.BigNumber.isBigNumber(num);\n\n    if (isBigNumber) {\n      return num;\n    }\n\n    if (_.isString(num) && (num.indexOf('0x') === 0 || num.indexOf('-0x') === 0)) {\n      return new utils_1.BigNumber(num.replace('0x', ''), 16);\n    }\n\n    var baseTen = 10;\n    return new utils_1.BigNumber(num.toString(baseTen), baseTen);\n  },\n  encodeAmountAsHexString: function encodeAmountAsHexString(value) {\n    var valueBigNumber = exports.utils.convertAmountToBigNumber(value);\n    var hexBase = 16;\n    var valueHex = valueBigNumber.toString(hexBase);\n    return valueBigNumber.isLessThan(0) ? \"-0x\" + valueHex.substr(1) : \"0x\" + valueHex;\n  },\n  numberToHex: function numberToHex(value) {\n    if (!isFinite(value) && !exports.utils.isHexStrict(value)) {\n      throw new Error(\"Given input \" + value + \" is not a number.\");\n    }\n\n    var valueBigNumber = new utils_1.BigNumber(value);\n    var hexBase = 16;\n    var result = valueBigNumber.toString(hexBase);\n    return valueBigNumber.lt(0) ? \"-0x\" + result.substr(1) : \"0x\" + result;\n  },\n  isHexStrict: function isHexStrict(hex) {\n    return (_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(_.isNumber(hex) ? hex.toString() : hex);\n  }\n};","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEa,OAAA,CAAA,KAAA,GAAQ;AACjB,EAAA,kBAAkB,EAAlB,4BAAmB,KAAnB,EAAgC;AAC5B,QAAM,cAAc,GAAG,IAAI,OAAA,CAAA,SAAJ,CAAc,KAAd,CAAvB;AACA,QAAM,WAAW,GAAG,cAAc,CAAC,QAAf,EAApB;AACA,WAAO,WAAP;AACH,GALgB;AAMjB,EAAA,wBAAwB,EAAxB,kCAAyB,GAAzB,EAA2C;AACvC,QAAI,GAAG,KAAK,IAAZ,EAAkB;AACd,aAAO,IAAP;AACH;;AACD,QAAM,OAAO,GAAG,OAAA,CAAA,KAAA,CAAM,kBAAN,CAAyB,GAAzB,CAAhB;AACA,WAAO,OAAP;AACH,GAZgB;AAajB,EAAA,wBAAwB,EAAxB,kCAAyB,KAAzB,EAA2D;AACvD,QAAM,GAAG,GAAG,KAAK,IAAI,CAArB;AACA,QAAM,WAAW,GAAG,OAAA,CAAA,SAAA,CAAU,WAAV,CAAsB,GAAtB,CAApB;;AACA,QAAI,WAAJ,EAAiB;AACb,aAAO,GAAP;AACH;;AAED,QAAI,CAAC,CAAC,QAAF,CAAW,GAAX,MAAoB,GAAG,CAAC,OAAJ,CAAY,IAAZ,MAAsB,CAAtB,IAA2B,GAAG,CAAC,OAAJ,CAAY,KAAZ,MAAuB,CAAtE,CAAJ,EAA8E;AAC1E,aAAO,IAAI,OAAA,CAAA,SAAJ,CAAc,GAAG,CAAC,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAd,EAAqC,EAArC,CAAP;AACH;;AAED,QAAM,OAAO,GAAG,EAAhB;AACA,WAAO,IAAI,OAAA,CAAA,SAAJ,CAAe,GAAc,CAAC,QAAf,CAAwB,OAAxB,CAAf,EAAiD,OAAjD,CAAP;AACH,GA1BgB;AA2BjB,EAAA,uBAAuB,EAAvB,iCAAwB,KAAxB,EAA0D;AACtD,QAAM,cAAc,GAAG,OAAA,CAAA,KAAA,CAAM,wBAAN,CAA+B,KAA/B,CAAvB;AACA,QAAM,OAAO,GAAG,EAAhB;AACA,QAAM,QAAQ,GAAG,cAAc,CAAC,QAAf,CAAwB,OAAxB,CAAjB;AAEA,WAAO,cAAc,CAAC,UAAf,CAA0B,CAA1B,IAA+B,QAAM,QAAQ,CAAC,MAAT,CAAgB,CAAhB,CAArC,GAA4D,OAAK,QAAxE;AACH,GAjCgB;AAkCjB,EAAA,WAAW,EAAX,qBAAY,KAAZ,EAAyB;AACrB,QAAI,CAAC,QAAQ,CAAC,KAAD,CAAT,IAAoB,CAAC,OAAA,CAAA,KAAA,CAAM,WAAN,CAAkB,KAAlB,CAAzB,EAAmD;AAC/C,YAAM,IAAI,KAAJ,CAAU,iBAAe,KAAf,GAAoB,mBAA9B,CAAN;AACH;;AAED,QAAM,cAAc,GAAG,IAAI,OAAA,CAAA,SAAJ,CAAc,KAAd,CAAvB;AACA,QAAM,OAAO,GAAG,EAAhB;AACA,QAAM,MAAM,GAAG,cAAc,CAAC,QAAf,CAAwB,OAAxB,CAAf;AAEA,WAAO,cAAc,CAAC,EAAf,CAAkB,CAAlB,IAAuB,QAAM,MAAM,CAAC,MAAP,CAAc,CAAd,CAA7B,GAAkD,OAAK,MAA9D;AACH,GA5CgB;AA6CjB,EAAA,WAAW,EAAX,qBAAY,GAAZ,EAAgC;AAC5B,WACI,CAAC,CAAC,CAAC,QAAF,CAAW,GAAX,KAAmB,CAAC,CAAC,QAAF,CAAW,GAAX,CAApB,KAAwC,qBAAqB,IAArB,CAA0B,CAAC,CAAC,QAAF,CAAW,GAAX,IAAkB,GAAG,CAAC,QAAJ,EAAlB,GAAmC,GAA7D,CAD5C;AAGH;AAjDgB,CAAR","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@0x/utils\");\nvar _ = require(\"lodash\");\nexports.utils = {\n    convertHexToNumber: function (value) {\n        var valueBigNumber = new utils_1.BigNumber(value);\n        var valueNumber = valueBigNumber.toNumber();\n        return valueNumber;\n    },\n    convertHexToNumberOrNull: function (hex) {\n        if (hex === null) {\n            return null;\n        }\n        var decimal = exports.utils.convertHexToNumber(hex);\n        return decimal;\n    },\n    convertAmountToBigNumber: function (value) {\n        var num = value || 0;\n        var isBigNumber = utils_1.BigNumber.isBigNumber(num);\n        if (isBigNumber) {\n            return num;\n        }\n        if (_.isString(num) && (num.indexOf('0x') === 0 || num.indexOf('-0x') === 0)) {\n            return new utils_1.BigNumber(num.replace('0x', ''), 16);\n        }\n        var baseTen = 10;\n        return new utils_1.BigNumber(num.toString(baseTen), baseTen);\n    },\n    encodeAmountAsHexString: function (value) {\n        var valueBigNumber = exports.utils.convertAmountToBigNumber(value);\n        var hexBase = 16;\n        var valueHex = valueBigNumber.toString(hexBase);\n        return valueBigNumber.isLessThan(0) ? \"-0x\" + valueHex.substr(1) : \"0x\" + valueHex;\n    },\n    numberToHex: function (value) {\n        if (!isFinite(value) && !exports.utils.isHexStrict(value)) {\n            throw new Error(\"Given input \" + value + \" is not a number.\");\n        }\n        var valueBigNumber = new utils_1.BigNumber(value);\n        var hexBase = 16;\n        var result = valueBigNumber.toString(hexBase);\n        return valueBigNumber.lt(0) ? \"-0x\" + result.substr(1) : \"0x\" + result;\n    },\n    isHexStrict: function (hex) {\n        return ((_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(_.isNumber(hex) ? hex.toString() : hex));\n    },\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}