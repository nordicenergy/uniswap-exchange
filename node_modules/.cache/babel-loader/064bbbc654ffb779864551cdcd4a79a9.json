{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/components/CurrencyInputPanel/index.js\";\nimport React, { useState, useRef, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { ethers } from 'ethers';\nimport { BigNumber } from '@uniswap/sdk';\nimport styled from 'styled-components';\nimport escapeStringRegex from 'escape-string-regexp';\nimport { darken } from 'polished';\nimport Tooltip from '@reach/tooltip';\nimport '@reach/tooltip/styles.css';\nimport { isMobile } from 'react-device-detect';\nimport { BorderlessInput } from '../../theme';\nimport { useWeb3React, useTokenContract } from '../../hooks';\nimport { isAddress, calculateGasMargin, formatToUsd, formatTokenBalance, formatEthBalance } from '../../utils';\nimport { ReactComponent as DropDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/dropdown.svg\";\nimport Modal from '../Modal';\nimport TokenLogo from '../TokenLogo';\nimport SearchIcon from \"../../assets/images/magnifying-glass.svg\";\nimport { useTransactionAdder, usePendingApproval } from '../../contexts/Transactions';\nimport { useTokenDetails, useAllTokenDetails } from '../../contexts/Tokens';\nimport { useAddressBalance } from '../../contexts/Balances';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { transparentize } from 'polished';\nimport { Spinner } from '../../theme';\nimport Circle from \"../../assets/images/circle-grey.svg\";\nimport { useETHPriceInUSD, useAllBalances } from '../../contexts/Balances';\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000);\nconst SubCurrencySelect = styled.button`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  padding: 4px 50px 4px 15px;\n  margin-right: -40px;\n  line-height: 0;\n  height: 2rem;\n  align-items: center;\n  border-radius: 2.5rem;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  background: ${({\n  theme\n}) => theme.zumthorBlue};\n  border: 1px solid ${({\n  theme\n}) => theme.royalBlue};\n  color: ${({\n  theme\n}) => theme.royalBlue};\n`;\nconst InputRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n\n  padding: 0.25rem 0.85rem 0.75rem;\n`;\nconst Input = styled(BorderlessInput)`\n  font-size: 1.5rem;\n  color: ${({\n  error,\n  theme\n}) => error && theme.salmonRed};\n  background-color: ${({\n  theme\n}) => theme.inputBackground};\n  -moz-appearance: textfield;\n`;\nconst StyledBorderlessInput = styled(BorderlessInput)`\n  min-height: 2.5rem;\n  flex-shrink: 0;\n  text-align: left;\n  padding-left: 1.6rem;\n  background-color: ${({\n  theme\n}) => theme.concreteGray};\n`;\nconst CurrencySelect = styled.button`\n  align-items: center;\n  font-size: 1rem;\n  color: ${({\n  selected,\n  theme\n}) => selected ? theme.textColor : theme.royalBlue};\n  height: 2rem;\n  border: 1px solid ${({\n  selected,\n  theme\n}) => selected ? theme.mercuryGray : theme.royalBlue};\n  border-radius: 2.5rem;\n  background-color: ${({\n  selected,\n  theme\n}) => selected ? theme.concreteGray : theme.zumthorBlue};\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n\n  :hover {\n    border: 1px solid\n      ${({\n  selected,\n  theme\n}) => selected ? darken(0.1, theme.mercuryGray) : darken(0.1, theme.royalBlue)};\n  }\n\n  :focus {\n    border: 1px solid ${({\n  theme\n}) => darken(0.1, theme.royalBlue)};\n  }\n\n  :active {\n    background-color: ${({\n  theme\n}) => theme.zumthorBlue};\n  }\n`;\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.5rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({\n  selected,\n  theme\n}) => selected ? theme.textColor : theme.royalBlue};\n  }\n`;\nconst InputPanel = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({\n  theme\n}) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({\n  theme\n}) => theme.inputBackground};\n  z-index: 1;\n`;\nconst Container = styled.div`\n  border-radius: 1.25rem;\n  border: 1px solid ${({\n  error,\n  theme\n}) => error ? theme.salmonRed : theme.mercuryGray};\n\n  background-color: ${({\n  theme\n}) => theme.inputBackground};\n  :focus-within {\n    border: 1px solid ${({\n  theme\n}) => theme.malibuBlue};\n  }\n`;\nconst LabelRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({\n  theme\n}) => darken(0.2, theme.doveGray)};\n  }\n`;\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nconst ErrorSpan = styled.span`\n  color: ${({\n  error,\n  theme\n}) => error && theme.salmonRed};\n  :hover {\n    cursor: pointer;\n    color: ${({\n  error,\n  theme\n}) => error && darken(0.1, theme.salmonRed)};\n  }\n`;\nconst TokenModal = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  width: 100%;\n`;\nconst ModalHeader = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 0px 0px 1rem;\n  height: 60px;\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.textColor};\n  }\n`;\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst SearchContainer = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  justify-content: flex-start;\n  padding: 0.5rem 1.5rem;\n  background-color: ${({\n  theme\n}) => theme.concreteGray};\n`;\nconst TokenModalInfo = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  user-select: none;\n`;\nconst TokenList = styled.div`\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n`;\nconst TokenModalRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  cursor: pointer;\n  user-select: none;\n\n  #symbol {\n    color: ${({\n  theme\n}) => theme.doveGrey};\n  }\n\n  :hover {\n    background-color: ${({\n  theme\n}) => theme.tokenRowHover};\n  }\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 0.8rem 1rem;\n    padding-right: 2rem;\n  `}\n`;\nconst TokenRowLeft = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items : center;\n`;\nconst TokenSymbolGroup = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  margin-left: 1rem;\n`;\nconst TokenFullName = styled.div`\n  color: ${({\n  theme\n}) => theme.chaliceGray};\n`;\nconst TokenRowBalance = styled.div`\n  font-size: 1rem;\n  line-height: 20px;\n`;\nconst TokenRowUsd = styled.div`\n  font-size: 1rem;\n  line-height: 1.5rem;\n  color: ${({\n  theme\n}) => theme.chaliceGray};\n`;\nconst TokenRowRight = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: flex-end;\n`;\nconst StyledTokenName = styled.span`\n  margin: 0 0.25rem 0 0.25rem;\n`;\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n  color: ${({\n  theme\n}) => theme.chaliceGray};\n  opacity: 0.6;\n`;\nexport default function CurrencyInputPanel({\n  onValueChange = () => {},\n  allBalances,\n  renderInput,\n  onCurrencySelected = () => {},\n  title,\n  description,\n  extraText,\n  extraTextClickHander = () => {},\n  errorMessage,\n  disableUnlock,\n  disableTokenSelect,\n  selectedTokenAddress = '',\n  showUnlock,\n  value\n}) {\n  const {\n    t\n  } = useTranslation();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const tokenContract = useTokenContract(selectedTokenAddress);\n  const {\n    exchangeAddress: selectedTokenExchangeAddress\n  } = useTokenDetails(selectedTokenAddress);\n  const pendingApproval = usePendingApproval(selectedTokenAddress);\n  const addTransaction = useTransactionAdder();\n  const allTokens = useAllTokenDetails();\n  const {\n    account\n  } = useWeb3React();\n  const userTokenBalance = useAddressBalance(account, selectedTokenAddress);\n\n  function renderUnlockButton() {\n    if (disableUnlock || !showUnlock || selectedTokenAddress === 'ETH' || !selectedTokenAddress) {\n      return null;\n    } else {\n      if (!pendingApproval) {\n        return React.createElement(SubCurrencySelect, {\n          onClick: async () => {\n            let estimatedGas;\n            let useUserBalance = false;\n            estimatedGas = await tokenContract.estimate.approve(selectedTokenExchangeAddress, ethers.constants.MaxUint256).catch(e => {\n              console.log('Error setting max token approval.');\n            });\n\n            if (!estimatedGas) {\n              // general fallback for tokens who restrict approval amounts\n              estimatedGas = await tokenContract.estimate.approve(selectedTokenExchangeAddress, userTokenBalance);\n              useUserBalance = true;\n            }\n\n            tokenContract.approve(selectedTokenExchangeAddress, useUserBalance ? userTokenBalance : ethers.constants.MaxUint256, {\n              gasLimit: calculateGasMargin(estimatedGas, GAS_MARGIN)\n            }).then(response => {\n              addTransaction(response, {\n                approval: selectedTokenAddress\n              });\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, t('unlock'));\n      } else {\n        return React.createElement(SubCurrencySelect, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, t('pending'));\n      }\n    }\n  }\n\n  function _renderInput() {\n    if (typeof renderInput === 'function') {\n      return renderInput();\n    }\n\n    return React.createElement(InputRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"number\",\n      min: \"0\",\n      step: \"0.000000000000000001\",\n      error: !!errorMessage,\n      placeholder: \"0.0\",\n      onChange: e => onValueChange(e.target.value),\n      onKeyPress: e => {\n        const charCode = e.which ? e.which : e.keyCode; // Prevent 'minus' character\n\n        if (charCode === 45) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      },\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), renderUnlockButton(), React.createElement(CurrencySelect, {\n      selected: !!selectedTokenAddress,\n      onClick: () => {\n        if (!disableTokenSelect) {\n          setModalIsOpen(true);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Aligner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, selectedTokenAddress ? React.createElement(TokenLogo, {\n      address: selectedTokenAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }) : null, React.createElement(StyledTokenName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, allTokens[selectedTokenAddress] && allTokens[selectedTokenAddress].symbol || t('selectToken')), !disableTokenSelect && React.createElement(StyledDropDown, {\n      selected: !!selectedTokenAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }))));\n  }\n\n  return React.createElement(InputPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, React.createElement(Container, {\n    error: !!errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, React.createElement(LabelRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, React.createElement(LabelContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, title), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, description)), React.createElement(ErrorSpan, {\n    \"data-tip\": 'Enter max',\n    error: !!errorMessage,\n    onClick: () => {\n      extraTextClickHander();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    label: \"Enter Max\",\n    style: {\n      background: 'hsla(0, 0%, 0%, 0.75)',\n      color: 'white',\n      border: 'none',\n      borderRadius: '24px',\n      padding: '0.5em 1em',\n      marginTop: '-64px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, extraText)))), _renderInput()), !disableTokenSelect && React.createElement(CurrencySelectModal, {\n    isOpen: modalIsOpen,\n    onDismiss: () => {\n      setModalIsOpen(false);\n    },\n    onTokenSelect: onCurrencySelected,\n    allBalances: allBalances,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }));\n}\n\nfunction CurrencySelectModal({\n  isOpen,\n  onDismiss,\n  onTokenSelect\n}) {\n  const {\n    t\n  } = useTranslation();\n  const [searchQuery, setSearchQuery] = useState('');\n  const {\n    exchangeAddress\n  } = useTokenDetails(searchQuery);\n  const allTokens = useAllTokenDetails();\n  const {\n    account\n  } = useWeb3React(); // BigNumber.js instance\n\n  const ethPrice = useETHPriceInUSD(); // all balances for both account and exchanges\n\n  let allBalances = useAllBalances();\n\n  const _usdAmounts = Object.keys(allTokens).map(k => {\n    if (ethPrice && allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\n      let ethRate = 1; // default for ETH\n\n      let exchangeDetails = allBalances[allTokens[k].exchangeAddress];\n\n      if (exchangeDetails && exchangeDetails[k] && exchangeDetails[k].value && exchangeDetails['ETH'] && exchangeDetails['ETH'].value) {\n        const tokenBalance = new BigNumber(exchangeDetails[k].value.toString());\n        const ethBalance = new BigNumber(exchangeDetails['ETH'].value.toString());\n        ethRate = ethBalance.div(tokenBalance);\n      }\n\n      const USDRate = ethPrice.times(ethRate).times(new BigNumber(10).pow(allTokens[k].decimals).div(new BigNumber(10).pow(18)));\n      const balanceBigNumber = new BigNumber(allBalances[account][k].value.toString());\n      const usdBalance = balanceBigNumber.times(USDRate).div(new BigNumber(10).pow(allTokens[k].decimals));\n      return usdBalance;\n    } else {\n      return null;\n    }\n  });\n\n  const usdAmounts = _usdAmounts && Object.keys(allTokens).reduce((accumulator, currentValue, i) => Object.assign({\n    [currentValue]: _usdAmounts[i]\n  }, accumulator), {});\n\n  const tokenList = useMemo(() => {\n    return Object.keys(allTokens).sort((a, b) => {\n      if (allTokens[a].symbol && allTokens[b].symbol) {\n        const aSymbol = allTokens[a].symbol.toLowerCase();\n        const bSymbol = allTokens[b].symbol.toLowerCase(); // pin ETH to top\n\n        if (aSymbol === 'ETH'.toLowerCase() || bSymbol === 'ETH'.toLowerCase()) {\n          return aSymbol === bSymbol ? 0 : aSymbol === 'ETH'.toLowerCase() ? -1 : 1;\n        } // then tokens with balance\n\n\n        if (usdAmounts[a] && !usdAmounts[b]) {\n          return -1;\n        } else if (usdAmounts[b] && !usdAmounts[a]) {\n          return 1;\n        } // sort by balance\n\n\n        if (usdAmounts[a] && usdAmounts[b]) {\n          const aUSD = usdAmounts[a];\n          const bUSD = usdAmounts[b];\n          return aUSD.gt(bUSD) ? -1 : aUSD.lt(bUSD) ? 1 : 0;\n        } // sort alphabetically\n\n\n        return aSymbol < bSymbol ? -1 : aSymbol > bSymbol ? 1 : 0;\n      } else {\n        return 0;\n      }\n    }).map(k => {\n      let balance;\n      let usdBalance; // only update if we have data\n\n      if (k === 'ETH' && allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\n        balance = formatEthBalance(allBalances[account][k].value);\n        usdBalance = usdAmounts[k];\n      } else if (allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\n        balance = formatTokenBalance(allBalances[account][k].value, allTokens[k].decimals);\n        usdBalance = usdAmounts[k];\n      }\n\n      return {\n        name: allTokens[k].name,\n        symbol: allTokens[k].symbol,\n        address: k,\n        balance: balance,\n        usdBalance: usdBalance\n      };\n    });\n  }, [allBalances, allTokens, usdAmounts, account]);\n  const filteredTokenList = useMemo(() => {\n    return tokenList.filter(tokenEntry => {\n      // check the regex for each field\n      const regexMatches = Object.keys(tokenEntry).map(tokenEntryKey => {\n        return typeof tokenEntry[tokenEntryKey] === 'string' && !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'));\n      });\n      return regexMatches.some(m => m);\n    });\n  }, [tokenList, searchQuery]);\n\n  function _onTokenSelect(address) {\n    setSearchQuery('');\n    onTokenSelect(address);\n    onDismiss();\n  }\n\n  function renderTokenList() {\n    if (isAddress(searchQuery) && exchangeAddress === undefined) {\n      return React.createElement(TokenModalInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, \"Searching for Exchange...\");\n    }\n\n    if (isAddress(searchQuery) && exchangeAddress === ethers.constants.AddressZero) {\n      return React.createElement(React.Fragment, null, React.createElement(TokenModalInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, t('noExchange')), React.createElement(TokenModalInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/create-exchange/${searchQuery}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, t('createExchange'))));\n    }\n\n    if (!filteredTokenList.length) {\n      return React.createElement(TokenModalInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, t('noExchange'));\n    }\n\n    return filteredTokenList.map(({\n      address,\n      symbol,\n      name,\n      balance,\n      usdBalance\n    }) => {\n      return React.createElement(TokenModalRow, {\n        key: address,\n        onClick: () => _onTokenSelect(address),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, React.createElement(TokenRowLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, React.createElement(TokenLogo, {\n        address: address,\n        size: '2rem',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }), React.createElement(TokenSymbolGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, symbol), React.createElement(TokenFullName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, name))), React.createElement(TokenRowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, balance ? React.createElement(TokenRowBalance, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, balance && (balance > 0 || balance === '<0.0001') ? balance : '-') : account ? React.createElement(SpinnerWrapper, {\n        src: Circle,\n        alt: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }) : '-', React.createElement(TokenRowUsd, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, usdBalance && !usdBalance.isNaN() ? usdBalance.isZero() ? '' : usdBalance.lt(0.01) ? '<$0.01' : '$' + formatToUsd(usdBalance) : '')));\n    });\n  } // manage focus on modal show\n\n\n  const inputRef = useRef();\n\n  function onInput(event) {\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n  }\n\n  function clearInputAndDismiss() {\n    setSearchQuery('');\n    onDismiss();\n  }\n\n  return React.createElement(Modal, {\n    isOpen: isOpen,\n    onDismiss: clearInputAndDismiss,\n    minHeight: 60,\n    maxHeight: 50,\n    initialFocusRef: isMobile ? undefined : inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630\n    },\n    __self: this\n  }, React.createElement(TokenModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639\n    },\n    __self: this\n  }, \"Select Token\"), React.createElement(CloseIcon, {\n    onClick: clearInputAndDismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640\n    },\n    __self: this\n  }, React.createElement(CloseColor, {\n    alt: 'close icon',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641\n    },\n    __self: this\n  }))), React.createElement(SearchContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: SearchIcon,\n    alt: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645\n    },\n    __self: this\n  }), React.createElement(StyledBorderlessInput, {\n    ref: inputRef,\n    type: \"text\",\n    placeholder: isMobile ? t('searchOrPasteMobile') : t('searchOrPaste'),\n    onChange: onInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646\n    },\n    __self: this\n  })), React.createElement(TokenList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653\n    },\n    __self: this\n  }, renderTokenList())));\n}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/components/CurrencyInputPanel/index.js"],"names":["React","useState","useRef","useMemo","Link","useTranslation","ethers","BigNumber","styled","escapeStringRegex","darken","Tooltip","isMobile","BorderlessInput","useWeb3React","useTokenContract","isAddress","calculateGasMargin","formatToUsd","formatTokenBalance","formatEthBalance","Modal","TokenLogo","useTransactionAdder","usePendingApproval","useTokenDetails","useAllTokenDetails","useAddressBalance","transparentize","Spinner","useETHPriceInUSD","useAllBalances","GAS_MARGIN","utils","bigNumberify","SubCurrencySelect","button","theme","flexRowNoWrap","zumthorBlue","royalBlue","InputRow","div","Input","error","salmonRed","inputBackground","StyledBorderlessInput","concreteGray","CurrencySelect","selected","textColor","mercuryGray","Aligner","span","StyledDropDown","DropDown","InputPanel","flexColumnNoWrap","shadowColor","Container","malibuBlue","LabelRow","doveGray","LabelContainer","ErrorSpan","TokenModal","ModalHeader","CloseColor","Close","CloseIcon","SearchContainer","TokenModalInfo","TokenList","TokenModalRow","doveGrey","tokenRowHover","mediaWidth","upToMedium","TokenRowLeft","TokenSymbolGroup","TokenFullName","chaliceGray","TokenRowBalance","TokenRowUsd","TokenRowRight","StyledTokenName","SpinnerWrapper","CurrencyInputPanel","onValueChange","allBalances","renderInput","onCurrencySelected","title","description","extraText","extraTextClickHander","errorMessage","disableUnlock","disableTokenSelect","selectedTokenAddress","showUnlock","value","t","modalIsOpen","setModalIsOpen","tokenContract","exchangeAddress","selectedTokenExchangeAddress","pendingApproval","addTransaction","allTokens","account","userTokenBalance","renderUnlockButton","estimatedGas","useUserBalance","estimate","approve","constants","MaxUint256","catch","e","console","log","gasLimit","then","response","approval","_renderInput","target","charCode","which","keyCode","preventDefault","stopPropagation","symbol","background","color","border","borderRadius","padding","marginTop","CurrencySelectModal","isOpen","onDismiss","onTokenSelect","searchQuery","setSearchQuery","ethPrice","_usdAmounts","Object","keys","map","k","ethRate","exchangeDetails","tokenBalance","toString","ethBalance","USDRate","times","pow","decimals","balanceBigNumber","usdBalance","usdAmounts","reduce","accumulator","currentValue","i","assign","tokenList","sort","a","b","aSymbol","toLowerCase","bSymbol","aUSD","bUSD","gt","lt","balance","name","address","filteredTokenList","filter","tokenEntry","regexMatches","tokenEntryKey","match","RegExp","some","m","_onTokenSelect","renderTokenList","undefined","AddressZero","length","Circle","isNaN","isZero","inputRef","onInput","event","input","checksummedInput","clearInputAndDismiss","SearchIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,OAAlC,QAAiD,OAAjD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAO,2BAAP;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,aAA/C;AACA,SAASC,SAAT,EAAoBC,kBAApB,EAAwCC,WAAxC,EAAqDC,kBAArD,EAAyEC,gBAAzE,QAAiG,aAAjG;;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,6BAAxD;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,uBAApD;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;AAEA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,yBAAjD;AAEA,MAAMC,UAAU,GAAG1B,MAAM,CAAC2B,KAAP,CAAaC,YAAb,CAA0B,IAA1B,CAAnB;AAEA,MAAMC,iBAAiB,GAAG3B,MAAM,CAAC4B,MAAO;IACpC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;;;;;;;;;gBAUvB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,WAAY;sBAC3B,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,SAAU;WAC1C,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,SAAU;CAb1C;AAgBA,MAAMC,QAAQ,GAAGjC,MAAM,CAACkC,GAAI;IACxB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;;;CADvC;AAOA,MAAMK,KAAK,GAAGnC,MAAM,CAACK,eAAD,CAAkB;;WAE3B,CAAC;AAAE+B,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,KAAsBO,KAAK,IAAIP,KAAK,CAACQ,SAAU;sBACpC,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACS,eAAgB;;CAH3D;AAOA,MAAMC,qBAAqB,GAAGvC,MAAM,CAACK,eAAD,CAAkB;;;;;sBAKhC,CAAC;AAAEwB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACW,YAAa;CALxD;AAQA,MAAMC,cAAc,GAAGzC,MAAM,CAAC4B,MAAO;;;WAG1B,CAAC;AAAEc,EAAAA,QAAF;AAAYb,EAAAA;AAAZ,CAAD,KAA0Ba,QAAQ,GAAGb,KAAK,CAACc,SAAT,GAAqBd,KAAK,CAACG,SAAW;;sBAE7D,CAAC;AAAEU,EAAAA,QAAF;AAAYb,EAAAA;AAAZ,CAAD,KAA0Ba,QAAQ,GAAGb,KAAK,CAACe,WAAT,GAAuBf,KAAK,CAACG,SAAW;;sBAE1E,CAAC;AAAEU,EAAAA,QAAF;AAAYb,EAAAA;AAAZ,CAAD,KAA0Ba,QAAQ,GAAGb,KAAK,CAACW,YAAT,GAAwBX,KAAK,CAACE,WAAa;;;;;;;QAO3F,CAAC;AAAEW,EAAAA,QAAF;AAAYb,EAAAA;AAAZ,CAAD,KAA0Ba,QAAQ,GAAGxC,MAAM,CAAC,GAAD,EAAM2B,KAAK,CAACe,WAAZ,CAAT,GAAoC1C,MAAM,CAAC,GAAD,EAAM2B,KAAK,CAACG,SAAZ,CAAwB;;;;wBAIpF,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAe3B,MAAM,CAAC,GAAD,EAAM2B,KAAK,CAACG,SAAZ,CAAuB;;;;wBAI5C,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,WAAY;;CAtBzD;AA0BA,MAAMc,OAAO,GAAG7C,MAAM,CAAC8C,IAAK;;;;CAA5B;AAMA,MAAMC,cAAc,GAAG/C,MAAM,CAACgD,QAAD,CAAW;;;;;cAK1B,CAAC;AAAEN,EAAAA,QAAF;AAAYb,EAAAA;AAAZ,CAAD,KAA0Ba,QAAQ,GAAGb,KAAK,CAACc,SAAT,GAAqBd,KAAK,CAACG,SAAW;;CALtF;AASA,MAAMiB,UAAU,GAAGjD,MAAM,CAACkC,GAAI;IAC1B,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACqB,gBAAiB;4BACd,CAAC;AAAErB,EAAAA;AAAF,CAAD,KAAeT,cAAc,CAAC,IAAD,EAAOS,KAAK,CAACsB,WAAb,CAA0B;;;sBAG7D,CAAC;AAAEtB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACS,eAAgB;;CAL3D;AASA,MAAMc,SAAS,GAAGpD,MAAM,CAACkC,GAAI;;sBAEP,CAAC;AAAEE,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,KAAuBO,KAAK,GAAGP,KAAK,CAACQ,SAAT,GAAqBR,KAAK,CAACe,WAAa;;sBAEpE,CAAC;AAAEf,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACS,eAAgB;;wBAEnC,CAAC;AAAET,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACwB,UAAW;;CANxD;AAUA,MAAMC,QAAQ,GAAGtD,MAAM,CAACkC,GAAI;IACxB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;WAE5B,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAAC0B,QAAS;;;;;;aAM5B,CAAC;AAAE1B,EAAAA;AAAF,CAAD,KAAe3B,MAAM,CAAC,GAAD,EAAM2B,KAAK,CAAC0B,QAAZ,CAAsB;;CATxD;AAaA,MAAMC,cAAc,GAAGxD,MAAM,CAACkC,GAAI;;;;;;CAAlC;AAQA,MAAMuB,SAAS,GAAGzD,MAAM,CAAC8C,IAAK;WACnB,CAAC;AAAEV,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,KAAsBO,KAAK,IAAIP,KAAK,CAACQ,SAAU;;;aAG7C,CAAC;AAAED,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,KAAsBO,KAAK,IAAIlC,MAAM,CAAC,GAAD,EAAM2B,KAAK,CAACQ,SAAZ,CAAuB;;CAJzE;AAQA,MAAMqB,UAAU,GAAG1D,MAAM,CAACkC,GAAI;IAC1B,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACqB,gBAAiB;;CAD1C;AAKA,MAAMS,WAAW,GAAG3D,MAAM,CAACkC,GAAI;;;;;;;CAA/B;AASA,MAAM0B,UAAU,GAAG5D,MAAM,CAAC6D,KAAD,CAAQ;;cAEnB,CAAC;AAAEhC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACc,SAAU;;CAF7C;AAMA,MAAMmB,SAAS,GAAG9D,MAAM,CAACkC,GAAI;;;;;;;;CAA7B;AAUA,MAAM6B,eAAe,GAAG/D,MAAM,CAACkC,GAAI;IAC/B,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;;sBAGjB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACW,YAAa;CAJxD;AAOA,MAAMwB,cAAc,GAAGhE,MAAM,CAACkC,GAAI;IAC9B,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;;;;;CADvC;AASA,MAAMmC,SAAS,GAAGjE,MAAM,CAACkC,GAAI;;;;;CAA7B;AAOA,MAAMgC,aAAa,GAAGlE,MAAM,CAACkC,GAAI;IAC7B,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;;;;;;;aAQ1B,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACsC,QAAS;;;;wBAInB,CAAC;AAAEtC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACuC,aAAc;;;IAGvD,CAAC;AAAEvC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACwC,UAAN,CAAiBC,UAAW;;;GAG3C;CAnBJ;AAsBA,MAAMC,YAAY,GAAGvE,MAAM,CAACkC,GAAI;IAC5B,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,aAAc;;CADvC;AAKA,MAAM0C,gBAAgB,GAAGxE,MAAM,CAACkC,GAAI;IAChC,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACqB,gBAAiB;;CAD1C;AAKA,MAAMuB,aAAa,GAAGzE,MAAM,CAACkC,GAAI;WACtB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAAC6C,WAAY;CAD5C;AAIA,MAAMC,eAAe,GAAG3E,MAAM,CAACkC,GAAI;;;CAAnC;AAKA,MAAM0C,WAAW,GAAG5E,MAAM,CAACkC,GAAI;;;WAGpB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAAC6C,WAAY;CAH5C;AAMA,MAAMG,aAAa,GAAG7E,MAAM,CAACkC,GAAI;IAC7B,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACqB,gBAAiB;;CAD1C;AAKA,MAAM4B,eAAe,GAAG9E,MAAM,CAAC8C,IAAK;;CAApC;AAIA,MAAMiC,cAAc,GAAG/E,MAAM,CAACqB,OAAD,CAAU;;WAE5B,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAAC6C,WAAY;;CAF5C;AAMA,eAAe,SAASM,kBAAT,CAA4B;AACzCC,EAAAA,aAAa,GAAG,MAAM,CAAE,CADiB;AAEzCC,EAAAA,WAFyC;AAGzCC,EAAAA,WAHyC;AAIzCC,EAAAA,kBAAkB,GAAG,MAAM,CAAE,CAJY;AAKzCC,EAAAA,KALyC;AAMzCC,EAAAA,WANyC;AAOzCC,EAAAA,SAPyC;AAQzCC,EAAAA,oBAAoB,GAAG,MAAM,CAAE,CARU;AASzCC,EAAAA,YATyC;AAUzCC,EAAAA,aAVyC;AAWzCC,EAAAA,kBAXyC;AAYzCC,EAAAA,oBAAoB,GAAG,EAZkB;AAazCC,EAAAA,UAbyC;AAczCC,EAAAA;AAdyC,CAA5B,EAeZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAQlG,cAAc,EAA5B;AAEA,QAAM,CAACmG,WAAD,EAAcC,cAAd,IAAgCxG,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMyG,aAAa,GAAG3F,gBAAgB,CAACqF,oBAAD,CAAtC;AACA,QAAM;AAAEO,IAAAA,eAAe,EAAEC;AAAnB,MAAoDnF,eAAe,CAAC2E,oBAAD,CAAzE;AAEA,QAAMS,eAAe,GAAGrF,kBAAkB,CAAC4E,oBAAD,CAA1C;AAEA,QAAMU,cAAc,GAAGvF,mBAAmB,EAA1C;AAEA,QAAMwF,SAAS,GAAGrF,kBAAkB,EAApC;AAEA,QAAM;AAAEsF,IAAAA;AAAF,MAAclG,YAAY,EAAhC;AAEA,QAAMmG,gBAAgB,GAAGtF,iBAAiB,CAACqF,OAAD,EAAUZ,oBAAV,CAA1C;;AAEA,WAASc,kBAAT,GAA8B;AAC5B,QAAIhB,aAAa,IAAI,CAACG,UAAlB,IAAgCD,oBAAoB,KAAK,KAAzD,IAAkE,CAACA,oBAAvE,EAA6F;AAC3F,aAAO,IAAP;AACD,KAFD,MAEO;AACL,UAAI,CAACS,eAAL,EAAsB;AACpB,eACE,oBAAC,iBAAD;AACE,UAAA,OAAO,EAAE,YAAY;AACnB,gBAAIM,YAAJ;AACA,gBAAIC,cAAc,GAAG,KAArB;AACAD,YAAAA,YAAY,GAAG,MAAMT,aAAa,CAACW,QAAd,CAClBC,OADkB,CACVV,4BADU,EACoBtG,MAAM,CAACiH,SAAP,CAAiBC,UADrC,EAElBC,KAFkB,CAEZC,CAAC,IAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,aAJkB,CAArB;;AAKA,gBAAI,CAACT,YAAL,EAAmB;AACjB;AACAA,cAAAA,YAAY,GAAG,MAAMT,aAAa,CAACW,QAAd,CAAuBC,OAAvB,CAA+BV,4BAA/B,EAA6DK,gBAA7D,CAArB;AACAG,cAAAA,cAAc,GAAG,IAAjB;AACD;;AACDV,YAAAA,aAAa,CACVY,OADH,CAEIV,4BAFJ,EAGIQ,cAAc,GAAGH,gBAAH,GAAsB3G,MAAM,CAACiH,SAAP,CAAiBC,UAHzD,EAII;AACEK,cAAAA,QAAQ,EAAE5G,kBAAkB,CAACkG,YAAD,EAAenF,UAAf;AAD9B,aAJJ,EAQG8F,IARH,CAQQC,QAAQ,IAAI;AAChBjB,cAAAA,cAAc,CAACiB,QAAD,EAAW;AAAEC,gBAAAA,QAAQ,EAAE5B;AAAZ,eAAX,CAAd;AACD,aAVH;AAWD,WAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA2BGG,CAAC,CAAC,QAAD,CA3BJ,CADF;AA+BD,OAhCD,MAgCO;AACL,eAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBA,CAAC,CAAC,SAAD,CAArB,CAAP;AACD;AACF;AACF;;AAED,WAAS0B,YAAT,GAAwB;AACtB,QAAI,OAAOtC,WAAP,KAAuB,UAA3B,EAAuC;AACrC,aAAOA,WAAW,EAAlB;AACD;;AAED,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,GAAG,EAAC,GAFN;AAGE,MAAA,IAAI,EAAC,sBAHP;AAIE,MAAA,KAAK,EAAE,CAAC,CAACM,YAJX;AAKE,MAAA,WAAW,EAAC,KALd;AAME,MAAA,QAAQ,EAAEyB,CAAC,IAAIjC,aAAa,CAACiC,CAAC,CAACQ,MAAF,CAAS5B,KAAV,CAN9B;AAOE,MAAA,UAAU,EAAEoB,CAAC,IAAI;AACf,cAAMS,QAAQ,GAAGT,CAAC,CAACU,KAAF,GAAUV,CAAC,CAACU,KAAZ,GAAoBV,CAAC,CAACW,OAAvC,CADe,CAGf;;AACA,YAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACnBT,UAAAA,CAAC,CAACY,cAAF;AACAZ,UAAAA,CAAC,CAACa,eAAF;AACD;AACF,OAfH;AAgBE,MAAA,KAAK,EAAEjC,KAhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAmBGY,kBAAkB,EAnBrB,EAoBE,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,CAAC,CAACd,oBADd;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,YAAI,CAACD,kBAAL,EAAyB;AACvBM,UAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,oBAAoB,GAAG,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEA,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAkD,IADzE,EAGI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIW,SAAS,CAACX,oBAAD,CAAT,IAAmCW,SAAS,CAACX,oBAAD,CAAT,CAAgCoC,MAApE,IAA+EjC,CAAC,CAAC,aAAD,CADnF,CAHJ,EAOG,CAACJ,kBAAD,IAAuB,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAE,CAAC,CAACC,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAP1B,CARF,CApBF,CADF;AAyCD;;AAED,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,CAAC,CAACH,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,KAAP,CADF,OACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,WAAP,CADvB,CADF,EAKE,oBAAC,SAAD;AACE,gBAAU,WADZ;AAEE,IAAA,KAAK,EAAE,CAAC,CAACG,YAFX;AAGE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,oBAAoB;AACrB,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,KAAK,EAAE;AACLyC,MAAAA,UAAU,EAAE,uBADP;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,YAAY,EAAE,MAJT;AAKLC,MAAAA,OAAO,EAAE,WALJ;AAMLC,MAAAA,SAAS,EAAE;AANN,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO/C,SAAP,CAXF,CAPF,CALF,CADF,EA4BGkC,YAAY,EA5Bf,CADF,EA+BG,CAAC9B,kBAAD,IACC,oBAAC,mBAAD;AACE,IAAA,MAAM,EAAEK,WADV;AAEE,IAAA,SAAS,EAAE,MAAM;AACfC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAJH;AAKE,IAAA,aAAa,EAAEb,kBALjB;AAME,IAAA,WAAW,EAAEF,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,CADF;AA4CD;;AAED,SAASqD,mBAAT,CAA6B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA;AAArB,CAA7B,EAAmE;AACjE,QAAM;AAAE3C,IAAAA;AAAF,MAAQlG,cAAc,EAA5B;AAEA,QAAM,CAAC8I,WAAD,EAAcC,cAAd,IAAgCnJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAE0G,IAAAA;AAAF,MAAsBlF,eAAe,CAAC0H,WAAD,CAA3C;AAEA,QAAMpC,SAAS,GAAGrF,kBAAkB,EAApC;AAEA,QAAM;AAAEsF,IAAAA;AAAF,MAAclG,YAAY,EAAhC,CARiE,CAUjE;;AACA,QAAMuI,QAAQ,GAAGvH,gBAAgB,EAAjC,CAXiE,CAajE;;AACA,MAAI4D,WAAW,GAAG3D,cAAc,EAAhC;;AAEA,QAAMuH,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYzC,SAAZ,EAAuB0C,GAAvB,CAA2BC,CAAC,IAAI;AAClD,QAAIL,QAAQ,IAAI3D,WAAW,CAACsB,OAAD,CAAvB,IAAoCtB,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,CAApC,IAA+DhE,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,EAAwBpD,KAA3F,EAAkG;AAChG,UAAIqD,OAAO,GAAG,CAAd,CADgG,CAChF;;AAChB,UAAIC,eAAe,GAAGlE,WAAW,CAACqB,SAAS,CAAC2C,CAAD,CAAT,CAAa/C,eAAd,CAAjC;;AACA,UACEiD,eAAe,IACfA,eAAe,CAACF,CAAD,CADf,IAEAE,eAAe,CAACF,CAAD,CAAf,CAAmBpD,KAFnB,IAGAsD,eAAe,CAAC,KAAD,CAHf,IAIAA,eAAe,CAAC,KAAD,CAAf,CAAuBtD,KALzB,EAME;AACA,cAAMuD,YAAY,GAAG,IAAItJ,SAAJ,CAAcqJ,eAAe,CAACF,CAAD,CAAf,CAAmBpD,KAAnB,CAAyBwD,QAAzB,EAAd,CAArB;AACA,cAAMC,UAAU,GAAG,IAAIxJ,SAAJ,CAAcqJ,eAAe,CAAC,KAAD,CAAf,CAAuBtD,KAAvB,CAA6BwD,QAA7B,EAAd,CAAnB;AACAH,QAAAA,OAAO,GAAGI,UAAU,CAACrH,GAAX,CAAemH,YAAf,CAAV;AACD;;AACD,YAAMG,OAAO,GAAGX,QAAQ,CACrBY,KADa,CACPN,OADO,EAEbM,KAFa,CAEP,IAAI1J,SAAJ,CAAc,EAAd,EAAkB2J,GAAlB,CAAsBnD,SAAS,CAAC2C,CAAD,CAAT,CAAaS,QAAnC,EAA6CzH,GAA7C,CAAiD,IAAInC,SAAJ,CAAc,EAAd,EAAkB2J,GAAlB,CAAsB,EAAtB,CAAjD,CAFO,CAAhB;AAGA,YAAME,gBAAgB,GAAG,IAAI7J,SAAJ,CAAcmF,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,EAAwBpD,KAAxB,CAA8BwD,QAA9B,EAAd,CAAzB;AACA,YAAMO,UAAU,GAAGD,gBAAgB,CAACH,KAAjB,CAAuBD,OAAvB,EAAgCtH,GAAhC,CAAoC,IAAInC,SAAJ,CAAc,EAAd,EAAkB2J,GAAlB,CAAsBnD,SAAS,CAAC2C,CAAD,CAAT,CAAaS,QAAnC,CAApC,CAAnB;AACA,aAAOE,UAAP;AACD,KApBD,MAoBO;AACL,aAAO,IAAP;AACD;AACF,GAxBmB,CAApB;;AAyBA,QAAMC,UAAU,GACdhB,WAAW,IACXC,MAAM,CAACC,IAAP,CAAYzC,SAAZ,EAAuBwD,MAAvB,CACE,CAACC,WAAD,EAAcC,YAAd,EAA4BC,CAA5B,KAAkCnB,MAAM,CAACoB,MAAP,CAAc;AAAE,KAACF,YAAD,GAAgBnB,WAAW,CAACoB,CAAD;AAA7B,GAAd,EAAkDF,WAAlD,CADpC,EAEE,EAFF,CAFF;;AAOA,QAAMI,SAAS,GAAGzK,OAAO,CAAC,MAAM;AAC9B,WAAOoJ,MAAM,CAACC,IAAP,CAAYzC,SAAZ,EACJ8D,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,UAAIhE,SAAS,CAAC+D,CAAD,CAAT,CAAatC,MAAb,IAAuBzB,SAAS,CAACgE,CAAD,CAAT,CAAavC,MAAxC,EAAgD;AAC9C,cAAMwC,OAAO,GAAGjE,SAAS,CAAC+D,CAAD,CAAT,CAAatC,MAAb,CAAoByC,WAApB,EAAhB;AACA,cAAMC,OAAO,GAAGnE,SAAS,CAACgE,CAAD,CAAT,CAAavC,MAAb,CAAoByC,WAApB,EAAhB,CAF8C,CAI9C;;AACA,YAAID,OAAO,KAAK,MAAMC,WAAN,EAAZ,IAAmCC,OAAO,KAAK,MAAMD,WAAN,EAAnD,EAAwE;AACtE,iBAAOD,OAAO,KAAKE,OAAZ,GAAsB,CAAtB,GAA0BF,OAAO,KAAK,MAAMC,WAAN,EAAZ,GAAkC,CAAC,CAAnC,GAAuC,CAAxE;AACD,SAP6C,CAS9C;;;AACA,YAAIX,UAAU,CAACQ,CAAD,CAAV,IAAiB,CAACR,UAAU,CAACS,CAAD,CAAhC,EAAqC;AACnC,iBAAO,CAAC,CAAR;AACD,SAFD,MAEO,IAAIT,UAAU,CAACS,CAAD,CAAV,IAAiB,CAACT,UAAU,CAACQ,CAAD,CAAhC,EAAqC;AAC1C,iBAAO,CAAP;AACD,SAd6C,CAgB9C;;;AACA,YAAIR,UAAU,CAACQ,CAAD,CAAV,IAAiBR,UAAU,CAACS,CAAD,CAA/B,EAAoC;AAClC,gBAAMI,IAAI,GAAGb,UAAU,CAACQ,CAAD,CAAvB;AACA,gBAAMM,IAAI,GAAGd,UAAU,CAACS,CAAD,CAAvB;AAEA,iBAAOI,IAAI,CAACE,EAAL,CAAQD,IAAR,IAAgB,CAAC,CAAjB,GAAqBD,IAAI,CAACG,EAAL,CAAQF,IAAR,IAAgB,CAAhB,GAAoB,CAAhD;AACD,SAtB6C,CAwB9C;;;AACA,eAAOJ,OAAO,GAAGE,OAAV,GAAoB,CAAC,CAArB,GAAyBF,OAAO,GAAGE,OAAV,GAAoB,CAApB,GAAwB,CAAxD;AACD,OA1BD,MA0BO;AACL,eAAO,CAAP;AACD;AACF,KA/BI,EAgCJzB,GAhCI,CAgCAC,CAAC,IAAI;AACR,UAAI6B,OAAJ;AACA,UAAIlB,UAAJ,CAFQ,CAGR;;AACA,UAAIX,CAAC,KAAK,KAAN,IAAehE,WAAW,CAACsB,OAAD,CAA1B,IAAuCtB,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,CAAvC,IAAkEhE,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,EAAwBpD,KAA9F,EAAqG;AACnGiF,QAAAA,OAAO,GAAGnK,gBAAgB,CAACsE,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,EAAwBpD,KAAzB,CAA1B;AACA+D,QAAAA,UAAU,GAAGC,UAAU,CAACZ,CAAD,CAAvB;AACD,OAHD,MAGO,IAAIhE,WAAW,CAACsB,OAAD,CAAX,IAAwBtB,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,CAAxB,IAAmDhE,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,EAAwBpD,KAA/E,EAAsF;AAC3FiF,QAAAA,OAAO,GAAGpK,kBAAkB,CAACuE,WAAW,CAACsB,OAAD,CAAX,CAAqB0C,CAArB,EAAwBpD,KAAzB,EAAgCS,SAAS,CAAC2C,CAAD,CAAT,CAAaS,QAA7C,CAA5B;AACAE,QAAAA,UAAU,GAAGC,UAAU,CAACZ,CAAD,CAAvB;AACD;;AACD,aAAO;AACL8B,QAAAA,IAAI,EAAEzE,SAAS,CAAC2C,CAAD,CAAT,CAAa8B,IADd;AAELhD,QAAAA,MAAM,EAAEzB,SAAS,CAAC2C,CAAD,CAAT,CAAalB,MAFhB;AAGLiD,QAAAA,OAAO,EAAE/B,CAHJ;AAIL6B,QAAAA,OAAO,EAAEA,OAJJ;AAKLlB,QAAAA,UAAU,EAAEA;AALP,OAAP;AAOD,KAlDI,CAAP;AAmDD,GApDwB,EAoDtB,CAAC3E,WAAD,EAAcqB,SAAd,EAAyBuD,UAAzB,EAAqCtD,OAArC,CApDsB,CAAzB;AAsDA,QAAM0E,iBAAiB,GAAGvL,OAAO,CAAC,MAAM;AACtC,WAAOyK,SAAS,CAACe,MAAV,CAAiBC,UAAU,IAAI;AACpC;AACA,YAAMC,YAAY,GAAGtC,MAAM,CAACC,IAAP,CAAYoC,UAAZ,EAAwBnC,GAAxB,CAA4BqC,aAAa,IAAI;AAChE,eACE,OAAOF,UAAU,CAACE,aAAD,CAAjB,KAAqC,QAArC,IACA,CAAC,CAACF,UAAU,CAACE,aAAD,CAAV,CAA0BC,KAA1B,CAAgC,IAAIC,MAAJ,CAAWvL,iBAAiB,CAAC0I,WAAD,CAA5B,EAA2C,GAA3C,CAAhC,CAFJ;AAID,OALoB,CAArB;AAOA,aAAO0C,YAAY,CAACI,IAAb,CAAkBC,CAAC,IAAIA,CAAvB,CAAP;AACD,KAVM,CAAP;AAWD,GAZgC,EAY9B,CAACtB,SAAD,EAAYzB,WAAZ,CAZ8B,CAAjC;;AAcA,WAASgD,cAAT,CAAwBV,OAAxB,EAAiC;AAC/BrC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAF,IAAAA,aAAa,CAACuC,OAAD,CAAb;AACAxC,IAAAA,SAAS;AACV;;AAED,WAASmD,eAAT,GAA2B;AACzB,QAAIpL,SAAS,CAACmI,WAAD,CAAT,IAA0BxC,eAAe,KAAK0F,SAAlD,EAA6D;AAC3D,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACD;;AACD,QAAIrL,SAAS,CAACmI,WAAD,CAAT,IAA0BxC,eAAe,KAAKrG,MAAM,CAACiH,SAAP,CAAiB+E,WAAnE,EAAgF;AAC9E,aACE,0CACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB/F,CAAC,CAAC,YAAD,CAAlB,CADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,oBAAmB4C,WAAY,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8C5C,CAAC,CAAC,gBAAD,CAA/C,CADF,CAFF,CADF;AAQD;;AACD,QAAI,CAACmF,iBAAiB,CAACa,MAAvB,EAA+B;AAC7B,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBhG,CAAC,CAAC,YAAD,CAAlB,CAAP;AACD;;AAED,WAAOmF,iBAAiB,CAACjC,GAAlB,CAAsB,CAAC;AAAEgC,MAAAA,OAAF;AAAWjD,MAAAA,MAAX;AAAmBgD,MAAAA,IAAnB;AAAyBD,MAAAA,OAAzB;AAAkClB,MAAAA;AAAlC,KAAD,KAAoD;AAC/E,aACE,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAEoB,OAApB;AAA6B,QAAA,OAAO,EAAE,MAAMU,cAAc,CAACV,OAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAEA,OAApB;AAA6B,QAAA,IAAI,EAAE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBjD,MAAnB,CADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBgD,IAAhB,CAFF,CAFF,CADF,EAQE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,OAAO,GACN,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,OAAO,KAAKA,OAAO,GAAG,CAAV,IAAeA,OAAO,KAAK,SAAhC,CAAP,GAAoDA,OAApD,GAA8D,GAAhF,CADM,GAEJvE,OAAO,GACT,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAEwF,MAArB;AAA6B,QAAA,GAAG,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADS,GAGT,GANJ,EAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGnC,UAAU,IAAI,CAACA,UAAU,CAACoC,KAAX,EAAf,GACGpC,UAAU,CAACqC,MAAX,KACE,EADF,GAEErC,UAAU,CAACiB,EAAX,CAAc,IAAd,IACA,QADA,GAEA,MAAMpK,WAAW,CAACmJ,UAAD,CALtB,GAMG,EAPN,CARF,CARF,CADF;AA6BD,KA9BM,CAAP;AA+BD,GA3KgE,CA6KjE;;;AACA,QAAMsC,QAAQ,GAAGzM,MAAM,EAAvB;;AAEA,WAAS0M,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,UAAMC,KAAK,GAAGD,KAAK,CAAC3E,MAAN,CAAa5B,KAA3B;AACA,UAAMyG,gBAAgB,GAAG/L,SAAS,CAAC8L,KAAD,CAAlC;AACA1D,IAAAA,cAAc,CAAC2D,gBAAgB,IAAID,KAArB,CAAd;AACD;;AAED,WAASE,oBAAT,GAAgC;AAC9B5D,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAH,IAAAA,SAAS;AACV;;AAED,SACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAED,MADV;AAEE,IAAA,SAAS,EAAEgE,oBAFb;AAGE,IAAA,SAAS,EAAE,EAHb;AAIE,IAAA,SAAS,EAAE,EAJb;AAKE,IAAA,eAAe,EAAEpM,QAAQ,GAAGyL,SAAH,GAAeM,QAL1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEK,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,EAOE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,UAAV;AAAsB,IAAA,GAAG,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,qBAAD;AACE,IAAA,GAAG,EAAEN,QADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAE/L,QAAQ,GAAG2F,CAAC,CAAC,qBAAD,CAAJ,GAA8BA,CAAC,CAAC,eAAD,CAHtD;AAIE,IAAA,QAAQ,EAAEqG,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPF,EAgBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYR,eAAe,EAA3B,CAhBF,CAPF,CADF;AA4BD","sourcesContent":["import React, { useState, useRef, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { ethers } from 'ethers'\nimport { BigNumber } from '@uniswap/sdk'\nimport styled from 'styled-components'\nimport escapeStringRegex from 'escape-string-regexp'\nimport { darken } from 'polished'\nimport Tooltip from '@reach/tooltip'\nimport '@reach/tooltip/styles.css'\nimport { isMobile } from 'react-device-detect'\n\nimport { BorderlessInput } from '../../theme'\nimport { useWeb3React, useTokenContract } from '../../hooks'\nimport { isAddress, calculateGasMargin, formatToUsd, formatTokenBalance, formatEthBalance } from '../../utils'\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport Modal from '../Modal'\nimport TokenLogo from '../TokenLogo'\nimport SearchIcon from '../../assets/images/magnifying-glass.svg'\nimport { useTransactionAdder, usePendingApproval } from '../../contexts/Transactions'\nimport { useTokenDetails, useAllTokenDetails } from '../../contexts/Tokens'\nimport { useAddressBalance } from '../../contexts/Balances'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { transparentize } from 'polished'\nimport { Spinner } from '../../theme'\nimport Circle from '../../assets/images/circle-grey.svg'\nimport { useETHPriceInUSD, useAllBalances } from '../../contexts/Balances'\n\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst SubCurrencySelect = styled.button`\n  ${({ theme }) => theme.flexRowNoWrap}\n  padding: 4px 50px 4px 15px;\n  margin-right: -40px;\n  line-height: 0;\n  height: 2rem;\n  align-items: center;\n  border-radius: 2.5rem;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  background: ${({ theme }) => theme.zumthorBlue};\n  border: 1px solid ${({ theme }) => theme.royalBlue};\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled(BorderlessInput)`\n  font-size: 1.5rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  background-color: ${({ theme }) => theme.inputBackground};\n  -moz-appearance: textfield;\n`\n\nconst StyledBorderlessInput = styled(BorderlessInput)`\n  min-height: 2.5rem;\n  flex-shrink: 0;\n  text-align: left;\n  padding-left: 1.6rem;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst CurrencySelect = styled.button`\n  align-items: center;\n  font-size: 1rem;\n  color: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalBlue)};\n  height: 2rem;\n  border: 1px solid ${({ selected, theme }) => (selected ? theme.mercuryGray : theme.royalBlue)};\n  border-radius: 2.5rem;\n  background-color: ${({ selected, theme }) => (selected ? theme.concreteGray : theme.zumthorBlue)};\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n\n  :hover {\n    border: 1px solid\n      ${({ selected, theme }) => (selected ? darken(0.1, theme.mercuryGray) : darken(0.1, theme.royalBlue))};\n  }\n\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.1, theme.royalBlue)};\n  }\n\n  :active {\n    background-color: ${({ theme }) => theme.zumthorBlue};\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.5rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.textColor : theme.royalBlue)};\n  }\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst Container = styled.div`\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n  :focus-within {\n    border: 1px solid ${({ theme }) => theme.malibuBlue};\n  }\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.doveGray)};\n  }\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst ErrorSpan = styled.span`\n  color: ${({ error, theme }) => error && theme.salmonRed};\n  :hover {\n    cursor: pointer;\n    color: ${({ error, theme }) => error && darken(0.1, theme.salmonRed)};\n  }\n`\n\nconst TokenModal = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  width: 100%;\n`\n\nconst ModalHeader = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px 0px 0px 1rem;\n  height: 60px;\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.textColor};\n  }\n`\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst SearchContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: flex-start;\n  padding: 0.5rem 1.5rem;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst TokenModalInfo = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1.5rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  user-select: none;\n`\n\nconst TokenList = styled.div`\n  flex-grow: 1;\n  height: 100%;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n`\n\nconst TokenModalRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  cursor: pointer;\n  user-select: none;\n\n  #symbol {\n    color: ${({ theme }) => theme.doveGrey};\n  }\n\n  :hover {\n    background-color: ${({ theme }) => theme.tokenRowHover};\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 0.8rem 1rem;\n    padding-right: 2rem;\n  `}\n`\n\nconst TokenRowLeft = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items : center;\n`\n\nconst TokenSymbolGroup = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  margin-left: 1rem;\n`\n\nconst TokenFullName = styled.div`\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst TokenRowBalance = styled.div`\n  font-size: 1rem;\n  line-height: 20px;\n`\n\nconst TokenRowUsd = styled.div`\n  font-size: 1rem;\n  line-height: 1.5rem;\n  color: ${({ theme }) => theme.chaliceGray};\n`\n\nconst TokenRowRight = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: flex-end;\n`\n\nconst StyledTokenName = styled.span`\n  margin: 0 0.25rem 0 0.25rem;\n`\n\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n  color: ${({ theme }) => theme.chaliceGray};\n  opacity: 0.6;\n`\n\nexport default function CurrencyInputPanel({\n  onValueChange = () => {},\n  allBalances,\n  renderInput,\n  onCurrencySelected = () => {},\n  title,\n  description,\n  extraText,\n  extraTextClickHander = () => {},\n  errorMessage,\n  disableUnlock,\n  disableTokenSelect,\n  selectedTokenAddress = '',\n  showUnlock,\n  value\n}) {\n  const { t } = useTranslation()\n\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n\n  const tokenContract = useTokenContract(selectedTokenAddress)\n  const { exchangeAddress: selectedTokenExchangeAddress } = useTokenDetails(selectedTokenAddress)\n\n  const pendingApproval = usePendingApproval(selectedTokenAddress)\n\n  const addTransaction = useTransactionAdder()\n\n  const allTokens = useAllTokenDetails()\n\n  const { account } = useWeb3React()\n\n  const userTokenBalance = useAddressBalance(account, selectedTokenAddress)\n\n  function renderUnlockButton() {\n    if (disableUnlock || !showUnlock || selectedTokenAddress === 'ETH' || !selectedTokenAddress) {\n      return null\n    } else {\n      if (!pendingApproval) {\n        return (\n          <SubCurrencySelect\n            onClick={async () => {\n              let estimatedGas\n              let useUserBalance = false\n              estimatedGas = await tokenContract.estimate\n                .approve(selectedTokenExchangeAddress, ethers.constants.MaxUint256)\n                .catch(e => {\n                  console.log('Error setting max token approval.')\n                })\n              if (!estimatedGas) {\n                // general fallback for tokens who restrict approval amounts\n                estimatedGas = await tokenContract.estimate.approve(selectedTokenExchangeAddress, userTokenBalance)\n                useUserBalance = true\n              }\n              tokenContract\n                .approve(\n                  selectedTokenExchangeAddress,\n                  useUserBalance ? userTokenBalance : ethers.constants.MaxUint256,\n                  {\n                    gasLimit: calculateGasMargin(estimatedGas, GAS_MARGIN)\n                  }\n                )\n                .then(response => {\n                  addTransaction(response, { approval: selectedTokenAddress })\n                })\n            }}\n          >\n            {t('unlock')}\n          </SubCurrencySelect>\n        )\n      } else {\n        return <SubCurrencySelect>{t('pending')}</SubCurrencySelect>\n      }\n    }\n  }\n\n  function _renderInput() {\n    if (typeof renderInput === 'function') {\n      return renderInput()\n    }\n\n    return (\n      <InputRow>\n        <Input\n          type=\"number\"\n          min=\"0\"\n          step=\"0.000000000000000001\"\n          error={!!errorMessage}\n          placeholder=\"0.0\"\n          onChange={e => onValueChange(e.target.value)}\n          onKeyPress={e => {\n            const charCode = e.which ? e.which : e.keyCode\n\n            // Prevent 'minus' character\n            if (charCode === 45) {\n              e.preventDefault()\n              e.stopPropagation()\n            }\n          }}\n          value={value}\n        />\n        {renderUnlockButton()}\n        <CurrencySelect\n          selected={!!selectedTokenAddress}\n          onClick={() => {\n            if (!disableTokenSelect) {\n              setModalIsOpen(true)\n            }\n          }}\n        >\n          <Aligner>\n            {selectedTokenAddress ? <TokenLogo address={selectedTokenAddress} /> : null}\n            {\n              <StyledTokenName>\n                {(allTokens[selectedTokenAddress] && allTokens[selectedTokenAddress].symbol) || t('selectToken')}\n              </StyledTokenName>\n            }\n            {!disableTokenSelect && <StyledDropDown selected={!!selectedTokenAddress} />}\n          </Aligner>\n        </CurrencySelect>\n      </InputRow>\n    )\n  }\n\n  return (\n    <InputPanel>\n      <Container error={!!errorMessage}>\n        <LabelRow>\n          <LabelContainer>\n            <span>{title}</span> <span>{description}</span>\n          </LabelContainer>\n\n          <ErrorSpan\n            data-tip={'Enter max'}\n            error={!!errorMessage}\n            onClick={() => {\n              extraTextClickHander()\n            }}\n          >\n            <Tooltip\n              label=\"Enter Max\"\n              style={{\n                background: 'hsla(0, 0%, 0%, 0.75)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '24px',\n                padding: '0.5em 1em',\n                marginTop: '-64px'\n              }}\n            >\n              <span>{extraText}</span>\n            </Tooltip>\n          </ErrorSpan>\n        </LabelRow>\n        {_renderInput()}\n      </Container>\n      {!disableTokenSelect && (\n        <CurrencySelectModal\n          isOpen={modalIsOpen}\n          onDismiss={() => {\n            setModalIsOpen(false)\n          }}\n          onTokenSelect={onCurrencySelected}\n          allBalances={allBalances}\n        />\n      )}\n    </InputPanel>\n  )\n}\n\nfunction CurrencySelectModal({ isOpen, onDismiss, onTokenSelect }) {\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState('')\n  const { exchangeAddress } = useTokenDetails(searchQuery)\n\n  const allTokens = useAllTokenDetails()\n\n  const { account } = useWeb3React()\n\n  // BigNumber.js instance\n  const ethPrice = useETHPriceInUSD()\n\n  // all balances for both account and exchanges\n  let allBalances = useAllBalances()\n\n  const _usdAmounts = Object.keys(allTokens).map(k => {\n    if (ethPrice && allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\n      let ethRate = 1 // default for ETH\n      let exchangeDetails = allBalances[allTokens[k].exchangeAddress]\n      if (\n        exchangeDetails &&\n        exchangeDetails[k] &&\n        exchangeDetails[k].value &&\n        exchangeDetails['ETH'] &&\n        exchangeDetails['ETH'].value\n      ) {\n        const tokenBalance = new BigNumber(exchangeDetails[k].value.toString())\n        const ethBalance = new BigNumber(exchangeDetails['ETH'].value.toString())\n        ethRate = ethBalance.div(tokenBalance)\n      }\n      const USDRate = ethPrice\n        .times(ethRate)\n        .times(new BigNumber(10).pow(allTokens[k].decimals).div(new BigNumber(10).pow(18)))\n      const balanceBigNumber = new BigNumber(allBalances[account][k].value.toString())\n      const usdBalance = balanceBigNumber.times(USDRate).div(new BigNumber(10).pow(allTokens[k].decimals))\n      return usdBalance\n    } else {\n      return null\n    }\n  })\n  const usdAmounts =\n    _usdAmounts &&\n    Object.keys(allTokens).reduce(\n      (accumulator, currentValue, i) => Object.assign({ [currentValue]: _usdAmounts[i] }, accumulator),\n      {}\n    )\n\n  const tokenList = useMemo(() => {\n    return Object.keys(allTokens)\n      .sort((a, b) => {\n        if (allTokens[a].symbol && allTokens[b].symbol) {\n          const aSymbol = allTokens[a].symbol.toLowerCase()\n          const bSymbol = allTokens[b].symbol.toLowerCase()\n\n          // pin ETH to top\n          if (aSymbol === 'ETH'.toLowerCase() || bSymbol === 'ETH'.toLowerCase()) {\n            return aSymbol === bSymbol ? 0 : aSymbol === 'ETH'.toLowerCase() ? -1 : 1\n          }\n\n          // then tokens with balance\n          if (usdAmounts[a] && !usdAmounts[b]) {\n            return -1\n          } else if (usdAmounts[b] && !usdAmounts[a]) {\n            return 1\n          }\n\n          // sort by balance\n          if (usdAmounts[a] && usdAmounts[b]) {\n            const aUSD = usdAmounts[a]\n            const bUSD = usdAmounts[b]\n\n            return aUSD.gt(bUSD) ? -1 : aUSD.lt(bUSD) ? 1 : 0\n          }\n\n          // sort alphabetically\n          return aSymbol < bSymbol ? -1 : aSymbol > bSymbol ? 1 : 0\n        } else {\n          return 0\n        }\n      })\n      .map(k => {\n        let balance\n        let usdBalance\n        // only update if we have data\n        if (k === 'ETH' && allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\n          balance = formatEthBalance(allBalances[account][k].value)\n          usdBalance = usdAmounts[k]\n        } else if (allBalances[account] && allBalances[account][k] && allBalances[account][k].value) {\n          balance = formatTokenBalance(allBalances[account][k].value, allTokens[k].decimals)\n          usdBalance = usdAmounts[k]\n        }\n        return {\n          name: allTokens[k].name,\n          symbol: allTokens[k].symbol,\n          address: k,\n          balance: balance,\n          usdBalance: usdBalance\n        }\n      })\n  }, [allBalances, allTokens, usdAmounts, account])\n\n  const filteredTokenList = useMemo(() => {\n    return tokenList.filter(tokenEntry => {\n      // check the regex for each field\n      const regexMatches = Object.keys(tokenEntry).map(tokenEntryKey => {\n        return (\n          typeof tokenEntry[tokenEntryKey] === 'string' &&\n          !!tokenEntry[tokenEntryKey].match(new RegExp(escapeStringRegex(searchQuery), 'i'))\n        )\n      })\n\n      return regexMatches.some(m => m)\n    })\n  }, [tokenList, searchQuery])\n\n  function _onTokenSelect(address) {\n    setSearchQuery('')\n    onTokenSelect(address)\n    onDismiss()\n  }\n\n  function renderTokenList() {\n    if (isAddress(searchQuery) && exchangeAddress === undefined) {\n      return <TokenModalInfo>Searching for Exchange...</TokenModalInfo>\n    }\n    if (isAddress(searchQuery) && exchangeAddress === ethers.constants.AddressZero) {\n      return (\n        <>\n          <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\n          <TokenModalInfo>\n            <Link to={`/create-exchange/${searchQuery}`}>{t('createExchange')}</Link>\n          </TokenModalInfo>\n        </>\n      )\n    }\n    if (!filteredTokenList.length) {\n      return <TokenModalInfo>{t('noExchange')}</TokenModalInfo>\n    }\n\n    return filteredTokenList.map(({ address, symbol, name, balance, usdBalance }) => {\n      return (\n        <TokenModalRow key={address} onClick={() => _onTokenSelect(address)}>\n          <TokenRowLeft>\n            <TokenLogo address={address} size={'2rem'} />\n            <TokenSymbolGroup>\n              <span id=\"symbol\">{symbol}</span>\n              <TokenFullName>{name}</TokenFullName>\n            </TokenSymbolGroup>\n          </TokenRowLeft>\n          <TokenRowRight>\n            {balance ? (\n              <TokenRowBalance>{balance && (balance > 0 || balance === '<0.0001') ? balance : '-'}</TokenRowBalance>\n            ) : account ? (\n              <SpinnerWrapper src={Circle} alt=\"loader\" />\n            ) : (\n              '-'\n            )}\n            <TokenRowUsd>\n              {usdBalance && !usdBalance.isNaN()\n                ? usdBalance.isZero()\n                  ? ''\n                  : usdBalance.lt(0.01)\n                  ? '<$0.01'\n                  : '$' + formatToUsd(usdBalance)\n                : ''}\n            </TokenRowUsd>\n          </TokenRowRight>\n        </TokenModalRow>\n      )\n    })\n  }\n\n  // manage focus on modal show\n  const inputRef = useRef()\n\n  function onInput(event) {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }\n\n  function clearInputAndDismiss() {\n    setSearchQuery('')\n    onDismiss()\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={clearInputAndDismiss}\n      minHeight={60}\n      maxHeight={50}\n      initialFocusRef={isMobile ? undefined : inputRef}\n    >\n      <TokenModal>\n        <ModalHeader>\n          <p>Select Token</p>\n          <CloseIcon onClick={clearInputAndDismiss}>\n            <CloseColor alt={'close icon'} />\n          </CloseIcon>\n        </ModalHeader>\n        <SearchContainer>\n          <img src={SearchIcon} alt=\"search\" />\n          <StyledBorderlessInput\n            ref={inputRef}\n            type=\"text\"\n            placeholder={isMobile ? t('searchOrPasteMobile') : t('searchOrPaste')}\n            onChange={onInput}\n          />\n        </SearchContainer>\n        <TokenList>{renderTokenList()}</TokenList>\n      </TokenModal>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}