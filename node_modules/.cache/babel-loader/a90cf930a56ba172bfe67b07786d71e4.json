{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/components/Web3Status/index.js\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport { darken, transparentize } from \"polished\";\nimport { Activity } from \"react-feather\";\nimport { shortenAddress } from \"../../utils\";\nimport { useENSName } from \"../../hooks\";\nimport WalletModal from \"../WalletModal\";\nimport { useAllTransactions } from \"../../contexts/Transactions\";\nimport { useWalletModalToggle } from \"../../contexts/Application\";\nimport { Spinner } from \"../../theme\";\nimport Circle from \"../../assets/images/circle.svg\";\nimport { injected, walletconnect, walletlink, fortmatic, portis } from \"../../connectors\";\nimport WalletConnectIcon from \"../../assets/images/walletConnectIcon.svg\";\nimport CoinbaseWalletIcon from \"../../assets/images/coinbaseWalletIcon.svg\";\nimport FortmaticIcon from \"../../assets/images/fortmaticIcon.png\";\nimport PortisIcon from \"../../assets/images/portisIcon.png\";\nimport { NetworkContextName } from \"../../constants\";\nimport Identicon from \"../Identicon\";\nconst Web3StatusGeneric = styled.button`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  width: 100%;\n  font-size: 0.9rem;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 2rem;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`;\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.salmonRed};\n  border: 1px solid ${({\n  theme\n}) => theme.salmonRed};\n  color: ${({\n  theme\n}) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  theme\n}) => darken(0.1, theme.salmonRed)};\n  }\n`;\nconst Web3StatusConnect = styled(Web3StatusGeneric)`\n  background-color: transparent;\n  border: 1px solid ${({\n  theme\n}) => theme.royalBlue};\n  color: ${({\n  theme\n}) => theme.royalBlue};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({\n  theme\n}) => darken(0.1, theme.royalBlue)};\n    color: ${({\n  theme\n}) => darken(0.1, theme.royalBlue)};\n  }\n\n  ${({\n  faded\n}) => faded && css`\n      background-color: transparent;\n      border: 1px solid ${({\n  theme\n}) => theme.royalBlue};\n      color: ${({\n  theme\n}) => theme.royalBlue};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({\n  theme\n}) => darken(0.1, theme.royalBlue)};\n        color: ${({\n  theme\n}) => darken(0.1, theme.royalBlue)};\n      }\n    `}\n`;\nconst Web3StatusConnected = styled(Web3StatusGeneric)`\n  background-color: ${({\n  pending,\n  theme\n}) => pending ? theme.zumthorBlue : theme.inputBackground};\n  border: 1px solid\n    ${({\n  pending,\n  theme\n}) => pending ? theme.royalBlue : theme.mercuryGray};\n  color: ${({\n  pending,\n  theme\n}) => pending ? theme.royalBlue : theme.doveGray};\n  font-weight: 400;\n  :hover {\n    background-color: ${({\n  pending,\n  theme\n}) => pending ? transparentize(0.9, theme.royalBlue) : darken(0.05, theme.inputBackground)};\n\n    :focus {\n      border: 1px solid\n        ${({\n  pending,\n  theme\n}) => pending ? darken(0.1, theme.royalBlue) : darken(0.1, theme.mercuryGray)};\n    }\n  }\n`;\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 0.83rem;\n`;\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`;\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n`;\nconst IconWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({\n  size\n}) => size ? size + \"px\" : \"32px\"};\n    width: ${({\n  size\n}) => size ? size + \"px\" : \"32px\"};\n  }\n`;\nexport default function Web3Status() {\n  const {\n    t\n  } = useTranslation();\n  const {\n    active,\n    account,\n    connector,\n    error\n  } = useWeb3React();\n  const contextNetwork = useWeb3React(NetworkContextName);\n  const ENSName = useENSName(account);\n  const allTransactions = useAllTransactions();\n  const pending = Object.keys(allTransactions).filter(hash => !allTransactions[hash].receipt);\n  const confirmed = Object.keys(allTransactions).filter(hash => allTransactions[hash].receipt);\n  const hasPendingTransactions = !!pending.length;\n  const toggleWalletModal = useWalletModalToggle(); // handle the logo we want to show with the account\n\n  function getStatusIcon() {\n    if (connector === injected) {\n      return React.createElement(Identicon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    } else if (connector === walletconnect) {\n      return React.createElement(IconWrapper, {\n        size: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: WalletConnectIcon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    } else if (connector === walletlink) {\n      return React.createElement(IconWrapper, {\n        size: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: CoinbaseWalletIcon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }));\n    } else if (connector === fortmatic) {\n      return React.createElement(IconWrapper, {\n        size: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: FortmaticIcon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }));\n    } else if (connector === portis) {\n      return React.createElement(IconWrapper, {\n        size: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: PortisIcon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }));\n    }\n  }\n\n  function getWeb3Status() {\n    if (account) {\n      return React.createElement(Web3StatusConnected, {\n        onClick: toggleWalletModal,\n        pending: hasPendingTransactions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, hasPendingTransactions && React.createElement(SpinnerWrapper, {\n        src: Circle,\n        alt: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, ENSName || shortenAddress(account)), getStatusIcon());\n    } else if (error) {\n      return React.createElement(Web3StatusError, {\n        onClick: toggleWalletModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(NetworkIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, error instanceof UnsupportedChainIdError ? \"Wrong Network\" : \"Error\"));\n    } else {\n      return React.createElement(Web3StatusConnect, {\n        onClick: toggleWalletModal,\n        faded: !account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, t(\"Connect to a Wallet\")));\n    }\n  }\n\n  if (!contextNetwork.active && !active) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, null, getWeb3Status(), React.createElement(WalletModal, {\n    ENSName: ENSName,\n    pendingTransactions: pending,\n    confirmedTransactions: confirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/components/Web3Status/index.js"],"names":["React","styled","css","useTranslation","useWeb3React","UnsupportedChainIdError","darken","transparentize","Activity","shortenAddress","useENSName","WalletModal","useAllTransactions","useWalletModalToggle","Spinner","injected","walletconnect","walletlink","fortmatic","portis","FortmaticIcon","PortisIcon","NetworkContextName","Identicon","Web3StatusGeneric","button","theme","flexRowNoWrap","Web3StatusError","salmonRed","white","Web3StatusConnect","royalBlue","faded","Web3StatusConnected","pending","zumthorBlue","inputBackground","mercuryGray","doveGray","Text","p","NetworkIcon","SpinnerWrapper","IconWrapper","div","flexColumnNoWrap","size","Web3Status","t","active","account","connector","error","contextNetwork","ENSName","allTransactions","Object","keys","filter","hash","receipt","confirmed","hasPendingTransactions","length","toggleWalletModal","getStatusIcon","WalletConnectIcon","CoinbaseWalletIcon","getWeb3Status","Circle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport { darken, transparentize } from \"polished\";\nimport { Activity } from \"react-feather\";\n\nimport { shortenAddress } from \"../../utils\";\nimport { useENSName } from \"../../hooks\";\nimport WalletModal from \"../WalletModal\";\nimport { useAllTransactions } from \"../../contexts/Transactions\";\nimport { useWalletModalToggle } from \"../../contexts/Application\";\nimport { Spinner } from \"../../theme\";\nimport Circle from \"../../assets/images/circle.svg\";\nimport {\n  injected,\n  walletconnect,\n  walletlink,\n  fortmatic,\n  portis\n} from \"../../connectors\";\nimport WalletConnectIcon from \"../../assets/images/walletConnectIcon.svg\";\nimport CoinbaseWalletIcon from \"../../assets/images/coinbaseWalletIcon.svg\";\nimport FortmaticIcon from \"../../assets/images/fortmaticIcon.png\";\nimport PortisIcon from \"../../assets/images/portisIcon.png\";\nimport { NetworkContextName } from \"../../constants\";\nimport Identicon from \"../Identicon\";\n\nconst Web3StatusGeneric = styled.button`\n  ${({ theme }) => theme.flexRowNoWrap}\n  width: 100%;\n  font-size: 0.9rem;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 2rem;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`;\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({ theme }) => theme.salmonRed};\n  border: 1px solid ${({ theme }) => theme.salmonRed};\n  color: ${({ theme }) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => darken(0.1, theme.salmonRed)};\n  }\n`;\n\nconst Web3StatusConnect = styled(Web3StatusGeneric)`\n  background-color: transparent;\n  border: 1px solid ${({ theme }) => theme.royalBlue};\n  color: ${({ theme }) => theme.royalBlue};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.1, theme.royalBlue)};\n    color: ${({ theme }) => darken(0.1, theme.royalBlue)};\n  }\n\n  ${({ faded }) =>\n    faded &&\n    css`\n      background-color: transparent;\n      border: 1px solid ${({ theme }) => theme.royalBlue};\n      color: ${({ theme }) => theme.royalBlue};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({ theme }) => darken(0.1, theme.royalBlue)};\n        color: ${({ theme }) => darken(0.1, theme.royalBlue)};\n      }\n    `}\n`;\n\nconst Web3StatusConnected = styled(Web3StatusGeneric)`\n  background-color: ${({ pending, theme }) =>\n    pending ? theme.zumthorBlue : theme.inputBackground};\n  border: 1px solid\n    ${({ pending, theme }) => (pending ? theme.royalBlue : theme.mercuryGray)};\n  color: ${({ pending, theme }) =>\n    pending ? theme.royalBlue : theme.doveGray};\n  font-weight: 400;\n  :hover {\n    background-color: ${({ pending, theme }) =>\n      pending\n        ? transparentize(0.9, theme.royalBlue)\n        : darken(0.05, theme.inputBackground)};\n\n    :focus {\n      border: 1px solid\n        ${({ pending, theme }) =>\n          pending\n            ? darken(0.1, theme.royalBlue)\n            : darken(0.1, theme.mercuryGray)};\n    }\n  }\n`;\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 0.83rem;\n`;\n\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`;\n\nconst SpinnerWrapper = styled(Spinner)`\n  margin: 0 0.25rem 0 0.25rem;\n`;\n\nconst IconWrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({ size }) => (size ? size + \"px\" : \"32px\")};\n    width: ${({ size }) => (size ? size + \"px\" : \"32px\")};\n  }\n`;\n\nexport default function Web3Status() {\n  const { t } = useTranslation();\n  const { active, account, connector, error } = useWeb3React();\n  const contextNetwork = useWeb3React(NetworkContextName);\n\n  const ENSName = useENSName(account);\n\n  const allTransactions = useAllTransactions();\n  const pending = Object.keys(allTransactions).filter(\n    hash => !allTransactions[hash].receipt\n  );\n  const confirmed = Object.keys(allTransactions).filter(\n    hash => allTransactions[hash].receipt\n  );\n\n  const hasPendingTransactions = !!pending.length;\n\n  const toggleWalletModal = useWalletModalToggle();\n\n  // handle the logo we want to show with the account\n  function getStatusIcon() {\n    if (connector === injected) {\n      return <Identicon />;\n    } else if (connector === walletconnect) {\n      return (\n        <IconWrapper size={16}>\n          <img src={WalletConnectIcon} alt={\"\"} />\n        </IconWrapper>\n      );\n    } else if (connector === walletlink) {\n      return (\n        <IconWrapper size={16}>\n          <img src={CoinbaseWalletIcon} alt={\"\"} />\n        </IconWrapper>\n      );\n    } else if (connector === fortmatic) {\n      return (\n        <IconWrapper size={16}>\n          <img src={FortmaticIcon} alt={\"\"} />\n        </IconWrapper>\n      );\n    } else if (connector === portis) {\n      return (\n        <IconWrapper size={16}>\n          <img src={PortisIcon} alt={\"\"} />\n        </IconWrapper>\n      );\n    }\n  }\n\n  function getWeb3Status() {\n    if (account) {\n      return (\n        <Web3StatusConnected\n          onClick={toggleWalletModal}\n          pending={hasPendingTransactions}\n        >\n          {hasPendingTransactions && (\n            <SpinnerWrapper src={Circle} alt=\"loader\" />\n          )}\n          <Text>{ENSName || shortenAddress(account)}</Text>\n          {getStatusIcon()}\n        </Web3StatusConnected>\n      );\n    } else if (error) {\n      return (\n        <Web3StatusError onClick={toggleWalletModal}>\n          <NetworkIcon />\n          <Text>\n            {error instanceof UnsupportedChainIdError\n              ? \"Wrong Network\"\n              : \"Error\"}\n          </Text>\n        </Web3StatusError>\n      );\n    } else {\n      return (\n        <Web3StatusConnect onClick={toggleWalletModal} faded={!account}>\n          <Text>{t(\"Connect to a Wallet\")}</Text>\n        </Web3StatusConnect>\n      );\n    }\n  }\n\n  if (!contextNetwork.active && !active) {\n    return null;\n  }\n\n  return (\n    <>\n      {getWeb3Status()}\n      <WalletModal\n        ENSName={ENSName}\n        pendingTransactions={pending}\n        confirmedTransactions={confirmed}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}