{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2019 Coinbase, Inc. <https://coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\n\nconst crypto_1 = __importDefault(require(\"crypto\"));\n\nconst url_1 = __importDefault(require(\"url\"));\n\nconst ScopedLocalStorage_1 = require(\"./ScopedLocalStorage\");\n\nconst LinkedMessage_1 = require(\"./types/LinkedMessage\");\n\nconst LocalStorageBlockedMessage_1 = require(\"./types/LocalStorageBlockedMessage\");\n\nconst SessionIdRequestMessage_1 = require(\"./types/SessionIdRequestMessage\");\n\nconst SessionIdResponseMessage_1 = require(\"./types/SessionIdResponseMessage\");\n\nconst UnlinkedMessage_1 = require(\"./types/UnlinkedMessage\");\n\nconst Web3Method_1 = require(\"./types/Web3Method\");\n\nconst Web3RequestCanceledMessage_1 = require(\"./types/Web3RequestCanceledMessage\");\n\nconst Web3RequestMessage_1 = require(\"./types/Web3RequestMessage\");\n\nconst Web3Response_1 = require(\"./types/Web3Response\");\n\nconst Web3ResponseMessage_1 = require(\"./types/Web3ResponseMessage\");\n\nconst util_1 = require(\"./util\");\n\nconst walletLinkBlockedDialog = __importStar(require(\"./walletLinkBlockedDialog\"));\n\nconst WalletLinkNotification_1 = require(\"./WalletLinkNotification\");\n\nconst LOCAL_STORAGE_SESSION_ID_KEY = \"SessionId\";\nconst BLOCKED_LOCAL_STORAGE_ERROR_MESSAGE = \"Browser is blocking third-party localStorage usage. To continue, \" + \"turn off third-party storage blocking or whitelist WalletLink.\";\n\nclass WalletLinkRelay {\n  constructor(options) {\n    this.iframeEl = null;\n    this.popupUrl = null;\n    this.popupWindow = null;\n    this.sessionId = null;\n    this.appName = \"\";\n    this.appLogoUrl = null;\n    this.linked = false;\n    this.iframeLoaded = false;\n    this.localStorageBlocked = false;\n    this.actionsPendingIframeLoad = [];\n    this.actionsPendingSessionId = [];\n    this.walletLinkUrl = options.walletLinkUrl;\n    const u = url_1.default.parse(this.walletLinkUrl);\n    this.walletLinkOrigin = `${u.protocol}//${u.host}`;\n    this.storage = new ScopedLocalStorage_1.ScopedLocalStorage(`__WalletLink__:${this.walletLinkOrigin}`);\n    this.sessionId = this.getStorageItem(LOCAL_STORAGE_SESSION_ID_KEY) || null;\n  }\n\n  setAppInfo(appName, appLogoUrl) {\n    this.appName = appName;\n    this.appLogoUrl = appLogoUrl;\n  }\n\n  injectIframe() {\n    if (this.iframeEl) {\n      throw new Error(\"iframe already injected!\");\n    }\n\n    const iframeEl = document.createElement(\"iframe\");\n    iframeEl.className = \"_WalletLinkBridge\";\n    iframeEl.width = \"1\";\n    iframeEl.height = \"1\";\n    iframeEl.style.opacity = \"0\";\n    iframeEl.style.pointerEvents = \"none\";\n    iframeEl.style.position = \"absolute\";\n    iframeEl.style.top = \"0\";\n    iframeEl.style.right = \"0\";\n    iframeEl.setAttribute(\"sandbox\", \"allow-scripts allow-popups allow-same-origin\");\n    iframeEl.src = `${this.walletLinkUrl}/#/bridge`;\n    this.iframeEl = iframeEl;\n    window.addEventListener(\"message\", this.handleMessage, false);\n    window.addEventListener(\"beforeunload\", this.handleBeforeUnload, false);\n\n    const onIframeLoad = () => {\n      this.iframeLoaded = true;\n      iframeEl.removeEventListener(\"load\", onIframeLoad, false);\n      this.postIPCMessage(SessionIdRequestMessage_1.SessionIdRequestMessage());\n      this.actionsPendingIframeLoad.forEach(action => action());\n      this.actionsPendingIframeLoad = [];\n    };\n\n    iframeEl.addEventListener(\"load\", onIframeLoad, false);\n    document.documentElement.appendChild(iframeEl);\n  }\n\n  getStorageItem(key) {\n    return this.storage.getItem(key);\n  }\n\n  setStorageItem(key, value) {\n    this.storage.setItem(key, value);\n  }\n\n  requestEthereumAccounts() {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.requestEthereumAccounts,\n      params: {\n        appName: this.appName,\n        appLogoUrl: this.appLogoUrl || null\n      }\n    });\n  }\n\n  signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumMessage,\n      params: {\n        message: util_1.hexStringFromBuffer(message, true),\n        address,\n        addPrefix,\n        typedDataJson: typedDataJson || null\n      }\n    });\n  }\n\n  ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n      params: {\n        message: util_1.hexStringFromBuffer(message, true),\n        signature: util_1.hexStringFromBuffer(signature, true),\n        addPrefix\n      }\n    });\n  }\n\n  signEthereumTransaction(params) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumTransaction,\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: util_1.bigIntStringFromBN(params.weiValue),\n        data: util_1.hexStringFromBuffer(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: false\n      }\n    });\n  }\n\n  signAndSubmitEthereumTransaction(params) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumTransaction,\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: util_1.bigIntStringFromBN(params.weiValue),\n        data: util_1.hexStringFromBuffer(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: true\n      }\n    });\n  }\n\n  submitEthereumTransaction(signedTransaction, chainId) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.submitEthereumTransaction,\n      params: {\n        signedTransaction: util_1.hexStringFromBuffer(signedTransaction, true),\n        chainId\n      }\n    });\n  }\n\n  scanQRCode(regExp) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.scanQRCode,\n      params: {\n        regExp\n      }\n    });\n  }\n\n  arbitraryRequest(data) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.arbitrary,\n      params: {\n        data\n      }\n    });\n  }\n\n  sendRequest(request) {\n    if (this.localStorageBlocked) {\n      walletLinkBlockedDialog.show();\n      return Promise.reject(new Error(BLOCKED_LOCAL_STORAGE_ERROR_MESSAGE));\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!this.iframeEl || !this.iframeEl.contentWindow) {\n        return reject(\"iframe is not initialized\");\n      }\n\n      const id = crypto_1.default.randomBytes(8).toString(\"hex\");\n\n      const cancel = () => {\n        this.postIPCMessage(Web3RequestCanceledMessage_1.Web3RequestCanceledMessage(id));\n        this.invokeCallback(Web3ResponseMessage_1.Web3ResponseMessage({\n          id,\n          response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n        }));\n\n        if (notification) {\n          notification.hide();\n        }\n      };\n\n      const reset = () => {\n        this.openPopupWindow(\"/reset\");\n\n        if (notification) {\n          notification.hide();\n        }\n      };\n\n      const options = {\n        showProgressBar: true,\n        autoExpandAfter: 10000,\n        buttonInfo2: \"Made a mistake?\",\n        buttonLabel2: \"Cancel\",\n        onClickButton2: cancel\n      };\n      const isRequestAccounts = request.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n\n      if (!this.linked && isRequestAccounts) {\n        const showPopup = () => {\n          this.openPopupWindow(`/link?id=${this.sessionId}`);\n        };\n\n        showPopup();\n        options.message = \"Requesting to connect to your wallet...\";\n        options.buttonInfo1 = \"Donâ€™t see the popup?\";\n        options.buttonLabel1 = \"Show window\";\n        options.onClickButton1 = showPopup;\n      } else {\n        options.message = \"Pushed a request to your wallet...\";\n        options.buttonInfo3 = \"Not receiving requests?\";\n        options.buttonLabel3 = \"Reconnect\";\n        options.onClickButton3 = reset;\n      }\n\n      if (isRequestAccounts) {\n        WalletLinkRelay.accountRequestCallbackIds.add(id);\n      }\n\n      WalletLinkRelay.callbacks.set(id, response => {\n        this.closePopupWindow();\n\n        if (notification) {\n          notification.hide();\n        }\n\n        if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n\n        resolve(response);\n      });\n      const notification = new WalletLinkNotification_1.WalletLinkNotification(options);\n      notification.show();\n      this.postIPCMessage(Web3RequestMessage_1.Web3RequestMessage({\n        id,\n        request\n      }));\n    });\n  }\n\n  postIPCMessage(message) {\n    if (!this.iframeLoaded) {\n      this.actionsPendingIframeLoad.push(() => {\n        this.postIPCMessage(message);\n      });\n      return;\n    }\n\n    if (this.iframeEl && this.iframeEl.contentWindow) {\n      this.iframeEl.contentWindow.postMessage(message, this.walletLinkOrigin);\n    }\n  }\n\n  openPopupWindow(path) {\n    if (!this.sessionId) {\n      this.actionsPendingSessionId.push(() => {\n        this.openPopupWindow(path);\n      });\n      return;\n    }\n\n    const popupUrl = `${this.walletLinkUrl}/#${path}`;\n\n    if (this.popupWindow && this.popupWindow.opener) {\n      if (this.popupUrl !== popupUrl) {\n        this.popupWindow.location.href = popupUrl;\n        this.popupUrl = popupUrl;\n      }\n\n      this.popupWindow.focus();\n      return;\n    }\n\n    const width = 320;\n    const height = 520;\n    const left = Math.floor(window.outerWidth / 2 - width / 2 + window.screenX);\n    const top = Math.floor(window.outerHeight / 2 - height / 2 + window.screenY);\n    this.popupUrl = popupUrl;\n    this.popupWindow = window.open(popupUrl, \"_blank\", [`width=${width}`, `height=${height}`, `left=${left}`, `top=${top}`, \"location=yes\", \"menubar=no\", \"resizable=no\", \"status=no\", \"titlebar=yes\", \"toolbar=no\"].join(\",\"));\n  }\n\n  closePopupWindow() {\n    if (this.popupWindow) {\n      this.popupWindow.close();\n      this.popupUrl = null;\n      this.popupWindow = null;\n    }\n\n    window.focus();\n  }\n\n  invokeCallback(message) {\n    const callback = WalletLinkRelay.callbacks.get(message.id);\n\n    if (callback) {\n      callback(message.response);\n      WalletLinkRelay.callbacks.delete(message.id);\n    }\n  }\n\n  resetAndReload() {\n    this.storage.clear();\n    document.location.reload();\n  }\n\n  handleMessage(evt) {\n    if (evt.origin !== this.walletLinkOrigin) {\n      return;\n    }\n\n    const message = evt.data;\n\n    if (Web3ResponseMessage_1.isWeb3ResponseMessage(message)) {\n      const {\n        response\n      } = message;\n\n      if (Web3Response_1.isRequestEthereumAccountsResponse(response)) {\n        Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => this.invokeCallback(Object.assign({}, message, {\n          id\n        })));\n        WalletLinkRelay.accountRequestCallbackIds.clear();\n        return;\n      }\n\n      this.invokeCallback(message);\n      return;\n    }\n\n    if (SessionIdResponseMessage_1.isSessionIdResponseMessage(message)) {\n      const {\n        sessionId\n      } = message;\n\n      if (this.sessionId !== null && this.sessionId !== sessionId) {\n        // sessionId changed, clear all local data and reload page\n        this.resetAndReload();\n        return;\n      }\n\n      this.sessionId = sessionId;\n      this.setStorageItem(LOCAL_STORAGE_SESSION_ID_KEY, sessionId);\n      this.actionsPendingSessionId.forEach(action => action());\n      this.actionsPendingSessionId = [];\n      return;\n    }\n\n    if (LinkedMessage_1.isLinkedMessage(message)) {\n      this.linked = true;\n      return;\n    }\n\n    if (UnlinkedMessage_1.isUnlinkedMessage(message)) {\n      this.linked = false;\n      this.resetAndReload();\n      return;\n    }\n\n    if (LocalStorageBlockedMessage_1.isLocalStorageBlockedMessage(message)) {\n      this.localStorageBlocked = true;\n\n      if (WalletLinkRelay.accountRequestCallbackIds.size > 0 && this.popupWindow) {\n        Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => this.invokeCallback(Web3ResponseMessage_1.Web3ResponseMessage({\n          id,\n          response: Web3Response_1.ErrorResponse(Web3Method_1.Web3Method.requestEthereumAccounts, BLOCKED_LOCAL_STORAGE_ERROR_MESSAGE)\n        })));\n        WalletLinkRelay.accountRequestCallbackIds.clear();\n        walletLinkBlockedDialog.show();\n        this.closePopupWindow();\n      }\n\n      return;\n    }\n  }\n\n  handleBeforeUnload(_evt) {\n    this.closePopupWindow();\n  }\n\n}\n\nWalletLinkRelay.callbacks = new Map();\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n\n__decorate([bind_decorator_1.default], WalletLinkRelay.prototype, \"handleMessage\", null);\n\n__decorate([bind_decorator_1.default], WalletLinkRelay.prototype, \"handleBeforeUnload\", null);\n\nexports.WalletLinkRelay = WalletLinkRelay;","map":{"version":3,"sources":["/workspace/uniswap-exchange/node_modules/walletlink/dist/WalletLinkRelay.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__importDefault","mod","__esModule","__importStar","result","k","hasOwnProperty","call","exports","value","bind_decorator_1","require","crypto_1","url_1","ScopedLocalStorage_1","LinkedMessage_1","LocalStorageBlockedMessage_1","SessionIdRequestMessage_1","SessionIdResponseMessage_1","UnlinkedMessage_1","Web3Method_1","Web3RequestCanceledMessage_1","Web3RequestMessage_1","Web3Response_1","Web3ResponseMessage_1","util_1","walletLinkBlockedDialog","WalletLinkNotification_1","LOCAL_STORAGE_SESSION_ID_KEY","BLOCKED_LOCAL_STORAGE_ERROR_MESSAGE","WalletLinkRelay","constructor","options","iframeEl","popupUrl","popupWindow","sessionId","appName","appLogoUrl","linked","iframeLoaded","localStorageBlocked","actionsPendingIframeLoad","actionsPendingSessionId","walletLinkUrl","u","default","parse","walletLinkOrigin","protocol","host","storage","ScopedLocalStorage","getStorageItem","setAppInfo","injectIframe","Error","document","createElement","className","width","height","style","opacity","pointerEvents","position","top","right","setAttribute","src","window","addEventListener","handleMessage","handleBeforeUnload","onIframeLoad","removeEventListener","postIPCMessage","SessionIdRequestMessage","forEach","action","documentElement","appendChild","getItem","setStorageItem","setItem","requestEthereumAccounts","sendRequest","method","Web3Method","params","signEthereumMessage","message","address","addPrefix","typedDataJson","hexStringFromBuffer","ethereumAddressFromSignedMessage","signature","signEthereumTransaction","fromAddress","toAddress","weiValue","bigIntStringFromBN","data","nonce","gasPriceInWei","gasLimit","chainId","shouldSubmit","signAndSubmitEthereumTransaction","submitEthereumTransaction","signedTransaction","scanQRCode","regExp","arbitraryRequest","arbitrary","request","show","Promise","reject","resolve","contentWindow","id","randomBytes","toString","cancel","Web3RequestCanceledMessage","invokeCallback","Web3ResponseMessage","response","ErrorResponse","notification","hide","reset","openPopupWindow","showProgressBar","autoExpandAfter","buttonInfo2","buttonLabel2","onClickButton2","isRequestAccounts","showPopup","buttonInfo1","buttonLabel1","onClickButton1","buttonInfo3","buttonLabel3","onClickButton3","accountRequestCallbackIds","add","callbacks","set","closePopupWindow","errorMessage","WalletLinkNotification","Web3RequestMessage","push","postMessage","path","opener","location","href","focus","left","Math","floor","outerWidth","screenX","outerHeight","screenY","open","join","close","callback","get","delete","resetAndReload","clear","reload","evt","origin","isWeb3ResponseMessage","isRequestEthereumAccountsResponse","Array","from","values","assign","isSessionIdResponseMessage","isLinkedMessage","isUnlinkedMessage","isLocalStorageBlockedMessage","size","_evt","Map","Set","prototype"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2019 Coinbase, Inc. <https://coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst url_1 = __importDefault(require(\"url\"));\nconst ScopedLocalStorage_1 = require(\"./ScopedLocalStorage\");\nconst LinkedMessage_1 = require(\"./types/LinkedMessage\");\nconst LocalStorageBlockedMessage_1 = require(\"./types/LocalStorageBlockedMessage\");\nconst SessionIdRequestMessage_1 = require(\"./types/SessionIdRequestMessage\");\nconst SessionIdResponseMessage_1 = require(\"./types/SessionIdResponseMessage\");\nconst UnlinkedMessage_1 = require(\"./types/UnlinkedMessage\");\nconst Web3Method_1 = require(\"./types/Web3Method\");\nconst Web3RequestCanceledMessage_1 = require(\"./types/Web3RequestCanceledMessage\");\nconst Web3RequestMessage_1 = require(\"./types/Web3RequestMessage\");\nconst Web3Response_1 = require(\"./types/Web3Response\");\nconst Web3ResponseMessage_1 = require(\"./types/Web3ResponseMessage\");\nconst util_1 = require(\"./util\");\nconst walletLinkBlockedDialog = __importStar(require(\"./walletLinkBlockedDialog\"));\nconst WalletLinkNotification_1 = require(\"./WalletLinkNotification\");\nconst LOCAL_STORAGE_SESSION_ID_KEY = \"SessionId\";\nconst BLOCKED_LOCAL_STORAGE_ERROR_MESSAGE = \"Browser is blocking third-party localStorage usage. To continue, \" +\n    \"turn off third-party storage blocking or whitelist WalletLink.\";\nclass WalletLinkRelay {\n    constructor(options) {\n        this.iframeEl = null;\n        this.popupUrl = null;\n        this.popupWindow = null;\n        this.sessionId = null;\n        this.appName = \"\";\n        this.appLogoUrl = null;\n        this.linked = false;\n        this.iframeLoaded = false;\n        this.localStorageBlocked = false;\n        this.actionsPendingIframeLoad = [];\n        this.actionsPendingSessionId = [];\n        this.walletLinkUrl = options.walletLinkUrl;\n        const u = url_1.default.parse(this.walletLinkUrl);\n        this.walletLinkOrigin = `${u.protocol}//${u.host}`;\n        this.storage = new ScopedLocalStorage_1.ScopedLocalStorage(`__WalletLink__:${this.walletLinkOrigin}`);\n        this.sessionId = this.getStorageItem(LOCAL_STORAGE_SESSION_ID_KEY) || null;\n    }\n    setAppInfo(appName, appLogoUrl) {\n        this.appName = appName;\n        this.appLogoUrl = appLogoUrl;\n    }\n    injectIframe() {\n        if (this.iframeEl) {\n            throw new Error(\"iframe already injected!\");\n        }\n        const iframeEl = document.createElement(\"iframe\");\n        iframeEl.className = \"_WalletLinkBridge\";\n        iframeEl.width = \"1\";\n        iframeEl.height = \"1\";\n        iframeEl.style.opacity = \"0\";\n        iframeEl.style.pointerEvents = \"none\";\n        iframeEl.style.position = \"absolute\";\n        iframeEl.style.top = \"0\";\n        iframeEl.style.right = \"0\";\n        iframeEl.setAttribute(\"sandbox\", \"allow-scripts allow-popups allow-same-origin\");\n        iframeEl.src = `${this.walletLinkUrl}/#/bridge`;\n        this.iframeEl = iframeEl;\n        window.addEventListener(\"message\", this.handleMessage, false);\n        window.addEventListener(\"beforeunload\", this.handleBeforeUnload, false);\n        const onIframeLoad = () => {\n            this.iframeLoaded = true;\n            iframeEl.removeEventListener(\"load\", onIframeLoad, false);\n            this.postIPCMessage(SessionIdRequestMessage_1.SessionIdRequestMessage());\n            this.actionsPendingIframeLoad.forEach(action => action());\n            this.actionsPendingIframeLoad = [];\n        };\n        iframeEl.addEventListener(\"load\", onIframeLoad, false);\n        document.documentElement.appendChild(iframeEl);\n    }\n    getStorageItem(key) {\n        return this.storage.getItem(key);\n    }\n    setStorageItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    requestEthereumAccounts() {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.requestEthereumAccounts,\n            params: {\n                appName: this.appName,\n                appLogoUrl: this.appLogoUrl || null\n            }\n        });\n    }\n    signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumMessage,\n            params: {\n                message: util_1.hexStringFromBuffer(message, true),\n                address,\n                addPrefix,\n                typedDataJson: typedDataJson || null\n            }\n        });\n    }\n    ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n            params: {\n                message: util_1.hexStringFromBuffer(message, true),\n                signature: util_1.hexStringFromBuffer(signature, true),\n                addPrefix\n            }\n        });\n    }\n    signEthereumTransaction(params) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumTransaction,\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: util_1.bigIntStringFromBN(params.weiValue),\n                data: util_1.hexStringFromBuffer(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: false\n            }\n        });\n    }\n    signAndSubmitEthereumTransaction(params) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumTransaction,\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: util_1.bigIntStringFromBN(params.weiValue),\n                data: util_1.hexStringFromBuffer(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: true\n            }\n        });\n    }\n    submitEthereumTransaction(signedTransaction, chainId) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.submitEthereumTransaction,\n            params: {\n                signedTransaction: util_1.hexStringFromBuffer(signedTransaction, true),\n                chainId\n            }\n        });\n    }\n    scanQRCode(regExp) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.scanQRCode,\n            params: { regExp }\n        });\n    }\n    arbitraryRequest(data) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.arbitrary,\n            params: { data }\n        });\n    }\n    sendRequest(request) {\n        if (this.localStorageBlocked) {\n            walletLinkBlockedDialog.show();\n            return Promise.reject(new Error(BLOCKED_LOCAL_STORAGE_ERROR_MESSAGE));\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.iframeEl || !this.iframeEl.contentWindow) {\n                return reject(\"iframe is not initialized\");\n            }\n            const id = crypto_1.default.randomBytes(8).toString(\"hex\");\n            const cancel = () => {\n                this.postIPCMessage(Web3RequestCanceledMessage_1.Web3RequestCanceledMessage(id));\n                this.invokeCallback(Web3ResponseMessage_1.Web3ResponseMessage({\n                    id,\n                    response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n                }));\n                if (notification) {\n                    notification.hide();\n                }\n            };\n            const reset = () => {\n                this.openPopupWindow(\"/reset\");\n                if (notification) {\n                    notification.hide();\n                }\n            };\n            const options = {\n                showProgressBar: true,\n                autoExpandAfter: 10000,\n                buttonInfo2: \"Made a mistake?\",\n                buttonLabel2: \"Cancel\",\n                onClickButton2: cancel\n            };\n            const isRequestAccounts = request.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n            if (!this.linked && isRequestAccounts) {\n                const showPopup = () => {\n                    this.openPopupWindow(`/link?id=${this.sessionId}`);\n                };\n                showPopup();\n                options.message = \"Requesting to connect to your wallet...\";\n                options.buttonInfo1 = \"Donâ€™t see the popup?\";\n                options.buttonLabel1 = \"Show window\";\n                options.onClickButton1 = showPopup;\n            }\n            else {\n                options.message = \"Pushed a request to your wallet...\";\n                options.buttonInfo3 = \"Not receiving requests?\";\n                options.buttonLabel3 = \"Reconnect\";\n                options.onClickButton3 = reset;\n            }\n            if (isRequestAccounts) {\n                WalletLinkRelay.accountRequestCallbackIds.add(id);\n            }\n            WalletLinkRelay.callbacks.set(id, response => {\n                this.closePopupWindow();\n                if (notification) {\n                    notification.hide();\n                }\n                if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            const notification = new WalletLinkNotification_1.WalletLinkNotification(options);\n            notification.show();\n            this.postIPCMessage(Web3RequestMessage_1.Web3RequestMessage({ id, request }));\n        });\n    }\n    postIPCMessage(message) {\n        if (!this.iframeLoaded) {\n            this.actionsPendingIframeLoad.push(() => {\n                this.postIPCMessage(message);\n            });\n            return;\n        }\n        if (this.iframeEl && this.iframeEl.contentWindow) {\n            this.iframeEl.contentWindow.postMessage(message, this.walletLinkOrigin);\n        }\n    }\n    openPopupWindow(path) {\n        if (!this.sessionId) {\n            this.actionsPendingSessionId.push(() => {\n                this.openPopupWindow(path);\n            });\n            return;\n        }\n        const popupUrl = `${this.walletLinkUrl}/#${path}`;\n        if (this.popupWindow && this.popupWindow.opener) {\n            if (this.popupUrl !== popupUrl) {\n                this.popupWindow.location.href = popupUrl;\n                this.popupUrl = popupUrl;\n            }\n            this.popupWindow.focus();\n            return;\n        }\n        const width = 320;\n        const height = 520;\n        const left = Math.floor(window.outerWidth / 2 - width / 2 + window.screenX);\n        const top = Math.floor(window.outerHeight / 2 - height / 2 + window.screenY);\n        this.popupUrl = popupUrl;\n        this.popupWindow = window.open(popupUrl, \"_blank\", [\n            `width=${width}`,\n            `height=${height}`,\n            `left=${left}`,\n            `top=${top}`,\n            \"location=yes\",\n            \"menubar=no\",\n            \"resizable=no\",\n            \"status=no\",\n            \"titlebar=yes\",\n            \"toolbar=no\"\n        ].join(\",\"));\n    }\n    closePopupWindow() {\n        if (this.popupWindow) {\n            this.popupWindow.close();\n            this.popupUrl = null;\n            this.popupWindow = null;\n        }\n        window.focus();\n    }\n    invokeCallback(message) {\n        const callback = WalletLinkRelay.callbacks.get(message.id);\n        if (callback) {\n            callback(message.response);\n            WalletLinkRelay.callbacks.delete(message.id);\n        }\n    }\n    resetAndReload() {\n        this.storage.clear();\n        document.location.reload();\n    }\n    handleMessage(evt) {\n        if (evt.origin !== this.walletLinkOrigin) {\n            return;\n        }\n        const message = evt.data;\n        if (Web3ResponseMessage_1.isWeb3ResponseMessage(message)) {\n            const { response } = message;\n            if (Web3Response_1.isRequestEthereumAccountsResponse(response)) {\n                Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => this.invokeCallback(Object.assign({}, message, { id })));\n                WalletLinkRelay.accountRequestCallbackIds.clear();\n                return;\n            }\n            this.invokeCallback(message);\n            return;\n        }\n        if (SessionIdResponseMessage_1.isSessionIdResponseMessage(message)) {\n            const { sessionId } = message;\n            if (this.sessionId !== null && this.sessionId !== sessionId) {\n                // sessionId changed, clear all local data and reload page\n                this.resetAndReload();\n                return;\n            }\n            this.sessionId = sessionId;\n            this.setStorageItem(LOCAL_STORAGE_SESSION_ID_KEY, sessionId);\n            this.actionsPendingSessionId.forEach(action => action());\n            this.actionsPendingSessionId = [];\n            return;\n        }\n        if (LinkedMessage_1.isLinkedMessage(message)) {\n            this.linked = true;\n            return;\n        }\n        if (UnlinkedMessage_1.isUnlinkedMessage(message)) {\n            this.linked = false;\n            this.resetAndReload();\n            return;\n        }\n        if (LocalStorageBlockedMessage_1.isLocalStorageBlockedMessage(message)) {\n            this.localStorageBlocked = true;\n            if (WalletLinkRelay.accountRequestCallbackIds.size > 0 &&\n                this.popupWindow) {\n                Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => this.invokeCallback(Web3ResponseMessage_1.Web3ResponseMessage({\n                    id,\n                    response: Web3Response_1.ErrorResponse(Web3Method_1.Web3Method.requestEthereumAccounts, BLOCKED_LOCAL_STORAGE_ERROR_MESSAGE)\n                })));\n                WalletLinkRelay.accountRequestCallbackIds.clear();\n                walletLinkBlockedDialog.show();\n                this.closePopupWindow();\n            }\n            return;\n        }\n    }\n    handleBeforeUnload(_evt) {\n        this.closePopupWindow();\n    }\n}\nWalletLinkRelay.callbacks = new Map();\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n__decorate([\n    bind_decorator_1.default\n], WalletLinkRelay.prototype, \"handleMessage\", null);\n__decorate([\n    bind_decorator_1.default\n], WalletLinkRelay.prototype, \"handleBeforeUnload\", null);\nexports.WalletLinkRelay = WalletLinkRelay;\n"]},"metadata":{},"sourceType":"script"}