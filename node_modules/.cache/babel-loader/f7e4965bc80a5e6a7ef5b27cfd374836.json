{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/pages/Pool/ModeSelector.js\";\nimport React, { useState, useCallback } from \"react\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport OversizedPanel from \"../../components/OversizedPanel\";\nimport { ReactComponent as Dropdown } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/dropdown-blue.svg\";\nimport Modal from \"../../components/Modal\";\nimport { useBodyKeyDown } from \"../../hooks\";\nimport { lighten } from \"polished\";\nconst poolTabOrder = [{\n  path: \"/add-liquidity\",\n  textKey: \"addLiquidity\",\n  regex: /\\/add-liquidity/\n}, {\n  path: \"/remove-liquidity\",\n  textKey: \"removeLiquidity\",\n  regex: /\\/remove-liquidity/\n}, {\n  path: \"/create-exchange\",\n  textKey: \"createExchange\",\n  regex: /\\/create-exchange.*/\n}];\nconst LiquidityContainer = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n  padding: 1rem 1rem;\n  font-size: 1rem;\n  color: ${({\n  theme\n}) => theme.royalBlue};\n  font-weight: 500;\n  cursor: pointer;\n\n  :hover {\n    color: ${({\n  theme\n}) => lighten(0.1, theme.royalBlue)};\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`;\nconst LiquidityLabel = styled.span`\n  flex: 1 0 auto;\n`;\nconst activeClassName = \"MODE\";\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName\n})`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  padding: 1rem;\n  margin-left: 1rem;\n  margin-right: 1rem;\n  font-size: 1rem;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({\n  theme\n}) => theme.doveGray};\n  font-size: 1rem;\n\n  &.${activeClassName} {\n    background-color: ${({\n  theme\n}) => theme.inputBackground};\n    border-radius: 3rem;\n    border: 1px solid ${({\n  theme\n}) => theme.mercuryGray};\n    font-weight: 500;\n    color: ${({\n  theme\n}) => theme.royalBlue};\n  }\n`;\nconst PoolModal = styled.div`\n  background-color: ${({\n  theme\n}) => theme.inputBackground};\n  width: 100%;\n  height: 100%;\n  padding: 2rem 0 2rem 0;\n`;\n\nconst WrappedDropdown = ({\n  isError,\n  highSlippageWarning,\n  ...rest\n}) => React.createElement(Dropdown, Object.assign({}, rest, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}));\n\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.royalBlue};\n  }\n`;\n\nfunction ModeSelector({\n  location: {\n    pathname\n  },\n  history\n}) {\n  const {\n    t\n  } = useTranslation();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const activeTabKey = poolTabOrder[poolTabOrder.findIndex(({\n    regex\n  }) => pathname.match(regex))].textKey;\n  const navigate = useCallback(direction => {\n    const tabIndex = poolTabOrder.findIndex(({\n      regex\n    }) => pathname.match(regex));\n    history.push(poolTabOrder[(tabIndex + poolTabOrder.length + direction) % poolTabOrder.length].path);\n  }, [pathname, history]);\n  const navigateRight = useCallback(() => {\n    navigate(1);\n  }, [navigate]);\n  const navigateLeft = useCallback(() => {\n    navigate(-1);\n  }, [navigate]);\n  useBodyKeyDown(\"ArrowDown\", navigateRight, modalIsOpen);\n  useBodyKeyDown(\"ArrowUp\", navigateLeft, modalIsOpen);\n  return React.createElement(OversizedPanel, {\n    hideTop: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(LiquidityContainer, {\n    onClick: () => {\n      setModalIsOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(LiquidityLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, t(activeTabKey)), React.createElement(ColoredDropdown, {\n    alt: \"arrow down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    maxHeight: 50,\n    onDismiss: () => {\n      setModalIsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(PoolModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, poolTabOrder.map(({\n    path,\n    textKey,\n    regex\n  }) => React.createElement(StyledNavLink, {\n    key: path,\n    to: path,\n    isActive: (_, {\n      pathname\n    }) => pathname.match(regex),\n    onClick: () => {\n      setModalIsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, t(textKey))))));\n}\n\nexport default withRouter(ModeSelector);","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/pages/Pool/ModeSelector.js"],"names":["React","useState","useCallback","withRouter","NavLink","useTranslation","styled","OversizedPanel","Modal","useBodyKeyDown","lighten","poolTabOrder","path","textKey","regex","LiquidityContainer","div","theme","flexRowNoWrap","royalBlue","LiquidityLabel","span","activeClassName","StyledNavLink","attrs","doveGray","inputBackground","mercuryGray","PoolModal","WrappedDropdown","isError","highSlippageWarning","rest","ColoredDropdown","ModeSelector","location","pathname","history","t","modalIsOpen","setModalIsOpen","activeTabKey","findIndex","match","navigate","direction","tabIndex","push","length","navigateRight","navigateLeft","map","_"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { withRouter, NavLink } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nimport OversizedPanel from \"../../components/OversizedPanel\";\nimport { ReactComponent as Dropdown } from \"../../assets/images/dropdown-blue.svg\";\n\nimport Modal from \"../../components/Modal\";\nimport { useBodyKeyDown } from \"../../hooks\";\n\nimport { lighten } from \"polished\";\n\nconst poolTabOrder = [\n  {\n    path: \"/add-liquidity\",\n    textKey: \"addLiquidity\",\n    regex: /\\/add-liquidity/\n  },\n  {\n    path: \"/remove-liquidity\",\n    textKey: \"removeLiquidity\",\n    regex: /\\/remove-liquidity/\n  },\n  {\n    path: \"/create-exchange\",\n    textKey: \"createExchange\",\n    regex: /\\/create-exchange.*/\n  }\n];\n\nconst LiquidityContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  padding: 1rem 1rem;\n  font-size: 1rem;\n  color: ${({ theme }) => theme.royalBlue};\n  font-weight: 500;\n  cursor: pointer;\n\n  :hover {\n    color: ${({ theme }) => lighten(0.1, theme.royalBlue)};\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`;\n\nconst LiquidityLabel = styled.span`\n  flex: 1 0 auto;\n`;\n\nconst activeClassName = \"MODE\";\n\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  padding: 1rem;\n  margin-left: 1rem;\n  margin-right: 1rem;\n  font-size: 1rem;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 1rem;\n\n  &.${activeClassName} {\n    background-color: ${({ theme }) => theme.inputBackground};\n    border-radius: 3rem;\n    border: 1px solid ${({ theme }) => theme.mercuryGray};\n    font-weight: 500;\n    color: ${({ theme }) => theme.royalBlue};\n  }\n`;\n\nconst PoolModal = styled.div`\n  background-color: ${({ theme }) => theme.inputBackground};\n  width: 100%;\n  height: 100%;\n  padding: 2rem 0 2rem 0;\n`;\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => (\n  <Dropdown {...rest} />\n);\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`;\n\nfunction ModeSelector({ location: { pathname }, history }) {\n  const { t } = useTranslation();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const activeTabKey =\n    poolTabOrder[poolTabOrder.findIndex(({ regex }) => pathname.match(regex))]\n      .textKey;\n\n  const navigate = useCallback(\n    direction => {\n      const tabIndex = poolTabOrder.findIndex(({ regex }) =>\n        pathname.match(regex)\n      );\n      history.push(\n        poolTabOrder[\n          (tabIndex + poolTabOrder.length + direction) % poolTabOrder.length\n        ].path\n      );\n    },\n    [pathname, history]\n  );\n  const navigateRight = useCallback(() => {\n    navigate(1);\n  }, [navigate]);\n  const navigateLeft = useCallback(() => {\n    navigate(-1);\n  }, [navigate]);\n\n  useBodyKeyDown(\"ArrowDown\", navigateRight, modalIsOpen);\n  useBodyKeyDown(\"ArrowUp\", navigateLeft, modalIsOpen);\n\n  return (\n    <OversizedPanel hideTop>\n      <LiquidityContainer\n        onClick={() => {\n          setModalIsOpen(true);\n        }}\n      >\n        <LiquidityLabel>{t(activeTabKey)}</LiquidityLabel>\n        <ColoredDropdown alt=\"arrow down\" />\n      </LiquidityContainer>\n      <Modal\n        isOpen={modalIsOpen}\n        maxHeight={50}\n        onDismiss={() => {\n          setModalIsOpen(false);\n        }}\n      >\n        <PoolModal>\n          {poolTabOrder.map(({ path, textKey, regex }) => (\n            <StyledNavLink\n              key={path}\n              to={path}\n              isActive={(_, { pathname }) => pathname.match(regex)}\n              onClick={() => {\n                setModalIsOpen(false);\n              }}\n            >\n              {t(textKey)}\n            </StyledNavLink>\n          ))}\n        </PoolModal>\n      </Modal>\n    </OversizedPanel>\n  );\n}\n\nexport default withRouter(ModeSelector);\n"]},"metadata":{},"sourceType":"module"}