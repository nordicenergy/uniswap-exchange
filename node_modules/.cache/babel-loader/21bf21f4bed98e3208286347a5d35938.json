{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/components/AddressInputPanel/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { transparentize } from \"polished\";\nimport { isAddress } from \"../../utils\";\nimport { useWeb3React, useDebounce } from \"../../hooks\";\nconst InputPanel = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({\n  theme\n}) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({\n  theme\n}) => theme.inputBackground};\n  z-index: 1;\n`;\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid\n    ${({\n  error,\n  theme\n}) => error ? theme.salmonRed : theme.mercuryGray};\n\n  background-color: ${({\n  theme\n}) => theme.inputBackground};\n`;\nconst InputContainer = styled.div`\n  flex: 1;\n`;\nconst LabelRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n`;\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nconst InputRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`;\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({\n  theme\n}) => theme.inputBackground};\n\n  color: ${({\n  error,\n  theme\n}) => error ? theme.salmonRed : theme.royalBlue};\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ::placeholder {\n    color: ${({\n  theme\n}) => theme.placeholderGray};\n  }\n`;\nexport default function AddressInputPanel({\n  title,\n  initialInput = \"\",\n  onChange = () => {},\n  onError = () => {}\n}) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    library\n  } = useWeb3React();\n  const [input, setInput] = useState(initialInput.address ? initialInput.address : \"\");\n  const debouncedInput = useDebounce(input, 150);\n  const [data, setData] = useState({\n    address: undefined,\n    name: undefined\n  });\n  const [error, setError] = useState(false); // keep data and errors in sync\n\n  useEffect(() => {\n    onChange({\n      address: data.address,\n      name: data.name\n    });\n  }, [onChange, data.address, data.name]);\n  useEffect(() => {\n    onError(error);\n  }, [onError, error]); // run parser on debounced input\n\n  useEffect(() => {\n    let stale = false;\n\n    if (isAddress(debouncedInput)) {\n      try {\n        library.lookupAddress(debouncedInput).then(name => {\n          if (!stale) {\n            // if an ENS name exists, set it as the destination\n            if (name) {\n              setInput(name);\n            } else {\n              setData({\n                address: debouncedInput,\n                name: \"\"\n              });\n              setError(null);\n            }\n          }\n        }).catch(() => {\n          if (!stale) {\n            setData({\n              address: debouncedInput,\n              name: \"\"\n            });\n            setError(null);\n          }\n        });\n      } catch {\n        setData({\n          address: debouncedInput,\n          name: \"\"\n        });\n        setError(null);\n      }\n    } else {\n      if (debouncedInput !== \"\") {\n        try {\n          library.resolveName(debouncedInput).then(address => {\n            if (!stale) {\n              // if the debounced input name resolves to an address\n              if (address) {\n                setData({\n                  address: address,\n                  name: debouncedInput\n                });\n                setError(null);\n              } else {\n                setError(true);\n              }\n            }\n          }).catch(() => {\n            if (!stale) {\n              setError(true);\n            }\n          });\n        } catch {\n          setError(true);\n        }\n      }\n    }\n\n    return () => {\n      stale = true;\n    };\n  }, [debouncedInput, library, onChange, onError]);\n\n  function onInput(event) {\n    if (data.address !== undefined || data.name !== undefined) {\n      setData({\n        address: undefined,\n        name: undefined\n      });\n    }\n\n    if (error !== undefined) {\n      setError();\n    }\n\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setInput(checksummedInput || input);\n  }\n\n  return React.createElement(InputPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(ContainerRow, {\n    error: input !== \"\" && error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(InputContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(LabelRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(LabelContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, title || t(\"recipientAddress\")))), React.createElement(InputRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"text\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    autoCapitalize: \"off\",\n    spellCheck: \"false\",\n    placeholder: \"0x1234...\",\n    error: input !== \"\" && error,\n    onChange: onInput,\n    value: input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/components/AddressInputPanel/index.js"],"names":["React","useState","useEffect","styled","useTranslation","transparentize","isAddress","useWeb3React","useDebounce","InputPanel","div","theme","flexColumnNoWrap","shadowColor","inputBackground","ContainerRow","error","salmonRed","mercuryGray","InputContainer","LabelRow","flexRowNoWrap","doveGray","LabelContainer","InputRow","Input","input","royalBlue","placeholderGray","AddressInputPanel","title","initialInput","onChange","onError","t","library","setInput","address","debouncedInput","data","setData","undefined","name","setError","stale","lookupAddress","then","catch","resolveName","onInput","event","target","value","checksummedInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AAEA,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAI;IAC1B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,gBAAiB;4BACd,CAAC;AAAED,EAAAA;AAAF,CAAD,KACxBN,cAAc,CAAC,IAAD,EAAOM,KAAK,CAACE,WAAb,CAA0B;;;sBAGtB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,eAAgB;;CAN3D;AAUA,MAAMC,YAAY,GAAGZ,MAAM,CAACO,GAAI;;;;;;MAM1B,CAAC;AAAEM,EAAAA,KAAF;AAASL,EAAAA;AAAT,CAAD,KAAuBK,KAAK,GAAGL,KAAK,CAACM,SAAT,GAAqBN,KAAK,CAACO,WAAa;;sBAEpD,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,eAAgB;CAR3D;AAWA,MAAMK,cAAc,GAAGhB,MAAM,CAACO,GAAI;;CAAlC;AAIA,MAAMU,QAAQ,GAAGjB,MAAM,CAACO,GAAI;IACxB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACU,aAAc;;WAE5B,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACW,QAAS;;;;CAHzC;AASA,MAAMC,cAAc,GAAGpB,MAAM,CAACO,GAAI;;;;;;CAAlC;AAQA,MAAMc,QAAQ,GAAGrB,MAAM,CAACO,GAAI;IACxB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACU,aAAc;;;CADvC;AAMA,MAAMI,KAAK,GAAGtB,MAAM,CAACuB,KAAM;;;;;;sBAML,CAAC;AAAEf,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,eAAgB;;WAEhD,CAAC;AAAEE,EAAAA,KAAF;AAASL,EAAAA;AAAT,CAAD,KAAuBK,KAAK,GAAGL,KAAK,CAACM,SAAT,GAAqBN,KAAK,CAACgB,SAAW;;;;;aAKhE,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACiB,eAAgB;;CAblD;AAiBA,eAAe,SAASC,iBAAT,CAA2B;AACxCC,EAAAA,KADwC;AAExCC,EAAAA,YAAY,GAAG,EAFyB;AAGxCC,EAAAA,QAAQ,GAAG,MAAM,CAAE,CAHqB;AAIxCC,EAAAA,OAAO,GAAG,MAAM,CAAE;AAJsB,CAA3B,EAKZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAQ9B,cAAc,EAA5B;AAEA,QAAM;AAAE+B,IAAAA;AAAF,MAAc5B,YAAY,EAAhC;AAEA,QAAM,CAACmB,KAAD,EAAQU,QAAR,IAAoBnC,QAAQ,CAChC8B,YAAY,CAACM,OAAb,GAAuBN,YAAY,CAACM,OAApC,GAA8C,EADd,CAAlC;AAIA,QAAMC,cAAc,GAAG9B,WAAW,CAACkB,KAAD,EAAQ,GAAR,CAAlC;AAEA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBvC,QAAQ,CAAC;AAAEoC,IAAAA,OAAO,EAAEI,SAAX;AAAsBC,IAAAA,IAAI,EAAED;AAA5B,GAAD,CAAhC;AACA,QAAM,CAACzB,KAAD,EAAQ2B,QAAR,IAAoB1C,QAAQ,CAAC,KAAD,CAAlC,CAZC,CAcD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,OAAO,EAAEE,IAAI,CAACF,OAAhB;AAAyBK,MAAAA,IAAI,EAAEH,IAAI,CAACG;AAApC,KAAD,CAAR;AACD,GAFQ,EAEN,CAACV,QAAD,EAAWO,IAAI,CAACF,OAAhB,EAAyBE,IAAI,CAACG,IAA9B,CAFM,CAAT;AAGAxC,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,OAAO,CAACjB,KAAD,CAAP;AACD,GAFQ,EAEN,CAACiB,OAAD,EAAUjB,KAAV,CAFM,CAAT,CAlBC,CAsBD;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0C,KAAK,GAAG,KAAZ;;AAEA,QAAItC,SAAS,CAACgC,cAAD,CAAb,EAA+B;AAC7B,UAAI;AACFH,QAAAA,OAAO,CACJU,aADH,CACiBP,cADjB,EAEGQ,IAFH,CAEQJ,IAAI,IAAI;AACZ,cAAI,CAACE,KAAL,EAAY;AACV;AACA,gBAAIF,IAAJ,EAAU;AACRN,cAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,aAFD,MAEO;AACLF,cAAAA,OAAO,CAAC;AAAEH,gBAAAA,OAAO,EAAEC,cAAX;AAA2BI,gBAAAA,IAAI,EAAE;AAAjC,eAAD,CAAP;AACAC,cAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF;AACF,SAZH,EAaGI,KAbH,CAaS,MAAM;AACX,cAAI,CAACH,KAAL,EAAY;AACVJ,YAAAA,OAAO,CAAC;AAAEH,cAAAA,OAAO,EAAEC,cAAX;AAA2BI,cAAAA,IAAI,EAAE;AAAjC,aAAD,CAAP;AACAC,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,SAlBH;AAmBD,OApBD,CAoBE,MAAM;AACNH,QAAAA,OAAO,CAAC;AAAEH,UAAAA,OAAO,EAAEC,cAAX;AAA2BI,UAAAA,IAAI,EAAE;AAAjC,SAAD,CAAP;AACAC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KAzBD,MAyBO;AACL,UAAIL,cAAc,KAAK,EAAvB,EAA2B;AACzB,YAAI;AACFH,UAAAA,OAAO,CACJa,WADH,CACeV,cADf,EAEGQ,IAFH,CAEQT,OAAO,IAAI;AACf,gBAAI,CAACO,KAAL,EAAY;AACV;AACA,kBAAIP,OAAJ,EAAa;AACXG,gBAAAA,OAAO,CAAC;AAAEH,kBAAAA,OAAO,EAAEA,OAAX;AAAoBK,kBAAAA,IAAI,EAAEJ;AAA1B,iBAAD,CAAP;AACAK,gBAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,eAHD,MAGO;AACLA,gBAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF;AACF,WAZH,EAaGI,KAbH,CAaS,MAAM;AACX,gBAAI,CAACH,KAAL,EAAY;AACVD,cAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,WAjBH;AAkBD,SAnBD,CAmBE,MAAM;AACNA,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF;AACF;;AAED,WAAO,MAAM;AACXC,MAAAA,KAAK,GAAG,IAAR;AACD,KAFD;AAGD,GA1DQ,EA0DN,CAACN,cAAD,EAAiBH,OAAjB,EAA0BH,QAA1B,EAAoCC,OAApC,CA1DM,CAAT;;AA4DA,WAASgB,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIX,IAAI,CAACF,OAAL,KAAiBI,SAAjB,IAA8BF,IAAI,CAACG,IAAL,KAAcD,SAAhD,EAA2D;AACzDD,MAAAA,OAAO,CAAC;AAAEH,QAAAA,OAAO,EAAEI,SAAX;AAAsBC,QAAAA,IAAI,EAAED;AAA5B,OAAD,CAAP;AACD;;AACD,QAAIzB,KAAK,KAAKyB,SAAd,EAAyB;AACvBE,MAAAA,QAAQ;AACT;;AACD,UAAMjB,KAAK,GAAGwB,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACA,UAAMC,gBAAgB,GAAG/C,SAAS,CAACoB,KAAD,CAAlC;AACAU,IAAAA,QAAQ,CAACiB,gBAAgB,IAAI3B,KAArB,CAAR;AACD;;AAED,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAAK,KAAK,EAAV,IAAgBV,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOc,KAAK,IAAII,CAAC,CAAC,kBAAD,CAAjB,CADF,CADF,CADF,EAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,YAAY,EAAC,KAFf;AAGE,IAAA,WAAW,EAAC,KAHd;AAIE,IAAA,cAAc,EAAC,KAJjB;AAKE,IAAA,UAAU,EAAC,OALb;AAME,IAAA,WAAW,EAAC,WANd;AAOE,IAAA,KAAK,EAAER,KAAK,KAAK,EAAV,IAAgBV,KAPzB;AAQE,IAAA,QAAQ,EAAEiC,OARZ;AASE,IAAA,KAAK,EAAEvB,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF,CADF,CADF;AA0BD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { transparentize } from \"polished\";\n\nimport { isAddress } from \"../../utils\";\nimport { useWeb3React, useDebounce } from \"../../hooks\";\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) =>\n    transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`;\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid\n    ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n`;\n\nconst InputContainer = styled.div`\n  flex: 1;\n`;\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n`;\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`;\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.inputBackground};\n\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.placeholderGray};\n  }\n`;\n\nexport default function AddressInputPanel({\n  title,\n  initialInput = \"\",\n  onChange = () => {},\n  onError = () => {}\n}) {\n  const { t } = useTranslation();\n\n  const { library } = useWeb3React();\n\n  const [input, setInput] = useState(\n    initialInput.address ? initialInput.address : \"\"\n  );\n\n  const debouncedInput = useDebounce(input, 150);\n\n  const [data, setData] = useState({ address: undefined, name: undefined });\n  const [error, setError] = useState(false);\n\n  // keep data and errors in sync\n  useEffect(() => {\n    onChange({ address: data.address, name: data.name });\n  }, [onChange, data.address, data.name]);\n  useEffect(() => {\n    onError(error);\n  }, [onError, error]);\n\n  // run parser on debounced input\n  useEffect(() => {\n    let stale = false;\n\n    if (isAddress(debouncedInput)) {\n      try {\n        library\n          .lookupAddress(debouncedInput)\n          .then(name => {\n            if (!stale) {\n              // if an ENS name exists, set it as the destination\n              if (name) {\n                setInput(name);\n              } else {\n                setData({ address: debouncedInput, name: \"\" });\n                setError(null);\n              }\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setData({ address: debouncedInput, name: \"\" });\n              setError(null);\n            }\n          });\n      } catch {\n        setData({ address: debouncedInput, name: \"\" });\n        setError(null);\n      }\n    } else {\n      if (debouncedInput !== \"\") {\n        try {\n          library\n            .resolveName(debouncedInput)\n            .then(address => {\n              if (!stale) {\n                // if the debounced input name resolves to an address\n                if (address) {\n                  setData({ address: address, name: debouncedInput });\n                  setError(null);\n                } else {\n                  setError(true);\n                }\n              }\n            })\n            .catch(() => {\n              if (!stale) {\n                setError(true);\n              }\n            });\n        } catch {\n          setError(true);\n        }\n      }\n    }\n\n    return () => {\n      stale = true;\n    };\n  }, [debouncedInput, library, onChange, onError]);\n\n  function onInput(event) {\n    if (data.address !== undefined || data.name !== undefined) {\n      setData({ address: undefined, name: undefined });\n    }\n    if (error !== undefined) {\n      setError();\n    }\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setInput(checksummedInput || input);\n  }\n\n  return (\n    <InputPanel>\n      <ContainerRow error={input !== \"\" && error}>\n        <InputContainer>\n          <LabelRow>\n            <LabelContainer>\n              <span>{title || t(\"recipientAddress\")}</span>\n            </LabelContainer>\n          </LabelRow>\n          <InputRow>\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder=\"0x1234...\"\n              error={input !== \"\" && error}\n              onChange={onInput}\n              value={input}\n            />\n          </InputRow>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}