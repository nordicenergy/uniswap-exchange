{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import ReactGA from'react-ga';import Web3Provider,{Connectors}from'web3-react';import ThemeProvider,{GlobalStyle}from'./theme';import ApplicationContextProvider,{Updater as ApplicationContextUpdater}from'./contexts/Application';import TransactionContextProvider,{Updater as TransactionContextUpdater}from'./contexts/Transactions';import TokensContextProvider from'./contexts/Tokens';import BalancesContextProvider from'./contexts/Balances';import AllowancesContextProvider from'./contexts/Allowances';import App from'./pages/App';import InjectedConnector from'./InjectedConnector';import'./i18n';if(process.env.NODE_ENV==='production'){ReactGA.initialize('UA-128182339-1');}else{ReactGA.initialize('test',{testMode:true});}ReactGA.pageview(window.location.pathname+window.location.search);var NetworkOnlyConnector=Connectors.NetworkOnlyConnector;var Injected=new InjectedConnector({supportedNetworks:[Number(process.env.REACT_APP_NETWORK_ID||'1')]});var Network=new NetworkOnlyConnector({providerURL:process.env.REACT_APP_NETWORK_URL||''});var connectors={Injected:Injected,Network:Network};function ContextProviders(_ref){var children=_ref.children;return React.createElement(ApplicationContextProvider,null,React.createElement(TransactionContextProvider,null,React.createElement(TokensContextProvider,null,React.createElement(BalancesContextProvider,null,React.createElement(AllowancesContextProvider,null,children)))));}function Updaters(){return React.createElement(React.Fragment,null,React.createElement(ApplicationContextUpdater,null),React.createElement(TransactionContextUpdater,null));}ReactDOM.render(React.createElement(ThemeProvider,null,React.createElement(React.Fragment,null,React.createElement(GlobalStyle,null),React.createElement(Web3Provider,{connectors:connectors,libraryName:\"ethers.js\"},React.createElement(ContextProviders,null,React.createElement(Updaters,null),React.createElement(App,null))))),document.getElementById('root'));","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/index.js"],"names":["React","ReactDOM","ReactGA","Web3Provider","Connectors","ThemeProvider","GlobalStyle","ApplicationContextProvider","Updater","ApplicationContextUpdater","TransactionContextProvider","TransactionContextUpdater","TokensContextProvider","BalancesContextProvider","AllowancesContextProvider","App","InjectedConnector","process","env","NODE_ENV","initialize","testMode","pageview","window","location","pathname","search","NetworkOnlyConnector","Injected","supportedNetworks","Number","REACT_APP_NETWORK_ID","Network","providerURL","REACT_APP_NETWORK_URL","connectors","ContextProviders","children","Updaters","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,MAAOC,CAAAA,YAAP,EAAuBC,UAAvB,KAAyC,YAAzC,CAEA,MAAOC,CAAAA,aAAP,EAAwBC,WAAxB,KAA2C,SAA3C,CACA,MAAOC,CAAAA,0BAAP,EAAqCC,OAAO,GAAIC,CAAAA,yBAAhD,KAAiF,wBAAjF,CACA,MAAOC,CAAAA,0BAAP,EAAqCF,OAAO,GAAIG,CAAAA,yBAAhD,KAAiF,yBAAjF,CACA,MAAOC,CAAAA,qBAAP,KAAkC,mBAAlC,CACA,MAAOC,CAAAA,uBAAP,KAAoC,qBAApC,CACA,MAAOC,CAAAA,yBAAP,KAAsC,uBAAtC,CAEA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA,MAAO,QAAP,CAEA,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzCjB,OAAO,CAACkB,UAAR,CAAmB,gBAAnB,EACD,CAFD,IAEO,CACLlB,OAAO,CAACkB,UAAR,CAAmB,MAAnB,CAA2B,CAAEC,QAAQ,CAAE,IAAZ,CAA3B,EACD,CACDnB,OAAO,CAACoB,QAAR,CAAiBC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAA2BF,MAAM,CAACC,QAAP,CAAgBE,MAA5D,E,GAEQC,CAAAA,oB,CAAyBvB,U,CAAzBuB,oB,CACR,GAAMC,CAAAA,QAAQ,CAAG,GAAIZ,CAAAA,iBAAJ,CAAsB,CAAEa,iBAAiB,CAAE,CAACC,MAAM,CAACb,OAAO,CAACC,GAAR,CAAYa,oBAAZ,EAAoC,GAArC,CAAP,CAArB,CAAtB,CAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAIL,CAAAA,oBAAJ,CAAyB,CAAEM,WAAW,CAAEhB,OAAO,CAACC,GAAR,CAAYgB,qBAAZ,EAAqC,EAApD,CAAzB,CAAhB,CACA,GAAMC,CAAAA,UAAU,CAAG,CAAEP,QAAQ,CAARA,QAAF,CAAYI,OAAO,CAAPA,OAAZ,CAAnB,CAEA,QAASI,CAAAA,gBAAT,MAAwC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACtC,MACE,qBAAC,0BAAD,MACE,oBAAC,0BAAD,MACE,oBAAC,qBAAD,MACE,oBAAC,uBAAD,MACE,oBAAC,yBAAD,MAA4BA,QAA5B,CADF,CADF,CADF,CADF,CADF,CAWD,CAED,QAASC,CAAAA,QAAT,EAAoB,CAClB,MACE,yCACE,oBAAC,yBAAD,MADF,CAEE,oBAAC,yBAAD,MAFF,CADF,CAMD,CAEDrC,QAAQ,CAACsC,MAAT,CACE,oBAAC,aAAD,MACE,wCACE,oBAAC,WAAD,MADF,CAEE,oBAAC,YAAD,EAAc,UAAU,CAAEJ,UAA1B,CAAsC,WAAW,CAAC,WAAlD,EACE,oBAAC,gBAAD,MACE,oBAAC,QAAD,MADF,CAEE,oBAAC,GAAD,MAFF,CADF,CAFF,CADF,CADF,CAYEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport Web3Provider, { Connectors } from 'web3-react'\n\nimport ThemeProvider, { GlobalStyle } from './theme'\nimport ApplicationContextProvider, { Updater as ApplicationContextUpdater } from './contexts/Application'\nimport TransactionContextProvider, { Updater as TransactionContextUpdater } from './contexts/Transactions'\nimport TokensContextProvider from './contexts/Tokens'\nimport BalancesContextProvider from './contexts/Balances'\nimport AllowancesContextProvider from './contexts/Allowances'\n\nimport App from './pages/App'\nimport InjectedConnector from './InjectedConnector'\n\nimport './i18n'\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-128182339-1')\n} else {\n  ReactGA.initialize('test', { testMode: true })\n}\nReactGA.pageview(window.location.pathname + window.location.search)\n\nconst { NetworkOnlyConnector } = Connectors\nconst Injected = new InjectedConnector({ supportedNetworks: [Number(process.env.REACT_APP_NETWORK_ID || '1')] })\nconst Network = new NetworkOnlyConnector({ providerURL: process.env.REACT_APP_NETWORK_URL || '' })\nconst connectors = { Injected, Network }\n\nfunction ContextProviders({ children }) {\n  return (\n    <ApplicationContextProvider>\n      <TransactionContextProvider>\n        <TokensContextProvider>\n          <BalancesContextProvider>\n            <AllowancesContextProvider>{children}</AllowancesContextProvider>\n          </BalancesContextProvider>\n        </TokensContextProvider>\n      </TransactionContextProvider>\n    </ApplicationContextProvider>\n  )\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <ApplicationContextUpdater />\n      <TransactionContextUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <ThemeProvider>\n    <>\n      <GlobalStyle />\n      <Web3Provider connectors={connectors} libraryName=\"ethers.js\">\n        <ContextProviders>\n          <Updaters />\n          <App />\n        </ContextProviders>\n      </Web3Provider>\n    </>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}