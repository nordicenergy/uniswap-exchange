{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/theme/index.js\";\nimport React, { useEffect } from 'react';\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle, css } from 'styled-components';\nimport { getQueryParam, checkSupportedTheme } from '../utils';\nimport { SUPPORTED_THEMES } from '../constants';\nimport { useDarkModeManager } from '../contexts/LocalStorage';\nexport * from './components';\nconst MEDIA_WIDTHS = {\n  upToSmall: 600,\n  upToMedium: 960,\n  upToLarge: 1280\n};\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  accumulator[size] = (...args) => css`\n    @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n      ${css(...args)}\n    }\n  `;\n\n  return accumulator;\n}, {});\nconst white = '#FFFFFF';\nconst black = '#000000';\nexport default function ThemeProvider({\n  children\n}) {\n  const [darkMode, toggleDarkMode] = useDarkModeManager();\n  const themeURL = checkSupportedTheme(getQueryParam(window.location, 'theme'));\n  const themeToRender = themeURL ? themeURL.toUpperCase() === SUPPORTED_THEMES.DARK ? true : themeURL.toUpperCase() === SUPPORTED_THEMES.LIGHT ? false : darkMode : darkMode;\n  useEffect(() => {\n    toggleDarkMode(themeToRender);\n  }, [toggleDarkMode, themeToRender]);\n  return React.createElement(StyledComponentsThemeProvider, {\n    theme: theme(themeToRender),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, children);\n}\n\nconst theme = darkMode => ({\n  white,\n  black,\n  textColor: darkMode ? white : ' #1A1A1A',\n  greyText: darkMode ? white : '#D9D9D9',\n  // for setting css on <html>\n  backgroundColor: darkMode ? '#333639' : white,\n  modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\n  inputBackground: darkMode ? '#202124' : white,\n  placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\n  shadowColor: darkMode ? '#000' : '#E6B800',\n  // grays\n  concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n  silverGray: darkMode ? '#737373' : '#C4C4C4',\n  chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n  doveGray: darkMode ? '#C4C4C4' : '#737373',\n  mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\n  activeGray: darkMode ? '#292C2F' : '#F7F8FA',\n  buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\n  tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\n  //blacks\n  charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\n  // blues\n  zumthorBlue: darkMode ? '#262626' : '#EBF4FF',\n  malibuBlue: darkMode ? '#E6B800' : '#E6B800',\n  royalBlue: darkMode ? '#E6B800' : '#E6B800',\n  loadingBlue: darkMode ? '#E4f0FF' : '#E4f0FF',\n  // purples\n  wisteriaPurple: '#E6B800',\n  // reds\n  salmonRed: '#FF6871',\n  // orange\n  pizazzOrange: '#B38F00',\n  // yellows\n  warningYellow: '#FFE270',\n  // pink\n  uniswapPink: '#E6B800',\n  //green\n  connectedGreen: '#27AE60',\n  //branded\n  metaMaskOrange: '#CCA300',\n  //specific\n  textHover: darkMode ? theme.uniswapPink : theme.doveGray,\n  // connect button when loggedout\n  buttonFaded: darkMode ? '#E6B800' : '#737373',\n  // media queries\n  mediaWidth: mediaWidthTemplates,\n  // css snippets\n  flexColumnNoWrap: css`\n    display: flex;\n    flex-flow: column nowrap;\n  `,\n  flexRowNoWrap: css`\n    display: flex;\n    flex-flow: row nowrap;\n  `\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: 'Inter', sans-serif; }\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;    \n  }\n\n  body > div {\n    height: 100%;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n}\n\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({\n  theme\n}) => theme.textColor};\n    background-color: ${({\n  theme\n}) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n`;","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/theme/index.js"],"names":["React","useEffect","ThemeProvider","StyledComponentsThemeProvider","createGlobalStyle","css","getQueryParam","checkSupportedTheme","SUPPORTED_THEMES","useDarkModeManager","MEDIA_WIDTHS","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","args","white","black","children","darkMode","toggleDarkMode","themeURL","window","location","themeToRender","toUpperCase","DARK","LIGHT","theme","textColor","greyText","backgroundColor","modalBackground","inputBackground","placeholderGray","shadowColor","concreteGray","mercuryGray","silverGray","chaliceGray","doveGray","mineshaftGray","activeGray","buttonOutlineGrey","tokenRowHover","charcoalBlack","zumthorBlue","malibuBlue","royalBlue","loadingBlue","wisteriaPurple","salmonRed","pizazzOrange","warningYellow","uniswapPink","connectedGreen","metaMaskOrange","textHover","buttonFaded","mediaWidth","flexColumnNoWrap","flexRowNoWrap","GlobalStyle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle, css } from 'styled-components'\nimport { getQueryParam, checkSupportedTheme } from '../utils'\nimport { SUPPORTED_THEMES } from '../constants'\nimport { useDarkModeManager } from '../contexts/LocalStorage'\n\nexport * from './components'\n\nconst MEDIA_WIDTHS = {\n    upToSmall: 600,\n    upToMedium: 960,\n    upToLarge: 1280\n}\n\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n    accumulator[size] = (...args) => css`\n    @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n      ${css(...args)}\n    }\n  `\n    return accumulator\n}, {})\n\nconst white = '#FFFFFF'\nconst black = '#000000'\n\nexport default function ThemeProvider({ children }) {\n    const [darkMode, toggleDarkMode] = useDarkModeManager()\n    const themeURL = checkSupportedTheme(getQueryParam(window.location, 'theme'))\n    const themeToRender = themeURL\n        ? themeURL.toUpperCase() === SUPPORTED_THEMES.DARK\n            ? true\n            : themeURL.toUpperCase() === SUPPORTED_THEMES.LIGHT\n                ? false\n                : darkMode\n        : darkMode\n    useEffect(() => {\n        toggleDarkMode(themeToRender)\n    }, [toggleDarkMode, themeToRender])\n    return <StyledComponentsThemeProvider theme={theme(themeToRender)}>{children}</StyledComponentsThemeProvider>\n}\n\nconst theme = darkMode => ({\n    white,\n    black,\n    textColor: darkMode ? white : ' #1A1A1A',\n    greyText: darkMode ? white : '#D9D9D9',\n\n    // for setting css on <html>\n    backgroundColor: darkMode ? '#333639' : white,\n\n    modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\n    inputBackground: darkMode ? '#202124' : white,\n    placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\n    shadowColor: darkMode ? '#000' : '#E6B800',\n\n    // grays\n    concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n    mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n    silverGray: darkMode ? '#737373' : '#C4C4C4',\n    chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n    doveGray: darkMode ? '#C4C4C4' : '#737373',\n    mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\n    activeGray: darkMode ? '#292C2F' : '#F7F8FA',\n    buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\n    tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\n\n    //blacks\n    charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\n    // blues\n    zumthorBlue: darkMode ? '#262626' : '#EBF4FF',\n    malibuBlue: darkMode ? '#E6B800' : '#E6B800',\n    royalBlue: darkMode ? '#E6B800' : '#E6B800',\n    loadingBlue: darkMode ? '#E4f0FF' : '#E4f0FF',\n\n    // purples\n    wisteriaPurple: '#E6B800',\n    // reds\n    salmonRed: '#FF6871',\n    // orange\n    pizazzOrange: '#B38F00',\n    // yellows\n    warningYellow: '#FFE270',\n    // pink\n    uniswapPink: '#E6B800',\n    //green\n    connectedGreen: '#27AE60',\n\n    //branded\n    metaMaskOrange: '#CCA300',\n\n    //specific\n    textHover: darkMode ? theme.uniswapPink : theme.doveGray,\n\n    // connect button when loggedout\n    buttonFaded: darkMode ? '#E6B800' : '#737373',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n    display: flex;\n    flex-flow: column nowrap;\n  `,\n    flexRowNoWrap: css`\n    display: flex;\n    flex-flow: row nowrap;\n  `\n})\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: 'Inter', sans-serif; }\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;    \n  }\n\n  body > div {\n    height: 100%;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n}\n\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n`\n"]},"metadata":{},"sourceType":"module"}