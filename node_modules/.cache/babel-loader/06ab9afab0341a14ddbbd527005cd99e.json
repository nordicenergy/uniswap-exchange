{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/workspace/uniswap-exchange/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{createContext,useContext,useReducer,useMemo,useCallback,useEffect,useRef,useState}from'react';import{BigNumber}from'@uniswap/sdk';import{useWeb3React}from'../hooks';import{safeAccess,isAddress,getEtherBalance,getTokenBalance}from'../utils';import{useBlockNumber}from'./Application';import{useTokenDetails,useAllTokenDetails}from'./Tokens';import{getUSDPrice}from'../utils/price';var UPDATE='UPDATE';var UPDATE_ALL_FOR_ACCOUNT='UPDATE_ALL_FOR_ACCOUNT';var UPDATE_ALL_FOR_EXCHANGES='UPDATE_ALL_FOR_EXCHANGES';var BalancesContext=createContext();function useBalancesContext(){return useContext(BalancesContext);}function reducer(state,_ref){var type=_ref.type,payload=_ref.payload;switch(type){case UPDATE:{var networkId=payload.networkId,address=payload.address,tokenAddress=payload.tokenAddress,value=payload.value,blockNumber=payload.blockNumber;return _objectSpread({},state,_defineProperty({},networkId,_objectSpread({},safeAccess(state,[networkId])||{},_defineProperty({},address,_objectSpread({},safeAccess(state,[networkId,address])||{},_defineProperty({},tokenAddress,{value:value,blockNumber:blockNumber}))))));}case UPDATE_ALL_FOR_ACCOUNT:{var _networkId=payload.networkId,_address=payload.address,tokenAddresses=payload.tokenAddresses,values=payload.values;return _objectSpread({},state,_defineProperty({},_networkId,_objectSpread({},safeAccess(state,[_networkId])||{},_defineProperty({},_address,_objectSpread({},tokenAddresses.reduce(function(accumulator,currentValue,i){accumulator[currentValue]={value:values[i]};return accumulator;},{}),{},safeAccess(state,[_networkId,_address])||{})))));}case UPDATE_ALL_FOR_EXCHANGES:{var _networkId2=payload.networkId,exchangeAddresses=payload.exchangeAddresses,_tokenAddresses=payload.tokenAddresses,_values=payload.values;return _objectSpread({},state,_defineProperty({},_networkId2,_objectSpread({},safeAccess(state,[_networkId2])||{},{},exchangeAddresses.reduce(function(accumulator,currentValue,i){accumulator[currentValue]=_objectSpread({},safeAccess(state,[_networkId2,currentValue]),_defineProperty({},_tokenAddresses[i],{value:_values[i]}));return accumulator;},{}))));}default:{throw Error(\"Unexpected action type in BalancesContext reducer: '\".concat(type,\"'.\"));}}}export default function Provider(_ref2){var children=_ref2.children;var _useReducer=useReducer(reducer,{}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var update=useCallback(function(networkId,address,tokenAddress,value,blockNumber){dispatch({type:UPDATE,payload:{networkId:networkId,address:address,tokenAddress:tokenAddress,value:value,blockNumber:blockNumber}});},[]);var updateAllForAccount=useCallback(function(networkId,address,tokenAddresses,values){dispatch({type:UPDATE_ALL_FOR_ACCOUNT,payload:{networkId:networkId,address:address,tokenAddresses:tokenAddresses,values:values}});},[]);var updateAllForExchanges=useCallback(function(networkId,exchangeAddresses,tokenAddresses,values){dispatch({type:UPDATE_ALL_FOR_EXCHANGES,payload:{networkId:networkId,exchangeAddresses:exchangeAddresses,tokenAddresses:tokenAddresses,values:values}});},[]);return React.createElement(BalancesContext.Provider,{value:useMemo(function(){return[state,{update:update,updateAllForAccount:updateAllForAccount,updateAllForExchanges:updateAllForExchanges}];},[state,update,updateAllForAccount,updateAllForExchanges])},children);}var STAGGER_TIME=2500;export function Updater(){var _useWeb3React=useWeb3React(),library=_useWeb3React.library,chainId=_useWeb3React.chainId,account=_useWeb3React.account;var allTokens=useAllTokenDetails();var _useBalancesContext=useBalancesContext(),_useBalancesContext2=_slicedToArray(_useBalancesContext,2),state=_useBalancesContext2[0],_useBalancesContext2$=_useBalancesContext2[1],updateAllForAccount=_useBalancesContext2$.updateAllForAccount,updateAllForExchanges=_useBalancesContext2$.updateAllForExchanges;var stateRef=useRef(state);stateRef.current=state;useEffect(function(){var getData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var allTokensWithAnExchange;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(chainId&&library&&account){// get 1 eth + all token balances for the account\nPromise.all(Object.keys(allTokens).map(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenAddress){var _ref5,existingValue;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve){return setTimeout(resolve,STAGGER_TIME*Math.random());});case 2:_ref5=safeAccess(stateRef.current,[chainId,account,tokenAddress])||{},existingValue=_ref5.value;_context.t0=existingValue;if(_context.t0){_context.next=8;break;}_context.next=7;return tokenAddress==='ETH'?getEtherBalance(account,library).catch(function(){return null;}):getTokenBalance(tokenAddress,account,library).catch(function(){return null;});case 7:_context.t0=_context.sent;case 8:return _context.abrupt(\"return\",_context.t0);case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref4.apply(this,arguments);};}())).then(function(balances){updateAllForAccount(chainId,account,Object.keys(allTokens),balances);});allTokensWithAnExchange=Object.keys(allTokens).filter(function(tokenAddress){return tokenAddress!=='ETH';});// get all eth balances for all exchanges\nPromise.all(allTokensWithAnExchange.map(/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenAddress){var exchangeAddress,_ref7,existingValue;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return new Promise(function(resolve){return setTimeout(resolve,STAGGER_TIME*Math.random());});case 2:exchangeAddress=allTokens[tokenAddress].exchangeAddress;_ref7=safeAccess(stateRef.current,[chainId,exchangeAddress,'ETH'])||{},existingValue=_ref7.value;_context2.t0=existingValue;if(_context2.t0){_context2.next=9;break;}_context2.next=8;return getEtherBalance(exchangeAddress,library).catch(function(){return null;});case 8:_context2.t0=_context2.sent;case 9:return _context2.abrupt(\"return\",_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref6.apply(this,arguments);};}())).then(function(ethBalances){updateAllForExchanges(chainId,allTokensWithAnExchange.map(function(tokenAddress){return allTokens[tokenAddress].exchangeAddress;}),Array(allTokensWithAnExchange.length).fill('ETH'),ethBalances);});// get all token balances for all exchanges\nPromise.all(allTokensWithAnExchange.map(/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tokenAddress){var exchangeAddress,_ref9,existingValue;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return new Promise(function(resolve){return setTimeout(resolve,STAGGER_TIME*Math.random());});case 2:exchangeAddress=allTokens[tokenAddress].exchangeAddress;_ref9=safeAccess(stateRef.current,[chainId,exchangeAddress,tokenAddress])||{},existingValue=_ref9.value;_context3.t0=existingValue;if(_context3.t0){_context3.next=9;break;}_context3.next=8;return getTokenBalance(tokenAddress,exchangeAddress,library).catch(function(){return null;});case 8:_context3.t0=_context3.sent;case 9:return _context3.abrupt(\"return\",_context3.t0);case 10:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref8.apply(this,arguments);};}())).then(function(tokenBalances){updateAllForExchanges(chainId,allTokensWithAnExchange.map(function(tokenAddress){return allTokens[tokenAddress].exchangeAddress;}),allTokensWithAnExchange.map(function(tokenAddress){return tokenAddress;}),tokenBalances);});}case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function getData(){return _ref3.apply(this,arguments);};}();getData();},[chainId,library,account,allTokens,updateAllForAccount,updateAllForExchanges]);return null;}export function useAllBalances(){var _useWeb3React2=useWeb3React(),chainId=_useWeb3React2.chainId;var _useBalancesContext3=useBalancesContext(),_useBalancesContext4=_slicedToArray(_useBalancesContext3,1),state=_useBalancesContext4[0];var balances=safeAccess(state,[chainId])||{};return balances;}export function useAddressBalance(address,tokenAddress){var _useWeb3React3=useWeb3React(),library=_useWeb3React3.library,chainId=_useWeb3React3.chainId;var globalBlockNumber=useBlockNumber();var _useBalancesContext5=useBalancesContext(),_useBalancesContext6=_slicedToArray(_useBalancesContext5,2),state=_useBalancesContext6[0],update=_useBalancesContext6[1].update;var _ref10=safeAccess(state,[chainId,address,tokenAddress])||{},value=_ref10.value,blockNumber=_ref10.blockNumber;useEffect(function(){if(isAddress(address)&&(tokenAddress==='ETH'||isAddress(tokenAddress))&&(value===undefined||blockNumber!==globalBlockNumber)&&(chainId||chainId===0)&&library){var stale=false;(tokenAddress==='ETH'?getEtherBalance(address,library):getTokenBalance(tokenAddress,address,library)).then(function(value){if(!stale){update(chainId,address,tokenAddress,value,globalBlockNumber);}}).catch(function(){if(!stale){update(chainId,address,tokenAddress,null,globalBlockNumber);}});return function(){stale=true;};}},[address,tokenAddress,value,blockNumber,globalBlockNumber,chainId,library,update]);return value;}export function useExchangeReserves(tokenAddress){var _useTokenDetails=useTokenDetails(tokenAddress),exchangeAddress=_useTokenDetails.exchangeAddress;var reserveETH=useAddressBalance(exchangeAddress,'ETH');var reserveToken=useAddressBalance(exchangeAddress,tokenAddress);return{reserveETH:reserveETH,reserveToken:reserveToken};}var buildReserveObject=function buildReserveObject(chainId,tokenAddress,ethReserveAmount,tokenReserveAmount,decimals){return{token:{chainId:chainId,address:tokenAddress,decimals:decimals},ethReserve:{token:{chainId:chainId,decimals:18},amount:ethReserveAmount},tokenReserve:{token:{chainId:chainId,address:tokenAddress,decimals:decimals},amount:tokenReserveAmount}};};var daiTokenAddress='0x6B175474E89094C44Da98b954EedeAC495271d0F';var daiExchangeAddress='0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667';var usdcTokenAddress='0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48';var usdcExchangeAddress='0x97deC872013f6B5fB443861090ad931542878126';var tusdTokenAddress='0x0000000000085d4780B73119b644AE5ecd22b376';var tusdExchangeAddress='0x5048b9d01097498Fd72F3F14bC9Bc74A5aAc8fA7';export function useETHPriceInUSD(){var _useWeb3React4=useWeb3React(),chainId=_useWeb3React4.chainId;var daiReserveETH=useAddressBalance(daiExchangeAddress,'ETH');var daiReserveToken=useAddressBalance(daiExchangeAddress,daiTokenAddress);var usdcReserveETH=useAddressBalance(usdcExchangeAddress,'ETH');var usdcReserveToken=useAddressBalance(usdcExchangeAddress,usdcTokenAddress);var tusdReserveETH=useAddressBalance(tusdExchangeAddress,'ETH');var tusdReserveToken=useAddressBalance(tusdExchangeAddress,tusdTokenAddress);var _useState=useState(),_useState2=_slicedToArray(_useState,2),price=_useState2[0],setPrice=_useState2[1];useEffect(function(){if(daiReserveETH&&daiReserveToken&&usdcReserveETH&&usdcReserveToken&&tusdReserveETH&&tusdReserveToken){var daiReservesObject=buildReserveObject(chainId,daiTokenAddress,new BigNumber(daiReserveETH.toString()),new BigNumber(daiReserveToken.toString()),18);var tusdReservesObject=buildReserveObject(chainId,tusdTokenAddress,new BigNumber(tusdReserveETH.toString()),new BigNumber(tusdReserveToken.toString()),18);var usdcReservesObject=buildReserveObject(chainId,usdcTokenAddress,new BigNumber(usdcReserveETH.toString()),new BigNumber(usdcReserveToken.toString()),6);var stablecoinReserves=[daiReservesObject,usdcReservesObject,tusdReservesObject];try{setPrice(getUSDPrice(stablecoinReserves));}catch(_unused){setPrice(null);}}},[daiReserveETH,daiReserveToken,usdcReserveETH,usdcReserveToken,tusdReserveETH,tusdReserveToken,chainId]);return price;}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/contexts/Balances.js"],"names":["React","createContext","useContext","useReducer","useMemo","useCallback","useEffect","useRef","useState","BigNumber","useWeb3React","safeAccess","isAddress","getEtherBalance","getTokenBalance","useBlockNumber","useTokenDetails","useAllTokenDetails","getUSDPrice","UPDATE","UPDATE_ALL_FOR_ACCOUNT","UPDATE_ALL_FOR_EXCHANGES","BalancesContext","useBalancesContext","reducer","state","type","payload","networkId","address","tokenAddress","value","blockNumber","tokenAddresses","values","reduce","accumulator","currentValue","i","exchangeAddresses","Error","Provider","children","dispatch","update","updateAllForAccount","updateAllForExchanges","STAGGER_TIME","Updater","library","chainId","account","allTokens","stateRef","current","getData","Promise","all","Object","keys","map","resolve","setTimeout","Math","random","existingValue","catch","then","balances","allTokensWithAnExchange","filter","exchangeAddress","ethBalances","Array","length","fill","tokenBalances","useAllBalances","useAddressBalance","globalBlockNumber","undefined","stale","useExchangeReserves","reserveETH","reserveToken","buildReserveObject","ethReserveAmount","tokenReserveAmount","decimals","token","ethReserve","amount","tokenReserve","daiTokenAddress","daiExchangeAddress","usdcTokenAddress","usdcExchangeAddress","tusdTokenAddress","tusdExchangeAddress","useETHPriceInUSD","daiReserveETH","daiReserveToken","usdcReserveETH","usdcReserveToken","tusdReserveETH","tusdReserveToken","price","setPrice","daiReservesObject","toString","tusdReservesObject","usdcReservesObject","stablecoinReserves"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useRef, useState } from 'react'\nimport { BigNumber } from '@uniswap/sdk'\n\nimport { useWeb3React } from '../hooks'\nimport { safeAccess, isAddress, getEtherBalance, getTokenBalance } from '../utils'\nimport { useBlockNumber } from './Application'\nimport { useTokenDetails, useAllTokenDetails } from './Tokens'\nimport { getUSDPrice } from '../utils/price'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_ALL_FOR_ACCOUNT = 'UPDATE_ALL_FOR_ACCOUNT'\nconst UPDATE_ALL_FOR_EXCHANGES = 'UPDATE_ALL_FOR_EXCHANGES'\n\nconst BalancesContext = createContext()\n\nfunction useBalancesContext() {\n  return useContext(BalancesContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { networkId, address, tokenAddress, value, blockNumber } = payload\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [address]: {\n            ...(safeAccess(state, [networkId, address]) || {}),\n            [tokenAddress]: {\n              value,\n              blockNumber\n            }\n          }\n        }\n      }\n    }\n    case UPDATE_ALL_FOR_ACCOUNT: {\n      const { networkId, address, tokenAddresses, values } = payload\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          [address]: {\n            ...tokenAddresses.reduce((accumulator, currentValue, i) => {\n              accumulator[currentValue] = { value: values[i] }\n              return accumulator\n            }, {}),\n            ...(safeAccess(state, [networkId, address]) || {})\n          }\n        }\n      }\n    }\n    case UPDATE_ALL_FOR_EXCHANGES: {\n      const { networkId, exchangeAddresses, tokenAddresses, values } = payload\n      return {\n        ...state,\n        [networkId]: {\n          ...(safeAccess(state, [networkId]) || {}),\n          ...exchangeAddresses.reduce((accumulator, currentValue, i) => {\n            accumulator[currentValue] = {\n              ...safeAccess(state, [networkId, currentValue]),\n              [tokenAddresses[i]]: {\n                value: values[i]\n              }\n            }\n            return accumulator\n          }, {})\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in BalancesContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n\n  const update = useCallback((networkId, address, tokenAddress, value, blockNumber) => {\n    dispatch({ type: UPDATE, payload: { networkId, address, tokenAddress, value, blockNumber } })\n  }, [])\n\n  const updateAllForAccount = useCallback((networkId, address, tokenAddresses, values) => {\n    dispatch({ type: UPDATE_ALL_FOR_ACCOUNT, payload: { networkId, address, tokenAddresses, values } })\n  }, [])\n\n  const updateAllForExchanges = useCallback((networkId, exchangeAddresses, tokenAddresses, values) => {\n    dispatch({ type: UPDATE_ALL_FOR_EXCHANGES, payload: { networkId, exchangeAddresses, tokenAddresses, values } })\n  }, [])\n\n  return (\n    <BalancesContext.Provider\n      value={useMemo(() => [state, { update, updateAllForAccount, updateAllForExchanges }], [\n        state,\n        update,\n        updateAllForAccount,\n        updateAllForExchanges\n      ])}\n    >\n      {children}\n    </BalancesContext.Provider>\n  )\n}\n\nconst STAGGER_TIME = 2500\nexport function Updater() {\n  const { library, chainId, account } = useWeb3React()\n\n  const allTokens = useAllTokenDetails()\n\n  const [state, { updateAllForAccount, updateAllForExchanges }] = useBalancesContext()\n  const stateRef = useRef(state)\n  stateRef.current = state\n\n  useEffect(() => {\n    const getData = async () => {\n      if (chainId && library && account) {\n        // get 1 eth + all token balances for the account\n        Promise.all(\n          Object.keys(allTokens).map(async tokenAddress => {\n            await new Promise(resolve => setTimeout(resolve, STAGGER_TIME * Math.random()))\n\n            const { value: existingValue } = safeAccess(stateRef.current, [chainId, account, tokenAddress]) || {}\n            return (\n              existingValue ||\n              (await (tokenAddress === 'ETH'\n                ? getEtherBalance(account, library).catch(() => null)\n                : getTokenBalance(tokenAddress, account, library).catch(() => null)))\n            )\n          })\n        ).then(balances => {\n          updateAllForAccount(chainId, account, Object.keys(allTokens), balances)\n        })\n\n        const allTokensWithAnExchange = Object.keys(allTokens).filter(tokenAddress => tokenAddress !== 'ETH')\n        // get all eth balances for all exchanges\n        Promise.all(\n          allTokensWithAnExchange.map(async tokenAddress => {\n            await new Promise(resolve => setTimeout(resolve, STAGGER_TIME * Math.random()))\n\n            const exchangeAddress = allTokens[tokenAddress].exchangeAddress\n            const { value: existingValue } = safeAccess(stateRef.current, [chainId, exchangeAddress, 'ETH']) || {}\n            return existingValue || (await getEtherBalance(exchangeAddress, library).catch(() => null))\n          })\n        ).then(ethBalances => {\n          updateAllForExchanges(\n            chainId,\n            allTokensWithAnExchange.map(tokenAddress => allTokens[tokenAddress].exchangeAddress),\n            Array(allTokensWithAnExchange.length).fill('ETH'),\n            ethBalances\n          )\n        })\n\n        // get all token balances for all exchanges\n        Promise.all(\n          allTokensWithAnExchange.map(async tokenAddress => {\n            await new Promise(resolve => setTimeout(resolve, STAGGER_TIME * Math.random()))\n\n            const exchangeAddress = allTokens[tokenAddress].exchangeAddress\n            const { value: existingValue } =\n              safeAccess(stateRef.current, [chainId, exchangeAddress, tokenAddress]) || {}\n            return existingValue || (await getTokenBalance(tokenAddress, exchangeAddress, library).catch(() => null))\n          })\n        ).then(tokenBalances => {\n          updateAllForExchanges(\n            chainId,\n            allTokensWithAnExchange.map(tokenAddress => allTokens[tokenAddress].exchangeAddress),\n            allTokensWithAnExchange.map(tokenAddress => tokenAddress),\n            tokenBalances\n          )\n        })\n      }\n    }\n\n    getData()\n  }, [chainId, library, account, allTokens, updateAllForAccount, updateAllForExchanges])\n\n  return null\n}\n\nexport function useAllBalances() {\n  const { chainId } = useWeb3React()\n  const [state] = useBalancesContext()\n  const balances = safeAccess(state, [chainId]) || {}\n  return balances\n}\n\nexport function useAddressBalance(address, tokenAddress) {\n  const { library, chainId } = useWeb3React()\n\n  const globalBlockNumber = useBlockNumber()\n\n  const [state, { update }] = useBalancesContext()\n  const { value, blockNumber } = safeAccess(state, [chainId, address, tokenAddress]) || {}\n\n  useEffect(() => {\n    if (\n      isAddress(address) &&\n      (tokenAddress === 'ETH' || isAddress(tokenAddress)) &&\n      (value === undefined || blockNumber !== globalBlockNumber) &&\n      (chainId || chainId === 0) &&\n      library\n    ) {\n      let stale = false\n      ;(tokenAddress === 'ETH' ? getEtherBalance(address, library) : getTokenBalance(tokenAddress, address, library))\n        .then(value => {\n          if (!stale) {\n            update(chainId, address, tokenAddress, value, globalBlockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            update(chainId, address, tokenAddress, null, globalBlockNumber)\n          }\n        })\n      return () => {\n        stale = true\n      }\n    }\n  }, [address, tokenAddress, value, blockNumber, globalBlockNumber, chainId, library, update])\n\n  return value\n}\n\nexport function useExchangeReserves(tokenAddress) {\n  const { exchangeAddress } = useTokenDetails(tokenAddress)\n\n  const reserveETH = useAddressBalance(exchangeAddress, 'ETH')\n  const reserveToken = useAddressBalance(exchangeAddress, tokenAddress)\n\n  return { reserveETH, reserveToken }\n}\n\nconst buildReserveObject = (chainId, tokenAddress, ethReserveAmount, tokenReserveAmount, decimals) => ({\n  token: {\n    chainId,\n    address: tokenAddress,\n    decimals\n  },\n  ethReserve: {\n    token: {\n      chainId,\n      decimals: 18\n    },\n    amount: ethReserveAmount\n  },\n  tokenReserve: {\n    token: {\n      chainId,\n      address: tokenAddress,\n      decimals\n    },\n    amount: tokenReserveAmount\n  }\n})\nconst daiTokenAddress = '0x6B175474E89094C44Da98b954EedeAC495271d0F'\nconst daiExchangeAddress = '0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667'\nconst usdcTokenAddress = '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'\nconst usdcExchangeAddress = '0x97deC872013f6B5fB443861090ad931542878126'\nconst tusdTokenAddress = '0x0000000000085d4780B73119b644AE5ecd22b376'\nconst tusdExchangeAddress = '0x5048b9d01097498Fd72F3F14bC9Bc74A5aAc8fA7'\nexport function useETHPriceInUSD() {\n  const { chainId } = useWeb3React()\n\n  let daiReserveETH = useAddressBalance(daiExchangeAddress, 'ETH')\n  let daiReserveToken = useAddressBalance(daiExchangeAddress, daiTokenAddress)\n  let usdcReserveETH = useAddressBalance(usdcExchangeAddress, 'ETH')\n  let usdcReserveToken = useAddressBalance(usdcExchangeAddress, usdcTokenAddress)\n  let tusdReserveETH = useAddressBalance(tusdExchangeAddress, 'ETH')\n  let tusdReserveToken = useAddressBalance(tusdExchangeAddress, tusdTokenAddress)\n\n  const [price, setPrice] = useState()\n  useEffect(() => {\n    if (daiReserveETH && daiReserveToken && usdcReserveETH && usdcReserveToken && tusdReserveETH && tusdReserveToken) {\n      const daiReservesObject = buildReserveObject(\n        chainId,\n        daiTokenAddress,\n        new BigNumber(daiReserveETH.toString()),\n        new BigNumber(daiReserveToken.toString()),\n        18\n      )\n      const tusdReservesObject = buildReserveObject(\n        chainId,\n        tusdTokenAddress,\n        new BigNumber(tusdReserveETH.toString()),\n        new BigNumber(tusdReserveToken.toString()),\n        18\n      )\n      const usdcReservesObject = buildReserveObject(\n        chainId,\n        usdcTokenAddress,\n        new BigNumber(usdcReserveETH.toString()),\n        new BigNumber(usdcReserveToken.toString()),\n        6\n      )\n\n      const stablecoinReserves = [daiReservesObject, usdcReservesObject, tusdReservesObject]\n\n      try {\n        setPrice(getUSDPrice(stablecoinReserves))\n      } catch {\n        setPrice(null)\n      }\n    }\n  }, [daiReserveETH, daiReserveToken, usdcReserveETH, usdcReserveToken, tusdReserveETH, tusdReserveToken, chainId])\n\n  return price\n}\n"]},"metadata":{},"sourceType":"module"}