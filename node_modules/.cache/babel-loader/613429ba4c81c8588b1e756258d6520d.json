{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/pages/App.js\";\nimport React, { Suspense, lazy } from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Web3ReactManager from \"../components/Web3ReactManager\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport NavigationTabs from \"../components/NavigationTabs\";\nimport { isAddress, getAllQueryParams } from \"../utils\";\nconst Swap = lazy(() => import(\"./Swap\"));\nconst Send = lazy(() => import(\"./Send\"));\nconst Pool = lazy(() => import(\"./Pool\"));\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  height: 100vh;\n`;\nconst HeaderWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  width: 100%;\n  justify-content: space-between;\n`;\nconst FooterWrapper = styled.div`\n  width: 100%;\n  min-height: 30px;\n  align-self: flex-end;\n`;\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: flex-start;\n  align-items: center;\n  flex: 1;\n  overflow: auto;\n`;\nconst Body = styled.div`\n  max-width: 35rem;\n  width: 90%;\n  /* margin: 0 1.25rem 1.25rem 1.25rem; */\n`;\nexport default function App() {\n  const params = getAllQueryParams();\n  return React.createElement(React.Fragment, null, React.createElement(Suspense, {\n    fallback: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(AppWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(HeaderWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(BodyWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Web3ReactManager, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(NavigationTabs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Suspense, {\n    fallback: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    strict: true,\n    path: \"/swap\",\n    component: () => React.createElement(Swap, {\n      params: params,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    strict: true,\n    path: \"/swap/:tokenAddress?\",\n    render: ({\n      match,\n      location\n    }) => {\n      if (isAddress(match.params.tokenAddress)) {\n        return React.createElement(Swap, {\n          location: location,\n          initialCurrency: isAddress(match.params.tokenAddress),\n          params: params,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/swap\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    strict: true,\n    path: \"/send\",\n    component: () => React.createElement(Send, {\n      params: params,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    strict: true,\n    path: \"/send/:tokenAddress?\",\n    render: ({\n      match\n    }) => {\n      if (isAddress(match.params.tokenAddress)) {\n        return React.createElement(Send, {\n          initialCurrency: isAddress(match.params.tokenAddress),\n          params: params,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/send\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: [\"/add-liquidity\", \"/remove-liquidity\", \"/create-exchange\", \"/create-exchange/:tokenAddress?\"],\n    component: () => React.createElement(Pool, {\n      params: params,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/swap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))))))), React.createElement(FooterWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/pages/App.js"],"names":["React","Suspense","lazy","styled","BrowserRouter","Redirect","Route","Switch","Web3ReactManager","Header","Footer","NavigationTabs","isAddress","getAllQueryParams","Swap","Send","Pool","AppWrapper","div","HeaderWrapper","theme","flexRowNoWrap","FooterWrapper","BodyWrapper","Body","App","params","match","location","tokenAddress","pathname"],"mappings":"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","sourcesContent":["import React, { Suspense, lazy } from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Web3ReactManager from \"../components/Web3ReactManager\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nimport NavigationTabs from \"../components/NavigationTabs\";\nimport { isAddress, getAllQueryParams } from \"../utils\";\n\nconst Swap = lazy(() => import(\"./Swap\"));\nconst Send = lazy(() => import(\"./Send\"));\nconst Pool = lazy(() => import(\"./Pool\"));\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  height: 100vh;\n`;\n\nconst HeaderWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  width: 100%;\n  justify-content: space-between;\n`;\nconst FooterWrapper = styled.div`\n  width: 100%;\n  min-height: 30px;\n  align-self: flex-end;\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: flex-start;\n  align-items: center;\n  flex: 1;\n  overflow: auto;\n`;\n\nconst Body = styled.div`\n  max-width: 35rem;\n  width: 90%;\n  /* margin: 0 1.25rem 1.25rem 1.25rem; */\n`;\n\nexport default function App() {\n  const params = getAllQueryParams();\n  return (\n    <>\n      <Suspense fallback={null}>\n        <AppWrapper>\n          <HeaderWrapper>\n            <Header />\n          </HeaderWrapper>\n          <BodyWrapper>\n            <Body>\n              <Web3ReactManager>\n                <BrowserRouter>\n                  <NavigationTabs />\n                  {/* this Suspense is for route code-splitting */}\n                  <Suspense fallback={null}>\n                    <Switch>\n                      <Route\n                        exact\n                        strict\n                        path=\"/swap\"\n                        component={() => <Swap params={params} />}\n                      />\n                      <Route\n                        exact\n                        strict\n                        path=\"/swap/:tokenAddress?\"\n                        render={({ match, location }) => {\n                          if (isAddress(match.params.tokenAddress)) {\n                            return (\n                              <Swap\n                                location={location}\n                                initialCurrency={isAddress(\n                                  match.params.tokenAddress\n                                )}\n                                params={params}\n                              />\n                            );\n                          } else {\n                            return <Redirect to={{ pathname: \"/swap\" }} />;\n                          }\n                        }}\n                      />\n                      <Route\n                        exact\n                        strict\n                        path=\"/send\"\n                        component={() => <Send params={params} />}\n                      />\n                      <Route\n                        exact\n                        strict\n                        path=\"/send/:tokenAddress?\"\n                        render={({ match }) => {\n                          if (isAddress(match.params.tokenAddress)) {\n                            return (\n                              <Send\n                                initialCurrency={isAddress(\n                                  match.params.tokenAddress\n                                )}\n                                params={params}\n                              />\n                            );\n                          } else {\n                            return <Redirect to={{ pathname: \"/send\" }} />;\n                          }\n                        }}\n                      />\n                      <Route\n                        path={[\n                          \"/add-liquidity\",\n                          \"/remove-liquidity\",\n                          \"/create-exchange\",\n                          \"/create-exchange/:tokenAddress?\"\n                        ]}\n                        component={() => <Pool params={params} />}\n                      />\n                      <Redirect to=\"/swap\" />\n                    </Switch>\n                  </Suspense>\n                </BrowserRouter>\n              </Web3ReactManager>\n            </Body>\n          </BodyWrapper>\n          <FooterWrapper>\n            <Footer />\n          </FooterWrapper>\n        </AppWrapper>\n      </Suspense>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}