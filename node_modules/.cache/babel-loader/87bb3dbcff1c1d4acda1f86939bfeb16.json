{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatusCodes = exports.DBNotReset = exports.DBWrongPassword = exports.NoDBPathGiven = exports.FirmwareOrAppUpdateRequired = exports.LedgerAPI5xx = exports.LedgerAPI4xx = exports.GenuineCheckFailed = exports.PairingFailed = exports.SyncError = exports.FeeTooHigh = exports.FeeRequired = exports.FeeNotLoaded = exports.CantScanQRCode = exports.ETHAddressNonEIP = exports.WrongAppForCurrency = exports.WrongDeviceForAccount = exports.WebsocketConnectionFailed = exports.WebsocketConnectionError = exports.DeviceShouldStayInApp = exports.TransportWebUSBGestureRequired = exports.TransportInterfaceNotAvailable = exports.TransportOpenUserCancelled = exports.UserRefusedOnDevice = exports.UserRefusedAllowManager = exports.UserRefusedFirmwareUpdate = exports.UserRefusedAddress = exports.UserRefusedDeviceNameChange = exports.UpdateYourApp = exports.UnavailableTezosOriginatedAccountSend = exports.UnavailableTezosOriginatedAccountReceive = exports.RecipientRequired = exports.MCUNotGenuineToDashboard = exports.UnexpectedBootloader = exports.TimeoutTagged = exports.RecommendUndelegation = exports.RecommendSubAccountsToEmpty = exports.PasswordIncorrectError = exports.PasswordsDontMatchError = exports.GasLessThanEstimate = exports.NotSupportedLegacyAddress = exports.NotEnoughGas = exports.NoAccessToCamera = exports.NotEnoughBalanceBecauseDestinationNotCreated = exports.NotEnoughSpendableBalance = exports.NotEnoughBalanceInParentAccount = exports.NotEnoughBalanceToDelegate = exports.NotEnoughBalance = exports.NoAddressesFound = exports.NetworkDown = exports.ManagerUninstallBTCDep = exports.ManagerNotEnoughSpaceError = exports.ManagerFirmwareNotEnoughSpaceError = exports.ManagerDeviceLockedError = exports.ManagerAppDepUninstallRequired = exports.ManagerAppDepInstallRequired = exports.ManagerAppRelyOnBTCError = exports.ManagerAppAlreadyInstalledError = exports.LedgerAPINotAvailable = exports.LedgerAPIErrorWithMessage = exports.LedgerAPIError = exports.UnknownMCU = exports.LatestMCUInstalledError = exports.InvalidAddressBecauseDestinationIsAlsoSource = exports.InvalidAddress = exports.InvalidXRPTag = exports.HardResetFail = exports.FeeEstimationFailed = exports.EthAppPleaseEnableContractData = exports.EnpointConfigError = exports.DisconnectedDeviceDuringOperation = exports.DisconnectedDevice = exports.DeviceSocketNoBulkStatus = exports.DeviceSocketFail = exports.DeviceNameInvalid = exports.DeviceHalted = exports.DeviceInOSUExpected = exports.DeviceOnDashboardUnexpected = exports.DeviceOnDashboardExpected = exports.DeviceNotGenuineError = exports.DeviceGenuineSocketEarlyClose = exports.DeviceAppVerifyNotSupported = exports.CurrencyNotSupported = exports.CashAddrNotSupported = exports.CantOpenDevice = exports.BtcUnmatchedApp = exports.BluetoothRequired = exports.AmountRequired = exports.AccountNotSupported = exports.AccountNameRequiredError = exports.addCustomErrorDeserializer = exports.createCustomErrorClass = exports.deserializeError = exports.serializeError = undefined;\nexports.TransportError = TransportError;\nexports.getAltStatusMessage = getAltStatusMessage;\nexports.TransportStatusError = TransportStatusError;\n\nvar _helpers = require(\"./helpers\");\n\nexports.serializeError = _helpers.serializeError;\nexports.deserializeError = _helpers.deserializeError;\nexports.createCustomErrorClass = _helpers.createCustomErrorClass;\nexports.addCustomErrorDeserializer = _helpers.addCustomErrorDeserializer;\nvar AccountNameRequiredError = exports.AccountNameRequiredError = (0, _helpers.createCustomErrorClass)(\"AccountNameRequired\");\nvar AccountNotSupported = exports.AccountNotSupported = (0, _helpers.createCustomErrorClass)(\"AccountNotSupported\");\nvar AmountRequired = exports.AmountRequired = (0, _helpers.createCustomErrorClass)(\"AmountRequired\");\nvar BluetoothRequired = exports.BluetoothRequired = (0, _helpers.createCustomErrorClass)(\"BluetoothRequired\");\nvar BtcUnmatchedApp = exports.BtcUnmatchedApp = (0, _helpers.createCustomErrorClass)(\"BtcUnmatchedApp\");\nvar CantOpenDevice = exports.CantOpenDevice = (0, _helpers.createCustomErrorClass)(\"CantOpenDevice\");\nvar CashAddrNotSupported = exports.CashAddrNotSupported = (0, _helpers.createCustomErrorClass)(\"CashAddrNotSupported\");\nvar CurrencyNotSupported = exports.CurrencyNotSupported = (0, _helpers.createCustomErrorClass)(\"CurrencyNotSupported\");\nvar DeviceAppVerifyNotSupported = exports.DeviceAppVerifyNotSupported = (0, _helpers.createCustomErrorClass)(\"DeviceAppVerifyNotSupported\");\nvar DeviceGenuineSocketEarlyClose = exports.DeviceGenuineSocketEarlyClose = (0, _helpers.createCustomErrorClass)(\"DeviceGenuineSocketEarlyClose\");\nvar DeviceNotGenuineError = exports.DeviceNotGenuineError = (0, _helpers.createCustomErrorClass)(\"DeviceNotGenuine\");\nvar DeviceOnDashboardExpected = exports.DeviceOnDashboardExpected = (0, _helpers.createCustomErrorClass)(\"DeviceOnDashboardExpected\");\nvar DeviceOnDashboardUnexpected = exports.DeviceOnDashboardUnexpected = (0, _helpers.createCustomErrorClass)(\"DeviceOnDashboardUnexpected\");\nvar DeviceInOSUExpected = exports.DeviceInOSUExpected = (0, _helpers.createCustomErrorClass)(\"DeviceInOSUExpected\");\nvar DeviceHalted = exports.DeviceHalted = (0, _helpers.createCustomErrorClass)(\"DeviceHalted\");\nvar DeviceNameInvalid = exports.DeviceNameInvalid = (0, _helpers.createCustomErrorClass)(\"DeviceNameInvalid\");\nvar DeviceSocketFail = exports.DeviceSocketFail = (0, _helpers.createCustomErrorClass)(\"DeviceSocketFail\");\nvar DeviceSocketNoBulkStatus = exports.DeviceSocketNoBulkStatus = (0, _helpers.createCustomErrorClass)(\"DeviceSocketNoBulkStatus\");\nvar DisconnectedDevice = exports.DisconnectedDevice = (0, _helpers.createCustomErrorClass)(\"DisconnectedDevice\");\nvar DisconnectedDeviceDuringOperation = exports.DisconnectedDeviceDuringOperation = (0, _helpers.createCustomErrorClass)(\"DisconnectedDeviceDuringOperation\");\nvar EnpointConfigError = exports.EnpointConfigError = (0, _helpers.createCustomErrorClass)(\"EnpointConfig\");\nvar EthAppPleaseEnableContractData = exports.EthAppPleaseEnableContractData = (0, _helpers.createCustomErrorClass)(\"EthAppPleaseEnableContractData\");\nvar FeeEstimationFailed = exports.FeeEstimationFailed = (0, _helpers.createCustomErrorClass)(\"FeeEstimationFailed\");\nvar HardResetFail = exports.HardResetFail = (0, _helpers.createCustomErrorClass)(\"HardResetFail\");\nvar InvalidXRPTag = exports.InvalidXRPTag = (0, _helpers.createCustomErrorClass)(\"InvalidXRPTag\");\nvar InvalidAddress = exports.InvalidAddress = (0, _helpers.createCustomErrorClass)(\"InvalidAddress\");\nvar InvalidAddressBecauseDestinationIsAlsoSource = exports.InvalidAddressBecauseDestinationIsAlsoSource = (0, _helpers.createCustomErrorClass)(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nvar LatestMCUInstalledError = exports.LatestMCUInstalledError = (0, _helpers.createCustomErrorClass)(\"LatestMCUInstalledError\");\nvar UnknownMCU = exports.UnknownMCU = (0, _helpers.createCustomErrorClass)(\"UnknownMCU\");\nvar LedgerAPIError = exports.LedgerAPIError = (0, _helpers.createCustomErrorClass)(\"LedgerAPIError\");\nvar LedgerAPIErrorWithMessage = exports.LedgerAPIErrorWithMessage = (0, _helpers.createCustomErrorClass)(\"LedgerAPIErrorWithMessage\");\nvar LedgerAPINotAvailable = exports.LedgerAPINotAvailable = (0, _helpers.createCustomErrorClass)(\"LedgerAPINotAvailable\");\nvar ManagerAppAlreadyInstalledError = exports.ManagerAppAlreadyInstalledError = (0, _helpers.createCustomErrorClass)(\"ManagerAppAlreadyInstalled\");\nvar ManagerAppRelyOnBTCError = exports.ManagerAppRelyOnBTCError = (0, _helpers.createCustomErrorClass)(\"ManagerAppRelyOnBTC\");\nvar ManagerAppDepInstallRequired = exports.ManagerAppDepInstallRequired = (0, _helpers.createCustomErrorClass)(\"ManagerAppDepInstallRequired\");\nvar ManagerAppDepUninstallRequired = exports.ManagerAppDepUninstallRequired = (0, _helpers.createCustomErrorClass)(\"ManagerAppDepUninstallRequired\");\nvar ManagerDeviceLockedError = exports.ManagerDeviceLockedError = (0, _helpers.createCustomErrorClass)(\"ManagerDeviceLocked\");\nvar ManagerFirmwareNotEnoughSpaceError = exports.ManagerFirmwareNotEnoughSpaceError = (0, _helpers.createCustomErrorClass)(\"ManagerFirmwareNotEnoughSpace\");\nvar ManagerNotEnoughSpaceError = exports.ManagerNotEnoughSpaceError = (0, _helpers.createCustomErrorClass)(\"ManagerNotEnoughSpace\");\nvar ManagerUninstallBTCDep = exports.ManagerUninstallBTCDep = (0, _helpers.createCustomErrorClass)(\"ManagerUninstallBTCDep\");\nvar NetworkDown = exports.NetworkDown = (0, _helpers.createCustomErrorClass)(\"NetworkDown\");\nvar NoAddressesFound = exports.NoAddressesFound = (0, _helpers.createCustomErrorClass)(\"NoAddressesFound\");\nvar NotEnoughBalance = exports.NotEnoughBalance = (0, _helpers.createCustomErrorClass)(\"NotEnoughBalance\");\nvar NotEnoughBalanceToDelegate = exports.NotEnoughBalanceToDelegate = (0, _helpers.createCustomErrorClass)(\"NotEnoughBalanceToDelegate\");\nvar NotEnoughBalanceInParentAccount = exports.NotEnoughBalanceInParentAccount = (0, _helpers.createCustomErrorClass)(\"NotEnoughBalanceInParentAccount\");\nvar NotEnoughSpendableBalance = exports.NotEnoughSpendableBalance = (0, _helpers.createCustomErrorClass)(\"NotEnoughSpendableBalance\");\nvar NotEnoughBalanceBecauseDestinationNotCreated = exports.NotEnoughBalanceBecauseDestinationNotCreated = (0, _helpers.createCustomErrorClass)(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nvar NoAccessToCamera = exports.NoAccessToCamera = (0, _helpers.createCustomErrorClass)(\"NoAccessToCamera\");\nvar NotEnoughGas = exports.NotEnoughGas = (0, _helpers.createCustomErrorClass)(\"NotEnoughGas\");\nvar NotSupportedLegacyAddress = exports.NotSupportedLegacyAddress = (0, _helpers.createCustomErrorClass)(\"NotSupportedLegacyAddress\");\nvar GasLessThanEstimate = exports.GasLessThanEstimate = (0, _helpers.createCustomErrorClass)(\"GasLessThanEstimate\");\nvar PasswordsDontMatchError = exports.PasswordsDontMatchError = (0, _helpers.createCustomErrorClass)(\"PasswordsDontMatch\");\nvar PasswordIncorrectError = exports.PasswordIncorrectError = (0, _helpers.createCustomErrorClass)(\"PasswordIncorrect\");\nvar RecommendSubAccountsToEmpty = exports.RecommendSubAccountsToEmpty = (0, _helpers.createCustomErrorClass)(\"RecommendSubAccountsToEmpty\");\nvar RecommendUndelegation = exports.RecommendUndelegation = (0, _helpers.createCustomErrorClass)(\"RecommendUndelegation\");\nvar TimeoutTagged = exports.TimeoutTagged = (0, _helpers.createCustomErrorClass)(\"TimeoutTagged\");\nvar UnexpectedBootloader = exports.UnexpectedBootloader = (0, _helpers.createCustomErrorClass)(\"UnexpectedBootloader\");\nvar MCUNotGenuineToDashboard = exports.MCUNotGenuineToDashboard = (0, _helpers.createCustomErrorClass)(\"MCUNotGenuineToDashboard\");\nvar RecipientRequired = exports.RecipientRequired = (0, _helpers.createCustomErrorClass)(\"RecipientRequired\");\nvar UnavailableTezosOriginatedAccountReceive = exports.UnavailableTezosOriginatedAccountReceive = (0, _helpers.createCustomErrorClass)(\"UnavailableTezosOriginatedAccountReceive\");\nvar UnavailableTezosOriginatedAccountSend = exports.UnavailableTezosOriginatedAccountSend = (0, _helpers.createCustomErrorClass)(\"UnavailableTezosOriginatedAccountSend\");\nvar UpdateYourApp = exports.UpdateYourApp = (0, _helpers.createCustomErrorClass)(\"UpdateYourApp\");\nvar UserRefusedDeviceNameChange = exports.UserRefusedDeviceNameChange = (0, _helpers.createCustomErrorClass)(\"UserRefusedDeviceNameChange\");\nvar UserRefusedAddress = exports.UserRefusedAddress = (0, _helpers.createCustomErrorClass)(\"UserRefusedAddress\");\nvar UserRefusedFirmwareUpdate = exports.UserRefusedFirmwareUpdate = (0, _helpers.createCustomErrorClass)(\"UserRefusedFirmwareUpdate\");\nvar UserRefusedAllowManager = exports.UserRefusedAllowManager = (0, _helpers.createCustomErrorClass)(\"UserRefusedAllowManager\");\nvar UserRefusedOnDevice = exports.UserRefusedOnDevice = (0, _helpers.createCustomErrorClass)(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\n\nvar TransportOpenUserCancelled = exports.TransportOpenUserCancelled = (0, _helpers.createCustomErrorClass)(\"TransportOpenUserCancelled\");\nvar TransportInterfaceNotAvailable = exports.TransportInterfaceNotAvailable = (0, _helpers.createCustomErrorClass)(\"TransportInterfaceNotAvailable\");\nvar TransportWebUSBGestureRequired = exports.TransportWebUSBGestureRequired = (0, _helpers.createCustomErrorClass)(\"TransportWebUSBGestureRequired\");\nvar DeviceShouldStayInApp = exports.DeviceShouldStayInApp = (0, _helpers.createCustomErrorClass)(\"DeviceShouldStayInApp\");\nvar WebsocketConnectionError = exports.WebsocketConnectionError = (0, _helpers.createCustomErrorClass)(\"WebsocketConnectionError\");\nvar WebsocketConnectionFailed = exports.WebsocketConnectionFailed = (0, _helpers.createCustomErrorClass)(\"WebsocketConnectionFailed\");\nvar WrongDeviceForAccount = exports.WrongDeviceForAccount = (0, _helpers.createCustomErrorClass)(\"WrongDeviceForAccount\");\nvar WrongAppForCurrency = exports.WrongAppForCurrency = (0, _helpers.createCustomErrorClass)(\"WrongAppForCurrency\");\nvar ETHAddressNonEIP = exports.ETHAddressNonEIP = (0, _helpers.createCustomErrorClass)(\"ETHAddressNonEIP\");\nvar CantScanQRCode = exports.CantScanQRCode = (0, _helpers.createCustomErrorClass)(\"CantScanQRCode\");\nvar FeeNotLoaded = exports.FeeNotLoaded = (0, _helpers.createCustomErrorClass)(\"FeeNotLoaded\");\nvar FeeRequired = exports.FeeRequired = (0, _helpers.createCustomErrorClass)(\"FeeRequired\");\nvar FeeTooHigh = exports.FeeTooHigh = (0, _helpers.createCustomErrorClass)(\"FeeTooHigh\");\nvar SyncError = exports.SyncError = (0, _helpers.createCustomErrorClass)(\"SyncError\");\nvar PairingFailed = exports.PairingFailed = (0, _helpers.createCustomErrorClass)(\"PairingFailed\");\nvar GenuineCheckFailed = exports.GenuineCheckFailed = (0, _helpers.createCustomErrorClass)(\"GenuineCheckFailed\");\nvar LedgerAPI4xx = exports.LedgerAPI4xx = (0, _helpers.createCustomErrorClass)(\"LedgerAPI4xx\");\nvar LedgerAPI5xx = exports.LedgerAPI5xx = (0, _helpers.createCustomErrorClass)(\"LedgerAPI5xx\");\nvar FirmwareOrAppUpdateRequired = exports.FirmwareOrAppUpdateRequired = (0, _helpers.createCustomErrorClass)(\"FirmwareOrAppUpdateRequired\"); // db stuff, no need to translate\n\nvar NoDBPathGiven = exports.NoDBPathGiven = (0, _helpers.createCustomErrorClass)(\"NoDBPathGiven\");\nvar DBWrongPassword = exports.DBWrongPassword = (0, _helpers.createCustomErrorClass)(\"DBWrongPassword\");\nvar DBNotReset = exports.DBNotReset = (0, _helpers.createCustomErrorClass)(\"DBNotReset\");\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\n\nfunction TransportError(message, id) {\n  this.name = \"TransportError\";\n  this.message = message;\n  this.stack = new Error().stack;\n  this.id = id;\n} //$FlowFixMe\n\n\nTransportError.prototype = new Error();\n(0, _helpers.addCustomErrorDeserializer)(\"TransportError\", function (e) {\n  return new TransportError(e.message, e.id);\n});\nvar StatusCodes = exports.StatusCodes = {\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  INCORRECT_LENGTH: 0x6700,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  INCORRECT_DATA: 0x6a80,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  TECHNICAL_PROBLEM: 0x6f00,\n  OK: 0x9000,\n  MEMORY_PROBLEM: 0x9240,\n  NO_EF_SELECTED: 0x9400,\n  INVALID_OFFSET: 0x9402,\n  FILE_NOT_FOUND: 0x9404,\n  INCONSISTENT_FILE: 0x9408,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  INVALID_KCV: 0x9485,\n  CODE_NOT_INITIALIZED: 0x9802,\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CODE_BLOCKED: 0x9840,\n  MAX_VALUE_REACHED: 0x9850,\n  GP_AUTH_FAILED: 0x6300,\n  LICENSING: 0x6f42,\n  HALTED: 0x6faa\n};\n\nfunction getAltStatusMessage(code) {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n\n    case 0x6a80:\n      return \"Invalid data received\";\n\n    case 0x6b00:\n      return \"Invalid parameter received\";\n  }\n\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\n\n\nfunction TransportStatusError(statusCode) {\n  this.name = \"TransportStatusError\";\n  var statusText = Object.keys(StatusCodes).find(function (k) {\n    return StatusCodes[k] === statusCode;\n  }) || \"UNKNOWN_ERROR\";\n  var smsg = getAltStatusMessage(statusCode) || statusText;\n  var statusCodeStr = statusCode.toString(16);\n  this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\n  this.stack = new Error().stack;\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n} //$FlowFixMe\n\n\nTransportStatusError.prototype = new Error();\n(0, _helpers.addCustomErrorDeserializer)(\"TransportStatusError\", function (e) {\n  return new TransportStatusError(e.statusCode);\n});","map":{"version":3,"sources":["../src/index.js"],"names":["serializeError","deserializeError","createCustomErrorClass","addCustomErrorDeserializer","AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","DisconnectedDevice","DisconnectedDeviceDuringOperation","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotSupportedLegacyAddress","GasLessThanEstimate","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportWebUSBGestureRequired","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeRequired","FeeTooHigh","SyncError","PairingFailed","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","NoDBPathGiven","DBWrongPassword","DBNotReset","TransportError","e","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","getAltStatusMessage","code","TransportStatusError","statusText","smsg","statusCodeStr","statusCode"],"mappings":";;;;;;QAwNgB6F,c,GAAAA,c;QA+CAiC,mB,GAAAA,mB;QAuBAE,oB,GAAAA,oB;;AA5RhB,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;QAQEhI,c;QACAC,gB;QACAC,sB;QACAC,0B;AAGK,IAAMC,wBAAAA,GAAAA,OAAAA,CAAAA,wBAAAA,GAA2B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAjC,qBAAiC,CAAjC;AAGA,IAAMC,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA5B,qBAA4B,CAA5B;AAGA,IAAMC,cAAAA,GAAAA,OAAAA,CAAAA,cAAAA,GAAiB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvB,gBAAuB,CAAvB;AACA,IAAMC,iBAAAA,GAAAA,OAAAA,CAAAA,iBAAAA,GAAoB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA1B,mBAA0B,CAA1B;AACA,IAAMC,eAAAA,GAAAA,OAAAA,CAAAA,eAAAA,GAAkB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAxB,iBAAwB,CAAxB;AACA,IAAMC,cAAAA,GAAAA,OAAAA,CAAAA,cAAAA,GAAiB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvB,gBAAuB,CAAvB;AACA,IAAMC,oBAAAA,GAAAA,OAAAA,CAAAA,oBAAAA,GAAuB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA7B,sBAA6B,CAA7B;AAGA,IAAMC,oBAAAA,GAAAA,OAAAA,CAAAA,oBAAAA,GAAuB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA7B,sBAA6B,CAA7B;AAGA,IAAMC,2BAAAA,GAAAA,OAAAA,CAAAA,2BAAAA,GAA8B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAApC,6BAAoC,CAApC;AAGA,IAAMC,6BAAAA,GAAAA,OAAAA,CAAAA,6BAAAA,GAAgC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAtC,+BAAsC,CAAtC;AAGA,IAAMC,qBAAAA,GAAAA,OAAAA,CAAAA,qBAAAA,GAAwB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA9B,kBAA8B,CAA9B;AACA,IAAMC,yBAAAA,GAAAA,OAAAA,CAAAA,yBAAAA,GAA4B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAlC,2BAAkC,CAAlC;AAGA,IAAMC,2BAAAA,GAAAA,OAAAA,CAAAA,2BAAAA,GAA8B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAApC,6BAAoC,CAApC;AAGA,IAAMC,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA5B,qBAA4B,CAA5B;AAGA,IAAMC,YAAAA,GAAAA,OAAAA,CAAAA,YAAAA,GAAe,CAAA,GAAA,QAAA,CAAA,sBAAA,EAArB,cAAqB,CAArB;AACA,IAAMC,iBAAAA,GAAAA,OAAAA,CAAAA,iBAAAA,GAAoB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA1B,mBAA0B,CAA1B;AACA,IAAMC,gBAAAA,GAAAA,OAAAA,CAAAA,gBAAAA,GAAmB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAzB,kBAAyB,CAAzB;AACA,IAAMC,wBAAAA,GAAAA,OAAAA,CAAAA,wBAAAA,GAA2B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAjC,0BAAiC,CAAjC;AAGA,IAAMC,kBAAAA,GAAAA,OAAAA,CAAAA,kBAAAA,GAAqB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA3B,oBAA2B,CAA3B;AACA,IAAMC,iCAAAA,GAAAA,OAAAA,CAAAA,iCAAAA,GAAoC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA1C,mCAA0C,CAA1C;AAGA,IAAMC,kBAAAA,GAAAA,OAAAA,CAAAA,kBAAAA,GAAqB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA3B,eAA2B,CAA3B;AACA,IAAMC,8BAAAA,GAAAA,OAAAA,CAAAA,8BAAAA,GAAiC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvC,gCAAuC,CAAvC;AAGA,IAAMC,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA5B,qBAA4B,CAA5B;AAGA,IAAMC,aAAAA,GAAAA,OAAAA,CAAAA,aAAAA,GAAgB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAtB,eAAsB,CAAtB;AACA,IAAMC,aAAAA,GAAAA,OAAAA,CAAAA,aAAAA,GAAgB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAtB,eAAsB,CAAtB;AACA,IAAMC,cAAAA,GAAAA,OAAAA,CAAAA,cAAAA,GAAiB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvB,gBAAuB,CAAvB;AACA,IAAMC,4CAAAA,GAAAA,OAAAA,CAAAA,4CAAAA,GAA+C,CAAA,GAAA,QAAA,CAAA,sBAAA,EAArD,8CAAqD,CAArD;AAGA,IAAMC,uBAAAA,GAAAA,OAAAA,CAAAA,uBAAAA,GAA0B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAhC,yBAAgC,CAAhC;AAGA,IAAMC,UAAAA,GAAAA,OAAAA,CAAAA,UAAAA,GAAa,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAnB,YAAmB,CAAnB;AACA,IAAMC,cAAAA,GAAAA,OAAAA,CAAAA,cAAAA,GAAiB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvB,gBAAuB,CAAvB;AACA,IAAMC,yBAAAA,GAAAA,OAAAA,CAAAA,yBAAAA,GAA4B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAlC,2BAAkC,CAAlC;AAGA,IAAMC,qBAAAA,GAAAA,OAAAA,CAAAA,qBAAAA,GAAwB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA9B,uBAA8B,CAA9B;AAGA,IAAMC,+BAAAA,GAAAA,OAAAA,CAAAA,+BAAAA,GAAkC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAxC,4BAAwC,CAAxC;AAGA,IAAMC,wBAAAA,GAAAA,OAAAA,CAAAA,wBAAAA,GAA2B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAjC,qBAAiC,CAAjC;AAGA,IAAMC,4BAAAA,GAAAA,OAAAA,CAAAA,4BAAAA,GAA+B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAArC,8BAAqC,CAArC;AAGA,IAAMC,8BAAAA,GAAAA,OAAAA,CAAAA,8BAAAA,GAAiC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvC,gCAAuC,CAAvC;AAGA,IAAMC,wBAAAA,GAAAA,OAAAA,CAAAA,wBAAAA,GAA2B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAjC,qBAAiC,CAAjC;AAGA,IAAMC,kCAAAA,GAAAA,OAAAA,CAAAA,kCAAAA,GAAqC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA3C,+BAA2C,CAA3C;AAGA,IAAMC,0BAAAA,GAAAA,OAAAA,CAAAA,0BAAAA,GAA6B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAnC,uBAAmC,CAAnC;AAGA,IAAMC,sBAAAA,GAAAA,OAAAA,CAAAA,sBAAAA,GAAyB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA/B,wBAA+B,CAA/B;AAGA,IAAMC,WAAAA,GAAAA,OAAAA,CAAAA,WAAAA,GAAc,CAAA,GAAA,QAAA,CAAA,sBAAA,EAApB,aAAoB,CAApB;AACA,IAAMC,gBAAAA,GAAAA,OAAAA,CAAAA,gBAAAA,GAAmB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAzB,kBAAyB,CAAzB;AACA,IAAMC,gBAAAA,GAAAA,OAAAA,CAAAA,gBAAAA,GAAmB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAzB,kBAAyB,CAAzB;AACA,IAAMC,0BAAAA,GAAAA,OAAAA,CAAAA,0BAAAA,GAA6B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAnC,4BAAmC,CAAnC;AAGA,IAAMC,+BAAAA,GAAAA,OAAAA,CAAAA,+BAAAA,GAAkC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAxC,iCAAwC,CAAxC;AAGA,IAAMC,yBAAAA,GAAAA,OAAAA,CAAAA,yBAAAA,GAA4B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAlC,2BAAkC,CAAlC;AAGA,IAAMC,4CAAAA,GAAAA,OAAAA,CAAAA,4CAAAA,GAA+C,CAAA,GAAA,QAAA,CAAA,sBAAA,EAArD,8CAAqD,CAArD;AAGA,IAAMC,gBAAAA,GAAAA,OAAAA,CAAAA,gBAAAA,GAAmB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAzB,kBAAyB,CAAzB;AACA,IAAMC,YAAAA,GAAAA,OAAAA,CAAAA,YAAAA,GAAe,CAAA,GAAA,QAAA,CAAA,sBAAA,EAArB,cAAqB,CAArB;AACA,IAAMC,yBAAAA,GAAAA,OAAAA,CAAAA,yBAAAA,GAA4B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAlC,2BAAkC,CAAlC;AAGA,IAAMC,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA5B,qBAA4B,CAA5B;AAGA,IAAMC,uBAAAA,GAAAA,OAAAA,CAAAA,uBAAAA,GAA0B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAhC,oBAAgC,CAAhC;AAGA,IAAMC,sBAAAA,GAAAA,OAAAA,CAAAA,sBAAAA,GAAyB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA/B,mBAA+B,CAA/B;AAGA,IAAMC,2BAAAA,GAAAA,OAAAA,CAAAA,2BAAAA,GAA8B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAApC,6BAAoC,CAApC;AAGA,IAAMC,qBAAAA,GAAAA,OAAAA,CAAAA,qBAAAA,GAAwB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA9B,uBAA8B,CAA9B;AAGA,IAAMC,aAAAA,GAAAA,OAAAA,CAAAA,aAAAA,GAAgB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAtB,eAAsB,CAAtB;AACA,IAAMC,oBAAAA,GAAAA,OAAAA,CAAAA,oBAAAA,GAAuB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA7B,sBAA6B,CAA7B;AAGA,IAAMC,wBAAAA,GAAAA,OAAAA,CAAAA,wBAAAA,GAA2B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAjC,0BAAiC,CAAjC;AAGA,IAAMC,iBAAAA,GAAAA,OAAAA,CAAAA,iBAAAA,GAAoB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA1B,mBAA0B,CAA1B;AACA,IAAMC,wCAAAA,GAAAA,OAAAA,CAAAA,wCAAAA,GAA2C,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAjD,0CAAiD,CAAjD;AAGA,IAAMC,qCAAAA,GAAAA,OAAAA,CAAAA,qCAAAA,GAAwC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA9C,uCAA8C,CAA9C;AAGA,IAAMC,aAAAA,GAAAA,OAAAA,CAAAA,aAAAA,GAAgB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAtB,eAAsB,CAAtB;AACA,IAAMC,2BAAAA,GAAAA,OAAAA,CAAAA,2BAAAA,GAA8B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAApC,6BAAoC,CAApC;AAGA,IAAMC,kBAAAA,GAAAA,OAAAA,CAAAA,kBAAAA,GAAqB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA3B,oBAA2B,CAA3B;AACA,IAAMC,yBAAAA,GAAAA,OAAAA,CAAAA,yBAAAA,GAA4B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAlC,2BAAkC,CAAlC;AAGA,IAAMC,uBAAAA,GAAAA,OAAAA,CAAAA,uBAAAA,GAA0B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAhC,yBAAgC,CAAhC;AAGA,IAAMC,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA5B,qBAA4B,CAA5B,C,CAEJ;;AACI,IAAMC,0BAAAA,GAAAA,OAAAA,CAAAA,0BAAAA,GAA6B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAnC,4BAAmC,CAAnC;AAGA,IAAMC,8BAAAA,GAAAA,OAAAA,CAAAA,8BAAAA,GAAiC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvC,gCAAuC,CAAvC;AAGA,IAAMC,8BAAAA,GAAAA,OAAAA,CAAAA,8BAAAA,GAAiC,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvC,gCAAuC,CAAvC;AAGA,IAAMC,qBAAAA,GAAAA,OAAAA,CAAAA,qBAAAA,GAAwB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA9B,uBAA8B,CAA9B;AAGA,IAAMC,wBAAAA,GAAAA,OAAAA,CAAAA,wBAAAA,GAA2B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAjC,0BAAiC,CAAjC;AAGA,IAAMC,yBAAAA,GAAAA,OAAAA,CAAAA,yBAAAA,GAA4B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAlC,2BAAkC,CAAlC;AAGA,IAAMC,qBAAAA,GAAAA,OAAAA,CAAAA,qBAAAA,GAAwB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA9B,uBAA8B,CAA9B;AAGA,IAAMC,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA5B,qBAA4B,CAA5B;AAGA,IAAMC,gBAAAA,GAAAA,OAAAA,CAAAA,gBAAAA,GAAmB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAzB,kBAAyB,CAAzB;AACA,IAAMC,cAAAA,GAAAA,OAAAA,CAAAA,cAAAA,GAAiB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAvB,gBAAuB,CAAvB;AACA,IAAMC,YAAAA,GAAAA,OAAAA,CAAAA,YAAAA,GAAe,CAAA,GAAA,QAAA,CAAA,sBAAA,EAArB,cAAqB,CAArB;AACA,IAAMC,WAAAA,GAAAA,OAAAA,CAAAA,WAAAA,GAAc,CAAA,GAAA,QAAA,CAAA,sBAAA,EAApB,aAAoB,CAApB;AACA,IAAMC,UAAAA,GAAAA,OAAAA,CAAAA,UAAAA,GAAa,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAnB,YAAmB,CAAnB;AACA,IAAMC,SAAAA,GAAAA,OAAAA,CAAAA,SAAAA,GAAY,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAlB,WAAkB,CAAlB;AACA,IAAMC,aAAAA,GAAAA,OAAAA,CAAAA,aAAAA,GAAgB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAtB,eAAsB,CAAtB;AACA,IAAMC,kBAAAA,GAAAA,OAAAA,CAAAA,kBAAAA,GAAqB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAA3B,oBAA2B,CAA3B;AACA,IAAMC,YAAAA,GAAAA,OAAAA,CAAAA,YAAAA,GAAe,CAAA,GAAA,QAAA,CAAA,sBAAA,EAArB,cAAqB,CAArB;AACA,IAAMC,YAAAA,GAAAA,OAAAA,CAAAA,YAAAA,GAAe,CAAA,GAAA,QAAA,CAAA,sBAAA,EAArB,cAAqB,CAArB;AACA,IAAMC,2BAAAA,GAAAA,OAAAA,CAAAA,2BAAAA,GAA8B,CAAA,GAAA,QAAA,CAAA,sBAAA,EAApC,6BAAoC,CAApC,C,CAIP;;AACO,IAAMC,aAAAA,GAAAA,OAAAA,CAAAA,aAAAA,GAAgB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAtB,eAAsB,CAAtB;AACA,IAAMC,eAAAA,GAAAA,OAAAA,CAAAA,eAAAA,GAAkB,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAxB,iBAAwB,CAAxB;AACA,IAAMC,UAAAA,GAAAA,OAAAA,CAAAA,UAAAA,GAAa,CAAA,GAAA,QAAA,CAAA,sBAAA,EAAnB,YAAmB,CAAnB;AAEP;;;;;AAIO,SAAA,cAAA,CAAA,OAAA,EAAA,EAAA,EAAqD;AAC1D,OAAA,IAAA,GAAA,gBAAA;AACA,OAAA,OAAA,GAAA,OAAA;AACA,OAAA,KAAA,GAAa,IAAA,KAAA,GAAb,KAAA;AACA,OAAA,EAAA,GAAA,EAAA;AACD,C,CACD;;;AACAC,cAAAA,CAAAA,SAAAA,GAA2B,IAA3BA,KAA2B,EAA3BA;AAEA,CAAA,GAAA,QAAA,CAAA,0BAAA,EAAA,gBAAA,EAEE,UAAA,CAAA,EAAA;AAAA,SAAK,IAAA,cAAA,CAAmBC,CAAAA,CAAnB,OAAA,EAA8BA,CAAAA,CAAnC,EAAK,CAAL;AAFF,CAAA;AAKO,IAAMC,WAAAA,GAAAA,OAAAA,CAAAA,WAAAA,GAAc;AACzBC,EAAAA,sBAAAA,EADyB,MAAA;AAEzBC,EAAAA,gBAAAA,EAFyB,MAAA;AAGzBC,EAAAA,mCAAAA,EAHyB,MAAA;AAIzBC,EAAAA,6BAAAA,EAJyB,MAAA;AAKzBC,EAAAA,+BAAAA,EALyB,MAAA;AAMzBC,EAAAA,cAAAA,EANyB,MAAA;AAOzBC,EAAAA,uBAAAA,EAPyB,MAAA;AAQzBC,EAAAA,yBAAAA,EARyB,MAAA;AASzBC,EAAAA,mBAAAA,EATyB,MAAA;AAUzBC,EAAAA,eAAAA,EAVyB,MAAA;AAWzBC,EAAAA,iBAAAA,EAXyB,MAAA;AAYzBC,EAAAA,iBAAAA,EAZyB,MAAA;AAazBC,EAAAA,iBAAAA,EAbyB,MAAA;AAczBC,EAAAA,EAAAA,EAdyB,MAAA;AAezBC,EAAAA,cAAAA,EAfyB,MAAA;AAgBzBC,EAAAA,cAAAA,EAhByB,MAAA;AAiBzBC,EAAAA,cAAAA,EAjByB,MAAA;AAkBzBC,EAAAA,cAAAA,EAlByB,MAAA;AAmBzBC,EAAAA,iBAAAA,EAnByB,MAAA;AAoBzBC,EAAAA,uBAAAA,EApByB,MAAA;AAqBzBC,EAAAA,WAAAA,EArByB,MAAA;AAsBzBC,EAAAA,oBAAAA,EAtByB,MAAA;AAuBzBC,EAAAA,8BAAAA,EAvByB,MAAA;AAwBzBC,EAAAA,gCAAAA,EAxByB,MAAA;AAyBzBC,EAAAA,0BAAAA,EAzByB,MAAA;AA0BzBC,EAAAA,YAAAA,EA1ByB,MAAA;AA2BzBC,EAAAA,iBAAAA,EA3ByB,MAAA;AA4BzBC,EAAAA,cAAAA,EA5ByB,MAAA;AA6BzBC,EAAAA,SAAAA,EA7ByB,MAAA;AA8BzBC,EAAAA,MAAAA,EAAQ;AA9BiB,CAApB;;AAiCA,SAAA,mBAAA,CAAA,IAAA,EAAoD;AACzD,UAAA,IAAA;AACE;AACA,SAAA,MAAA;AACE,aAAA,kBAAA;;AACF,SAAA,MAAA;AACE,aAAA,sEAAA;;AACF,SAAA,MAAA;AACE,aAAA,sDAAA;;AACF,SAAA,MAAA;AACE,aAAA,uBAAA;;AACF,SAAA,MAAA;AACE,aAAA,4BAAA;AAXJ;;AAaA,MAAI,UAAA,IAAA,IAAkBE,IAAAA,IAAtB,MAAA,EAAsC;AACpC,WAAA,+BAAA;AACD;AACF;AAED;;;;;;AAIO,SAAA,oBAAA,CAAA,UAAA,EAAkD;AACvD,OAAA,IAAA,GAAA,sBAAA;AACA,MAAME,UAAAA,GACJ,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAA8B,UAAA,CAAA,EAAA;AAAA,WAAKlC,WAAAA,CAAAA,CAAAA,CAAAA,KAAL,UAAA;AAA9B,GAAA,KADF,eAAA;AAGA,MAAMmC,IAAAA,GAAOJ,mBAAAA,CAAAA,UAAAA,CAAAA,IAAb,UAAA;AACA,MAAMK,aAAAA,GAAgBC,UAAAA,CAAAA,QAAAA,CAAtB,EAAsBA,CAAtB;AACA,OAAA,OAAA,GAAA,oBAAA,IAAA,GAAA,MAAA,GAAA,aAAA,GAAA,GAAA;AACA,OAAA,KAAA,GAAa,IAAA,KAAA,GAAb,KAAA;AACA,OAAA,UAAA,GAAA,UAAA;AACA,OAAA,UAAA,GAAA,UAAA;AACD,C,CACD;;;AACAJ,oBAAAA,CAAAA,SAAAA,GAAiC,IAAjCA,KAAiC,EAAjCA;AAEA,CAAA,GAAA,QAAA,CAAA,0BAAA,EAAA,sBAAA,EAEE,UAAA,CAAA,EAAA;AAAA,SAAK,IAAA,oBAAA,CAAyBlC,CAAAA,CAA9B,UAAK,CAAL;AAFF,CAAA","sourcesContent":["// @flow\n\nimport {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer\n} from \"./helpers\";\n\nexport {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer\n};\n\nexport const AccountNameRequiredError = createCustomErrorClass(\n  \"AccountNameRequired\"\n);\nexport const AccountNotSupported = createCustomErrorClass(\n  \"AccountNotSupported\"\n);\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\n  \"CashAddrNotSupported\"\n);\nexport const CurrencyNotSupported = createCustomErrorClass(\n  \"CurrencyNotSupported\"\n);\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\n  \"DeviceAppVerifyNotSupported\"\n);\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\n  \"DeviceGenuineSocketEarlyClose\"\n);\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\n  \"DeviceOnDashboardExpected\"\n);\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\n  \"DeviceOnDashboardUnexpected\"\n);\nexport const DeviceInOSUExpected = createCustomErrorClass(\n  \"DeviceInOSUExpected\"\n);\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\n  \"DeviceSocketNoBulkStatus\"\n);\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\n  \"DisconnectedDeviceDuringOperation\"\n);\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\n  \"EthAppPleaseEnableContractData\"\n);\nexport const FeeEstimationFailed = createCustomErrorClass(\n  \"FeeEstimationFailed\"\n);\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\n  \"InvalidAddressBecauseDestinationIsAlsoSource\"\n);\nexport const LatestMCUInstalledError = createCustomErrorClass(\n  \"LatestMCUInstalledError\"\n);\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\n  \"LedgerAPIErrorWithMessage\"\n);\nexport const LedgerAPINotAvailable = createCustomErrorClass(\n  \"LedgerAPINotAvailable\"\n);\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\n  \"ManagerAppAlreadyInstalled\"\n);\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\n  \"ManagerAppRelyOnBTC\"\n);\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\n  \"ManagerAppDepInstallRequired\"\n);\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\n  \"ManagerAppDepUninstallRequired\"\n);\nexport const ManagerDeviceLockedError = createCustomErrorClass(\n  \"ManagerDeviceLocked\"\n);\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerFirmwareNotEnoughSpace\"\n);\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerNotEnoughSpace\"\n);\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\n  \"ManagerUninstallBTCDep\"\n);\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\n  \"NotEnoughBalanceToDelegate\"\n);\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\n  \"NotEnoughBalanceInParentAccount\"\n);\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\n  \"NotEnoughSpendableBalance\"\n);\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\n  \"NotEnoughBalanceBecauseDestinationNotCreated\"\n);\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\n  \"NotSupportedLegacyAddress\"\n);\nexport const GasLessThanEstimate = createCustomErrorClass(\n  \"GasLessThanEstimate\"\n);\nexport const PasswordsDontMatchError = createCustomErrorClass(\n  \"PasswordsDontMatch\"\n);\nexport const PasswordIncorrectError = createCustomErrorClass(\n  \"PasswordIncorrect\"\n);\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\n  \"RecommendSubAccountsToEmpty\"\n);\nexport const RecommendUndelegation = createCustomErrorClass(\n  \"RecommendUndelegation\"\n);\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\n  \"UnexpectedBootloader\"\n);\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\n  \"MCUNotGenuineToDashboard\"\n);\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountReceive\"\n);\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountSend\"\n);\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\n  \"UserRefusedDeviceNameChange\"\n);\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\n  \"UserRefusedFirmwareUpdate\"\n);\nexport const UserRefusedAllowManager = createCustomErrorClass(\n  \"UserRefusedAllowManager\"\n);\nexport const UserRefusedOnDevice = createCustomErrorClass(\n  \"UserRefusedOnDevice\"\n); // TODO rename because it's just for transaction refusal\nexport const TransportOpenUserCancelled = createCustomErrorClass(\n  \"TransportOpenUserCancelled\"\n);\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\n  \"TransportInterfaceNotAvailable\"\n);\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\n  \"TransportWebUSBGestureRequired\"\n);\nexport const DeviceShouldStayInApp = createCustomErrorClass(\n  \"DeviceShouldStayInApp\"\n);\nexport const WebsocketConnectionError = createCustomErrorClass(\n  \"WebsocketConnectionError\"\n);\nexport const WebsocketConnectionFailed = createCustomErrorClass(\n  \"WebsocketConnectionFailed\"\n);\nexport const WrongDeviceForAccount = createCustomErrorClass(\n  \"WrongDeviceForAccount\"\n);\nexport const WrongAppForCurrency = createCustomErrorClass(\n  \"WrongAppForCurrency\"\n);\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\n  \"FirmwareOrAppUpdateRequired\"\n);\n\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport function TransportError(message: string, id: string) {\n  this.name = \"TransportError\";\n  this.message = message;\n  this.stack = new Error().stack;\n  this.id = id;\n}\n//$FlowFixMe\nTransportError.prototype = new Error();\n\naddCustomErrorDeserializer(\n  \"TransportError\",\n  e => new TransportError(e.message, e.id)\n);\n\nexport const StatusCodes = {\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  INCORRECT_LENGTH: 0x6700,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  INCORRECT_DATA: 0x6a80,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  TECHNICAL_PROBLEM: 0x6f00,\n  OK: 0x9000,\n  MEMORY_PROBLEM: 0x9240,\n  NO_EF_SELECTED: 0x9400,\n  INVALID_OFFSET: 0x9402,\n  FILE_NOT_FOUND: 0x9404,\n  INCONSISTENT_FILE: 0x9408,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  INVALID_KCV: 0x9485,\n  CODE_NOT_INITIALIZED: 0x9802,\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CODE_BLOCKED: 0x9840,\n  MAX_VALUE_REACHED: 0x9850,\n  GP_AUTH_FAILED: 0x6300,\n  LICENSING: 0x6f42,\n  HALTED: 0x6faa\n};\n\nexport function getAltStatusMessage(code: number): ?string {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n    case 0x6a80:\n      return \"Invalid data received\";\n    case 0x6b00:\n      return \"Invalid parameter received\";\n  }\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport function TransportStatusError(statusCode: number) {\n  this.name = \"TransportStatusError\";\n  const statusText =\n    Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) ||\n    \"UNKNOWN_ERROR\";\n  const smsg = getAltStatusMessage(statusCode) || statusText;\n  const statusCodeStr = statusCode.toString(16);\n  this.message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n  this.stack = new Error().stack;\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n}\n//$FlowFixMe\nTransportStatusError.prototype = new Error();\n\naddCustomErrorDeserializer(\n  \"TransportStatusError\",\n  e => new TransportStatusError(e.statusCode)\n);\n"]},"metadata":{},"sourceType":"script"}