{"ast":null,"code":"import React,{Suspense,lazy,useEffect}from\"react\";import ReactGA from\"react-ga\";import{Switch,Route,Redirect}from\"react-router-dom\";import ModeSelector from\"./ModeSelector\";var AddLiquidity=lazy(function(){return import(\"./AddLiquidity\");});var RemoveLiquidity=lazy(function(){return import(\"./RemoveLiquidity\");});var CreateExchange=lazy(function(){return import(\"./CreateExchange\");});export default function Pool(_ref){var params=_ref.params;useEffect(function(){ReactGA.pageview(window.location.pathname+window.location.search);},[]);var AddLiquidityParams=function AddLiquidityParams(){return React.createElement(AddLiquidity,{params:params});};var RemoveLiquidityParams=function RemoveLiquidityParams(){return React.createElement(RemoveLiquidity,{params:params});};var CreateExchangeParams=function CreateExchangeParams(){return React.createElement(CreateExchange,{params:params});};return React.createElement(React.Fragment,null,React.createElement(ModeSelector,null),React.createElement(Suspense,{fallback:null},React.createElement(Switch,null,React.createElement(Route,{exact:true,strict:true,path:\"/add-liquidity\",component:AddLiquidityParams}),React.createElement(Route,{exact:true,strict:true,path:\"/remove-liquidity\",component:RemoveLiquidityParams}),React.createElement(Route,{exact:true,strict:true,path:\"/create-exchange\",component:CreateExchangeParams}),React.createElement(Route,{path:\"/create-exchange/:tokenAddress\",render:function render(_ref2){var match=_ref2.match;return React.createElement(Redirect,{to:{pathname:\"/create-exchange\",state:{tokenAddress:match.params.tokenAddress}}});}}),React.createElement(Redirect,{to:\"/add-liquidity\"}))));}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/pages/Pool/index.js"],"names":["React","Suspense","lazy","useEffect","ReactGA","Switch","Route","Redirect","ModeSelector","AddLiquidity","RemoveLiquidity","CreateExchange","Pool","params","pageview","window","location","pathname","search","AddLiquidityParams","RemoveLiquidityParams","CreateExchangeParams","match","state","tokenAddress"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,IAA1B,CAAgCC,SAAhC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,QAAxB,KAAwC,kBAAxC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAGP,IAAI,CAAC,iBAAM,QAAO,gBAAP,CAAN,EAAD,CAAzB,CACA,GAAMQ,CAAAA,eAAe,CAAGR,IAAI,CAAC,iBAAM,QAAO,mBAAP,CAAN,EAAD,CAA5B,CACA,GAAMS,CAAAA,cAAc,CAAGT,IAAI,CAAC,iBAAM,QAAO,kBAAP,CAAN,EAAD,CAA3B,CAEA,cAAe,SAASU,CAAAA,IAAT,MAA0B,IAAVC,CAAAA,MAAU,MAAVA,MAAU,CACvCV,SAAS,CAAC,UAAM,CACdC,OAAO,CAACU,QAAR,CAAiBC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAA2BF,MAAM,CAACC,QAAP,CAAgBE,MAA5D,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAM,qBAAC,YAAD,EAAc,MAAM,CAAEN,MAAtB,EAAN,EAA3B,CAEA,GAAMO,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAM,qBAAC,eAAD,EAAiB,MAAM,CAAEP,MAAzB,EAAN,EAA9B,CAEA,GAAMQ,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,SAAM,qBAAC,cAAD,EAAgB,MAAM,CAAER,MAAxB,EAAN,EAA7B,CAEA,MACE,yCACE,oBAAC,YAAD,MADF,CAGE,oBAAC,QAAD,EAAU,QAAQ,CAAE,IAApB,EACE,oBAAC,MAAD,MACE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,MAAM,KAFR,CAGE,IAAI,CAAC,gBAHP,CAIE,SAAS,CAAEM,kBAJb,EADF,CAOE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,MAAM,KAFR,CAGE,IAAI,CAAC,mBAHP,CAIE,SAAS,CAAEC,qBAJb,EAPF,CAaE,oBAAC,KAAD,EACE,KAAK,KADP,CAEE,MAAM,KAFR,CAGE,IAAI,CAAC,kBAHP,CAIE,SAAS,CAAEC,oBAJb,EAbF,CAmBE,oBAAC,KAAD,EACE,IAAI,CAAC,gCADP,CAEE,MAAM,CAAE,sBAAe,IAAZC,CAAAA,KAAY,OAAZA,KAAY,CACrB,MACE,qBAAC,QAAD,EACE,EAAE,CAAE,CACFL,QAAQ,CAAE,kBADR,CAEFM,KAAK,CAAE,CAAEC,YAAY,CAAEF,KAAK,CAACT,MAAN,CAAaW,YAA7B,CAFL,CADN,EADF,CAQD,CAXH,EAnBF,CAgCE,oBAAC,QAAD,EAAU,EAAE,CAAC,gBAAb,EAhCF,CADF,CAHF,CADF,CA0CD","sourcesContent":["import React, { Suspense, lazy, useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ModeSelector from \"./ModeSelector\";\n\nconst AddLiquidity = lazy(() => import(\"./AddLiquidity\"));\nconst RemoveLiquidity = lazy(() => import(\"./RemoveLiquidity\"));\nconst CreateExchange = lazy(() => import(\"./CreateExchange\"));\n\nexport default function Pool({ params }) {\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  const AddLiquidityParams = () => <AddLiquidity params={params} />;\n\n  const RemoveLiquidityParams = () => <RemoveLiquidity params={params} />;\n\n  const CreateExchangeParams = () => <CreateExchange params={params} />;\n\n  return (\n    <>\n      <ModeSelector />\n      {/* this Suspense is for route code-splitting */}\n      <Suspense fallback={null}>\n        <Switch>\n          <Route\n            exact\n            strict\n            path=\"/add-liquidity\"\n            component={AddLiquidityParams}\n          />\n          <Route\n            exact\n            strict\n            path=\"/remove-liquidity\"\n            component={RemoveLiquidityParams}\n          />\n          <Route\n            exact\n            strict\n            path=\"/create-exchange\"\n            component={CreateExchangeParams}\n          />\n          <Route\n            path=\"/create-exchange/:tokenAddress\"\n            render={({ match }) => {\n              return (\n                <Redirect\n                  to={{\n                    pathname: \"/create-exchange\",\n                    state: { tokenAddress: match.params.tokenAddress }\n                  }}\n                />\n              );\n            }}\n          />\n          <Redirect to=\"/add-liquidity\" />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}