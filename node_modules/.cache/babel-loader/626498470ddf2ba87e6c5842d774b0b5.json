{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2019 Coinbase, Inc. <https://coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _regeneratorRuntime = require(\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _assertThisInitialized = require(\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/workspace/uniswap-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar eth_eip712_util_1 = __importDefault(require(\"eth-eip712-util\"));\n\nvar events_1 = require(\"events\");\n\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\n\nvar JSONRPC_1 = require(\"./types/JSONRPC\");\n\nvar Web3Provider_1 = require(\"./types/Web3Provider\");\n\nvar util_1 = require(\"./util\");\n\nvar LOCAL_STORAGE_ADDRESSES_KEY = \"Addresses\";\n\nvar WalletLinkProvider =\n/*#__PURE__*/\nfunction (_events_1$EventEmitte) {\n  _inherits(WalletLinkProvider, _events_1$EventEmitte);\n\n  function WalletLinkProvider(options) {\n    var _this;\n\n    _classCallCheck(this, WalletLinkProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WalletLinkProvider).call(this));\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._addresses = [];\n    _this._send = _this.send;\n    _this._sendAsync = _this.sendAsync;\n\n    if (!options.relay) {\n      throw new Error(\"realy must be provided\");\n    }\n\n    if (!options.jsonRpcUrl) {\n      throw new Error(\"jsonRpcUrl must be provided\");\n    }\n\n    _this._relay = options.relay;\n    _this._chainId = util_1.ensureIntNumber(options.chainId || 1);\n    _this._jsonRpcUrl = options.jsonRpcUrl;\n\n    var cahedAddresses = _this._relay.getStorageItem(LOCAL_STORAGE_ADDRESSES_KEY);\n\n    if (cahedAddresses) {\n      var addresses = cahedAddresses.split(\" \");\n\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses;\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(WalletLinkProvider, [{\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      return _regeneratorRuntime.async(function enable$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this._addresses.length > 0)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", this._addresses);\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts));\n\n            case 4:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 1,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      } // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n\n\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      } // send(JSONRPCRequest[]): JSONRPCResponse[]\n\n\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      } // send(JSONRPCRequest): JSONRPCResponse\n\n\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(request, callback) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"callback is required\");\n      } // send(JSONRPCRequest[], callback): void\n\n\n      if (Array.isArray(request)) {\n        var arrayCb = callback;\n\n        this._sendMultipleRequestsAsync(request).then(function (responses) {\n          return arrayCb(null, responses);\n        }).catch(function (err) {\n          return arrayCb(err, null);\n        });\n\n        return;\n      } // send(JSONRPCRequest, callback): void\n\n\n      var cb = callback;\n\n      this._sendRequestAsync(request).then(function (response) {\n        return cb(null, response);\n      }).catch(function (err) {\n        return cb(err, null);\n      });\n    }\n  }, {\n    key: \"scanQRCode\",\n    value: function scanQRCode(match) {\n      var res;\n      return _regeneratorRuntime.async(function scanQRCode$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this._relay.scanQRCode(util_1.ensureRegExpString(match)));\n\n            case 2:\n              res = _context2.sent;\n\n              if (!(typeof res.result !== \"string\")) {\n                _context2.next = 5;\n                break;\n              }\n\n              throw new Error(\"result was not a string\");\n\n            case 5:\n              return _context2.abrupt(\"return\", res.result);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"arbitraryRequest\",\n    value: function arbitraryRequest(data) {\n      var res;\n      return _regeneratorRuntime.async(function arbitraryRequest$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this._relay.arbitraryRequest(data));\n\n            case 2:\n              res = _context3.sent;\n\n              if (!(typeof res.result !== \"string\")) {\n                _context3.next = 5;\n                break;\n              }\n\n              throw new Error(\"result was not a string\");\n\n            case 5:\n              return _context3.abrupt(\"return\", res.result);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n\n      if (response.result === undefined) {\n        throw new Error(\"WalletLink does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n\n      this._addresses = addresses.map(function (address) {\n        return util_1.ensureAddressString(address);\n      });\n\n      this._relay.setStorageItem(LOCAL_STORAGE_ADDRESSES_KEY, addresses.join(\" \"));\n\n      this.emit(\"accountsChanged\", this._addresses);\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign({}, res, {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return resolve(Object.assign({}, res, {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function _handleAsynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n          return this._eth_requestAccounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_sign:\n          return this._eth_sign(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n          return this._eth_ecRecover(params);\n\n        case JSONRPC_1.JSONRPCMethod.personal_sign:\n          return this._personal_sign(params);\n\n        case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n          return this._personal_ecRecover(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n          return this._eth_signTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n          return this._eth_sendRawTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n          return this._eth_sendTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n          return this._eth_signTypedData_v1(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n          return this._throwUnsupportedMethodError();\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n          return this._eth_signTypedData_v3(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n          return this._eth_signTypedData_v4(params);\n\n        case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n          return this._walletlink_arbitrary(params);\n      }\n\n      return window.fetch(this._jsonRpcUrl, {\n        method: \"POST\",\n        body: JSON.stringify(request),\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (!json) {\n          throw new Web3Provider_1.ProviderError(\"unexpected response\");\n        }\n\n        var response = json;\n        var error = response.error;\n\n        if (error) {\n          throw new Web3Provider_1.ProviderError(error.message || \"RPC Error\", error.code, error.data);\n        }\n\n        return response;\n      });\n    }\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var address = util_1.ensureAddressString(addressString);\n        return this._addresses.includes(address);\n      } catch (_a) {}\n\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      if (!this._isKnownAddress(addressString)) {\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? util_1.ensureAddressString(tx.from) : this.selectedAddress;\n\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n\n      this._ensureKnownAddress(fromAddress);\n\n      var toAddress = tx.to ? util_1.ensureAddressString(tx.to) : null;\n      var weiValue = tx.value != null ? util_1.ensureBN(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? util_1.ensureBuffer(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? util_1.ensureIntNumber(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? util_1.ensureBN(tx.gasPrice) : null;\n      var gasLimit = tx.gas != null ? util_1.ensureBN(tx.gas) : null;\n      var chainId = this._chainId;\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (this._addresses.length === 0) {\n        throw new Web3Provider_1.ProviderError(\"Unauthorized\", Web3Provider_1.ProviderErrorCode.UNAUTHORIZED);\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw new Web3Provider_1.ProviderError(\"Unsupported method\", Web3Provider_1.ProviderErrorCode.UNSUPPORTED_METHOD);\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n      var res;\n      return _regeneratorRuntime.async(function _signEthereumMessage$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this._ensureKnownAddress(address);\n\n              _context4.prev = 1;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(this._relay.signEthereumMessage(message, address, addPrefix, typedDataJson));\n\n            case 4:\n              res = _context4.sent;\n              return _context4.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n\n              if (!(typeof _context4.t0.message === \"string\" && _context4.t0.message.match(/(denied|rejected)/i))) {\n                _context4.next = 12;\n                break;\n              }\n\n              throw new Web3Provider_1.ProviderError(\"User denied message signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n\n            case 12:\n              throw _context4.t0;\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[1, 8]]);\n    }\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n      var res;\n      return _regeneratorRuntime.async(function _ethereumAddressFromSignedMessage$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(this._relay.ethereumAddressFromSignedMessage(message, signature, addPrefix));\n\n            case 2:\n              res = _context5.sent;\n              return _context5.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return this._addresses;\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this._chainId.toString(10);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function _eth_requestAccounts() {\n      var res;\n      return _regeneratorRuntime.async(function _eth_requestAccounts$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(this._addresses.length > 0)) {\n                _context6.next = 2;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              }));\n\n            case 2:\n              _context6.prev = 2;\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(this._relay.requestEthereumAccounts());\n\n            case 5:\n              res = _context6.sent;\n              _context6.next = 13;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](2);\n\n              if (!(typeof _context6.t0.message === \"string\" && _context6.t0.message.match(/(denied|rejected)/i))) {\n                _context6.next = 12;\n                break;\n              }\n\n              throw new Web3Provider_1.ProviderError(\"User denied account authorization\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_ACCOUNTS);\n\n            case 12:\n              throw _context6.t0;\n\n            case 13:\n              if (res.result) {\n                _context6.next = 15;\n                break;\n              }\n\n              throw new Error(\"accounts received is empty\");\n\n            case 15:\n              this._setAddresses(res.result);\n\n              return _context6.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              });\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, [[2, 8]]);\n    }\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n\n      var address = util_1.ensureAddressString(params[0]);\n      var message = util_1.ensureBuffer(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = util_1.ensureBuffer(params[0]);\n      var signature = util_1.ensureBuffer(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n\n      var message = util_1.ensureBuffer(params[0]);\n      var address = util_1.ensureAddressString(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = util_1.ensureBuffer(params[0]);\n      var signature = util_1.ensureBuffer(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function _eth_signTransaction(params) {\n      var tx, res;\n      return _regeneratorRuntime.async(function _eth_signTransaction$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this._requireAuthorization();\n\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context7.prev = 2;\n              _context7.next = 5;\n              return _regeneratorRuntime.awrap(this._relay.signEthereumTransaction(tx));\n\n            case 5:\n              res = _context7.sent;\n              return _context7.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](2);\n\n              if (!(typeof _context7.t0.message === \"string\" && _context7.t0.message.match(/(denied|rejected)/i))) {\n                _context7.next = 13;\n                break;\n              }\n\n              throw new Web3Provider_1.ProviderError(\"User denied transaction signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n\n            case 13:\n              throw _context7.t0;\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, [[2, 9]]);\n    }\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function _eth_sendRawTransaction(params) {\n      var signedTransaction, res;\n      return _regeneratorRuntime.async(function _eth_sendRawTransaction$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              signedTransaction = util_1.ensureBuffer(params[0]);\n              _context8.next = 3;\n              return _regeneratorRuntime.awrap(this._relay.submitEthereumTransaction(signedTransaction, this._chainId));\n\n            case 3:\n              res = _context8.sent;\n              return _context8.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function _eth_sendTransaction(params) {\n      var tx, res;\n      return _regeneratorRuntime.async(function _eth_sendTransaction$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              this._requireAuthorization();\n\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context9.prev = 2;\n              _context9.next = 5;\n              return _regeneratorRuntime.awrap(this._relay.signAndSubmitEthereumTransaction(tx));\n\n            case 5:\n              res = _context9.sent;\n              return _context9.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](2);\n\n              if (!(typeof _context9.t0.message === \"string\" && _context9.t0.message.match(/(denied|rejected)/i))) {\n                _context9.next = 13;\n                break;\n              }\n\n              throw new Web3Provider_1.ProviderError(\"User denied transaction signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n\n            case 13:\n              throw _context9.t0;\n\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, [[2, 9]]);\n    }\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function _eth_signTypedData_v1(params) {\n      var typedData, address, message, typedDataJson;\n      return _regeneratorRuntime.async(function _eth_signTypedData_v1$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              this._requireAuthorization();\n\n              typedData = params[0];\n              address = util_1.ensureAddressString(params[1]);\n\n              this._ensureKnownAddress(address);\n\n              message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                data: typedData\n              });\n              typedDataJson = JSON.stringify(typedData, null, 2);\n              return _context10.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJson));\n\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function _eth_signTypedData_v3(params) {\n      var address, typedData, message, typedDataJson;\n      return _regeneratorRuntime.async(function _eth_signTypedData_v3$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              this._requireAuthorization();\n\n              address = util_1.ensureAddressString(params[0]);\n              typedData = params[1];\n\n              this._ensureKnownAddress(address);\n\n              message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                data: typedData\n              });\n              typedDataJson = JSON.stringify(typedData, null, 2);\n              return _context11.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJson));\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function _eth_signTypedData_v4(params) {\n      var address, typedData, message, typedDataJson;\n      return _regeneratorRuntime.async(function _eth_signTypedData_v4$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              this._requireAuthorization();\n\n              address = util_1.ensureAddressString(params[0]);\n              typedData = params[1];\n\n              this._ensureKnownAddress(address);\n\n              message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                data: typedData\n              });\n              typedDataJson = JSON.stringify(typedData, null, 2);\n              return _context12.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJson));\n\n            case 7:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_walletlink_arbitrary\",\n    value: function _walletlink_arbitrary(params) {\n      var data, result;\n      return _regeneratorRuntime.async(function _walletlink_arbitrary$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              data = params[0];\n\n              if (!(typeof data !== \"string\")) {\n                _context13.next = 3;\n                break;\n              }\n\n              throw new Error(\"parameter must be a string\");\n\n            case 3:\n              _context13.next = 5;\n              return _regeneratorRuntime.awrap(this.arbitraryRequest(data));\n\n            case 5:\n              result = _context13.sent;\n              return _context13.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: result\n              });\n\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function _eth_newFilter(params) {\n      var param, filterId;\n      return _regeneratorRuntime.async(function _eth_newFilter$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              param = params[0]; // TODO: un-any this\n\n              _context14.next = 3;\n              return _regeneratorRuntime.awrap(this._filterPolyfill.newFilter(param));\n\n            case 3:\n              filterId = _context14.sent;\n              return _context14.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function _eth_newBlockFilter() {\n      var filterId;\n      return _regeneratorRuntime.async(function _eth_newBlockFilter$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return _regeneratorRuntime.awrap(this._filterPolyfill.newBlockFilter());\n\n            case 2:\n              filterId = _context15.sent;\n              return _context15.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n\n            case 4:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function _eth_newPendingTransactionFilter() {\n      var filterId;\n      return _regeneratorRuntime.async(function _eth_newPendingTransactionFilter$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return _regeneratorRuntime.awrap(this._filterPolyfill.newPendingTransactionFilter());\n\n            case 2:\n              filterId = _context16.sent;\n              return _context16.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n\n            case 4:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this._chainId.toString(10);\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this._jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return WalletLinkProvider;\n}(events_1.EventEmitter);\n\nexports.WalletLinkProvider = WalletLinkProvider;","map":{"version":3,"sources":["/workspace/uniswap-exchange/node_modules/walletlink/dist/WalletLinkProvider.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","bn_js_1","require","eth_eip712_util_1","events_1","FilterPolyfill_1","JSONRPC_1","Web3Provider_1","util_1","LOCAL_STORAGE_ADDRESSES_KEY","WalletLinkProvider","options","_filterPolyfill","FilterPolyfill","_addresses","_send","send","_sendAsync","sendAsync","relay","Error","jsonRpcUrl","_relay","_chainId","ensureIntNumber","chainId","_jsonRpcUrl","cahedAddresses","getStorageItem","addresses","split","length","JSONRPCMethod","eth_requestAccounts","requestOrMethod","callbackOrParams","method","params","Array","isArray","undefined","request","jsonrpc","id","_sendRequestAsync","then","res","result","callback","requests","map","r","_sendRequest","req","arrayCb","_sendMultipleRequestsAsync","responses","catch","err","cb","response","match","scanQRCode","ensureRegExpString","data","arbitraryRequest","_handleSynchronousMethods","address","ensureAddressString","setStorageItem","join","emit","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","_eth_requestAccounts","eth_sign","_eth_sign","eth_ecRecover","_eth_ecRecover","personal_sign","_personal_sign","personal_ecRecover","_personal_ecRecover","eth_signTransaction","_eth_signTransaction","eth_sendRawTransaction","_eth_sendRawTransaction","eth_sendTransaction","_eth_sendTransaction","eth_signTypedData_v1","_eth_signTypedData_v1","eth_signTypedData_v2","_throwUnsupportedMethodError","eth_signTypedData_v3","_eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","_eth_signTypedData_v4","walletlink_arbitrary","_walletlink_arbitrary","window","fetch","body","JSON","stringify","mode","headers","json","ProviderError","error","message","code","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","addressString","includes","_a","_isKnownAddress","tx","fromAddress","from","selectedAddress","_ensureKnownAddress","toAddress","to","weiValue","ensureBN","default","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","gasLimit","gas","ProviderErrorCode","UNAUTHORIZED","UNSUPPORTED_METHOD","addPrefix","typedDataJson","signEthereumMessage","USER_DENIED_REQUEST_SIGNATURE","signature","ethereumAddressFromSignedMessage","toString","requestEthereumAccounts","USER_DENIED_REQUEST_ACCOUNTS","_setAddresses","_requireAuthorization","_signEthereumMessage","_ethereumAddressFromSignedMessage","_prepareTransactionParams","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","hashForSignTypedDataLegacy","hashForSignTypedData_v3","hashForSignTypedData_v4","filterId","ensureHexString","uninstallFilter","param","newFilter","newBlockFilter","newPendingTransactionFilter","getFilterChanges","getFilterLogs","EventEmitter"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2019 Coinbase, Inc. <https://coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_eip712_util_1 = __importDefault(require(\"eth-eip712-util\"));\nconst events_1 = require(\"events\");\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./types/JSONRPC\");\nconst Web3Provider_1 = require(\"./types/Web3Provider\");\nconst util_1 = require(\"./util\");\nconst LOCAL_STORAGE_ADDRESSES_KEY = \"Addresses\";\nclass WalletLinkProvider extends events_1.EventEmitter {\n    constructor(options) {\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._addresses = [];\n        this._send = this.send;\n        this._sendAsync = this.sendAsync;\n        if (!options.relay) {\n            throw new Error(\"realy must be provided\");\n        }\n        if (!options.jsonRpcUrl) {\n            throw new Error(\"jsonRpcUrl must be provided\");\n        }\n        this._relay = options.relay;\n        this._chainId = util_1.ensureIntNumber(options.chainId || 1);\n        this._jsonRpcUrl = options.jsonRpcUrl;\n        const cahedAddresses = this._relay.getStorageItem(LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cahedAddresses) {\n            const addresses = cahedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses;\n            }\n        }\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this._chainId.toString(10);\n    }\n    get isWalletLink() {\n        return true;\n    }\n    get host() {\n        return this._jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    async enable() {\n        if (this._addresses.length > 0) {\n            return this._addresses;\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = { jsonrpc: \"2.0\", id: 1, method, params };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async scanQRCode(match) {\n        const res = await this._relay.scanQRCode(util_1.ensureRegExpString(match));\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async arbitraryRequest(data) {\n        const res = await this._relay.arbitraryRequest(data);\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`WalletLink does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        this._addresses = addresses.map(address => util_1.ensureAddressString(address));\n        this._relay.setStorageItem(LOCAL_STORAGE_ADDRESSES_KEY, addresses.join(\" \"));\n        this.emit(\"accountsChanged\", this._addresses);\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign({}, res, { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => resolve(Object.assign({}, res, { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            default:\n                return undefined;\n        }\n    }\n    _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n                return this._walletlink_arbitrary(params);\n        }\n        return window\n            .fetch(this._jsonRpcUrl, {\n            method: \"POST\",\n            body: JSON.stringify(request),\n            mode: \"cors\",\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n            .then(res => res.json())\n            .then(json => {\n            if (!json) {\n                throw new Web3Provider_1.ProviderError(\"unexpected response\");\n            }\n            const response = json;\n            const { error } = response;\n            if (error) {\n                throw new Web3Provider_1.ProviderError(error.message || \"RPC Error\", error.code, error.data);\n            }\n            return response;\n        });\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const address = util_1.ensureAddressString(addressString);\n            return this._addresses.includes(address);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        if (!this._isKnownAddress(addressString)) {\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? util_1.ensureAddressString(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? util_1.ensureAddressString(tx.to) : null;\n        const weiValue = tx.value != null ? util_1.ensureBN(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? util_1.ensureBuffer(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? util_1.ensureIntNumber(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? util_1.ensureBN(tx.gasPrice) : null;\n        const gasLimit = tx.gas != null ? util_1.ensureBN(tx.gas) : null;\n        const chainId = this._chainId;\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            gasLimit,\n            chainId\n        };\n    }\n    _requireAuthorization() {\n        if (this._addresses.length === 0) {\n            throw new Web3Provider_1.ProviderError(\"Unauthorized\", Web3Provider_1.ProviderErrorCode.UNAUTHORIZED);\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw new Web3Provider_1.ProviderError(\"Unsupported method\", Web3Provider_1.ProviderErrorCode.UNSUPPORTED_METHOD);\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const res = await this._relay.signEthereumMessage(message, address, addPrefix, typedDataJson);\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw new Web3Provider_1.ProviderError(\"User denied message signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const res = await this._relay.ethereumAddressFromSignedMessage(message, signature, addPrefix);\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return this._addresses;\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this._chainId.toString(10);\n    }\n    async _eth_requestAccounts() {\n        if (this._addresses.length > 0) {\n            return Promise.resolve({ jsonrpc: \"2.0\", id: 0, result: this._addresses });\n        }\n        let res;\n        try {\n            res = await this._relay.requestEthereumAccounts();\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw new Web3Provider_1.ProviderError(\"User denied account authorization\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_ACCOUNTS);\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = util_1.ensureAddressString(params[0]);\n        const message = util_1.ensureBuffer(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = util_1.ensureBuffer(params[0]);\n        const signature = util_1.ensureBuffer(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = util_1.ensureBuffer(params[0]);\n        const address = util_1.ensureAddressString(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = util_1.ensureBuffer(params[0]);\n        const signature = util_1.ensureBuffer(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const res = await this._relay.signEthereumTransaction(tx);\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw new Web3Provider_1.ProviderError(\"User denied transaction signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = util_1.ensureBuffer(params[0]);\n        const res = await this._relay.submitEthereumTransaction(signedTransaction, this._chainId);\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const res = await this._relay.signAndSubmitEthereumTransaction(tx);\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw new Web3Provider_1.ProviderError(\"User denied transaction signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = params[0];\n        const address = util_1.ensureAddressString(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJson = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJson);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = util_1.ensureAddressString(params[0]);\n        const typedData = params[1];\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJson = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJson);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = util_1.ensureAddressString(params[0]);\n        const typedData = params[1];\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJson = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJson);\n    }\n    async _walletlink_arbitrary(params) {\n        const data = params[0];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        const result = await this.arbitraryRequest(data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = util_1.ensureHexString(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0]; // TODO: un-any this\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = util_1.ensureHexString(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = util_1.ensureHexString(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n}\nexports.WalletLinkProvider = WalletLinkProvider;\n"]},"metadata":{},"sourceType":"script"}