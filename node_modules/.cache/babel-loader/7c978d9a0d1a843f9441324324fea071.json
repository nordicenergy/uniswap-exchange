{"ast":null,"code":"var _jsxFileName = \"/workspace/uniswap-exchange/src/pages/Pool/index.js\";\nimport React, { Suspense, lazy, useEffect } from 'react';\nimport ReactGA from 'react-ga';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ModeSelector from './ModeSelector';\nconst AddLiquidity = lazy(() => import('./AddLiquidity'));\nconst RemoveLiquidity = lazy(() => import('./RemoveLiquidity'));\nconst CreateExchange = lazy(() => import('./CreateExchange'));\nexport default function Pool({\n  params\n}) {\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  const AddLiquidityParams = () => React.createElement(AddLiquidity, {\n    params: params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n\n  const RemoveLiquidityParams = () => React.createElement(RemoveLiquidity, {\n    params: params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n\n  const CreateExchangeParams = () => React.createElement(CreateExchange, {\n    params: params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n\n  return React.createElement(React.Fragment, null, React.createElement(ModeSelector, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Suspense, {\n    fallback: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    strict: true,\n    path: \"/add-liquidity\",\n    component: AddLiquidityParams,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    strict: true,\n    path: \"/remove-liquidity\",\n    component: RemoveLiquidityParams,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    strict: true,\n    path: \"/create-exchange\",\n    component: CreateExchangeParams,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/create-exchange/:tokenAddress\",\n    render: ({\n      match\n    }) => {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/create-exchange',\n          state: {\n            tokenAddress: match.params.tokenAddress\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/add-liquidity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/workspace/uniswap-exchange/src/pages/Pool/index.js"],"names":["React","Suspense","lazy","useEffect","ReactGA","Switch","Route","Redirect","ModeSelector","AddLiquidity","RemoveLiquidity","CreateExchange","Pool","params","pageview","window","location","pathname","search","AddLiquidityParams","RemoveLiquidityParams","CreateExchangeParams","match","state","tokenAddress"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,YAAY,GAAGP,IAAI,CAAC,MAAM,OAAO,gBAAP,CAAP,CAAzB;AACA,MAAMQ,eAAe,GAAGR,IAAI,CAAC,MAAM,OAAO,mBAAP,CAAP,CAA5B;AACA,MAAMS,cAAc,GAAGT,IAAI,CAAC,MAAM,OAAO,kBAAP,CAAP,CAA3B;AAEA,eAAe,SAASU,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA0B;AACvCV,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,CAACU,QAAR,CAAiBC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2BF,MAAM,CAACC,QAAP,CAAgBE,MAA5D;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,kBAAkB,GAAG,MAAM,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEN,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC;;AAEA,QAAMO,qBAAqB,GAAG,MAAM,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEP,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC;;AAEA,QAAMQ,oBAAoB,GAAG,MAAM,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAER,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC;;AAEA,SACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,MAAM,MAAnB;AAAoB,IAAA,IAAI,EAAC,gBAAzB;AAA0C,IAAA,SAAS,EAAEM,kBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,MAAM,MAAnB;AAAoB,IAAA,IAAI,EAAC,mBAAzB;AAA6C,IAAA,SAAS,EAAEC,qBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,MAAM,MAAnB;AAAoB,IAAA,IAAI,EAAC,kBAAzB;AAA4C,IAAA,SAAS,EAAEC,oBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,gCADP;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAe;AACrB,aACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFL,UAAAA,QAAQ,EAAE,kBADR;AAEFM,UAAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAEF,KAAK,CAACT,MAAN,CAAaW;AAA7B;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAiBE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CAHF,CADF;AA2BD","sourcesContent":["import React, { Suspense, lazy, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport ModeSelector from './ModeSelector'\n\nconst AddLiquidity = lazy(() => import('./AddLiquidity'))\nconst RemoveLiquidity = lazy(() => import('./RemoveLiquidity'))\nconst CreateExchange = lazy(() => import('./CreateExchange'))\n\nexport default function Pool({ params }) {\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  const AddLiquidityParams = () => <AddLiquidity params={params} />\n\n  const RemoveLiquidityParams = () => <RemoveLiquidity params={params} />\n\n  const CreateExchangeParams = () => <CreateExchange params={params} />\n\n  return (\n    <>\n      <ModeSelector />\n      {/* this Suspense is for route code-splitting */}\n      <Suspense fallback={null}>\n        <Switch>\n          <Route exact strict path=\"/add-liquidity\" component={AddLiquidityParams} />\n          <Route exact strict path=\"/remove-liquidity\" component={RemoveLiquidityParams} />\n          <Route exact strict path=\"/create-exchange\" component={CreateExchangeParams} />\n          <Route\n            path=\"/create-exchange/:tokenAddress\"\n            render={({ match }) => {\n              return (\n                <Redirect\n                  to={{\n                    pathname: '/create-exchange',\n                    state: { tokenAddress: match.params.tokenAddress }\n                  }}\n                />\n              )\n            }}\n          />\n          <Redirect to=\"/add-liquidity\" />\n        </Switch>\n      </Suspense>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}